"use strict";(self.webpackChunkcodebank=self.webpackChunkcodebank||[]).push([[8929],{8929:(n,e,r)=>{r.r(e),r.d(e,{default:()=>s});const s=[{title:"LINQ Basics",examples:[{title:"Simple LINQ operations",code:'// Create a list of numbers\nList<int> numbers = new List<int> { 1, 2, 3, 4, 5, 6, 7, 8, 9, 10 };\n\n// Find even numbers\nvar evenNumbers = numbers.Where(n => n % 2 == 0);\nforeach (int num in evenNumbers)\n{\n    Console.WriteLine("Even: " + num);\n}\n\n// Double each number\nvar doubled = numbers.Select(n => n * 2);\nforeach (int num in doubled)\n{\n    Console.WriteLine("Doubled: " + num);\n}\n\n// Sort numbers\nvar sorted = numbers.OrderBy(n => n);\nforeach (int num in sorted)\n{\n    Console.WriteLine("Sorted: " + num);\n}'},{title:"Working with strings",code:'// List of names\nList<string> names = new List<string> { "Alice", "Bob", "Charlie", "David", "Eve" };\n\n// Find names that start with \'A\'\nvar namesStartingWithA = names.Where(name => name.StartsWith("A"));\nforeach (string name in namesStartingWithA)\n{\n    Console.WriteLine("Name starting with A: " + name);\n}\n\n// Convert names to uppercase\nvar upperNames = names.Select(name => name.ToUpper());\nforeach (string name in upperNames)\n{\n    Console.WriteLine("Uppercase: " + name);\n}\n\n// Sort names alphabetically\nvar sortedNames = names.OrderBy(name => name);\nforeach (string name in sortedNames)\n{\n    Console.WriteLine("Sorted: " + name);\n}'}]},{title:"Simple Aggregations",examples:[{title:"Basic math operations",code:'List<int> numbers = new List<int> { 1, 2, 3, 4, 5 };\n\n// Sum all numbers\nint sum = numbers.Sum();\nConsole.WriteLine("Sum: " + sum);\n\n// Find the biggest number\nint max = numbers.Max();\nConsole.WriteLine("Max: " + max);\n\n// Find the smallest number\nint min = numbers.Min();\nConsole.WriteLine("Min: " + min);\n\n// Count how many numbers\nint count = numbers.Count();\nConsole.WriteLine("Count: " + count);\n\n// Average of all numbers\ndouble average = numbers.Average();\nConsole.WriteLine("Average: " + average);'},{title:"Working with objects",code:'// Simple class\npublic class Person\n{\n    public string Name { get; set; }\n    public int Age { get; set; }\n}\n\n// List of people\nList<Person> people = new List<Person>\n{\n    new Person { Name = "Alice", Age = 25 },\n    new Person { Name = "Bob", Age = 30 },\n    new Person { Name = "Charlie", Age = 35 },\n    new Person { Name = "Diana", Age = 28 }\n};\n\n// Find people older than 30\nvar olderPeople = people.Where(p => p.Age > 30);\nforeach (Person person in olderPeople)\n{\n    Console.WriteLine(person.Name + " is " + person.Age + " years old");\n}\n\n// Get just the names\nvar names = people.Select(p => p.Name);\nforeach (string name in names)\n{\n    Console.WriteLine("Name: " + name);\n}\n\n// Sort by age\nvar sortedByAge = people.OrderBy(p => p.Age);\nforeach (Person person in sortedByAge)\n{\n    Console.WriteLine(person.Name + " - " + person.Age);\n}'}]}]}}]);
//# sourceMappingURL=8929.b0316aae.chunk.js.map