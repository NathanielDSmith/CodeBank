{"version":3,"file":"static/js/2284.20c279bf.chunk.js","mappings":"kIAAA,MA0CA,EA1CqB,CACnB,CACEA,MAAO,YACPC,SAAU,CACR,CACED,MAAO,iBACPE,KAAM,6KAER,CACEF,MAAO,sBACPE,KAAM,0NAIZ,CACEF,MAAO,2BACPC,SAAU,CACR,CACED,MAAO,aACPE,KAAM,8IAER,CACEF,MAAO,qCACPE,KAAM,6JAIZ,CACEF,MAAO,8BACPC,SAAU,CACR,CACED,MAAO,yCACPE,KAAM,+RAER,CACEF,MAAO,wCACPE,KAAM,iN","sources":["data/javascript/loops.ts"],"sourcesContent":["const loopsContent = [\r\n  {\r\n    title: 'For loops',\r\n    examples: [\r\n      {\r\n        title: 'Basic for loop',\r\n        code: '// Count from 1 to 5\\nfor (let i = 1; i <= 5; i++) {\\n  console.log(`Number: ${i}`);\\n}\\n// Output:\\n// Number: 1\\n// Number: 2\\n// Number: 3\\n// Number: 4\\n// Number: 5'\r\n      },\r\n      {\r\n        title: 'For loop with array',\r\n        code: 'const fruits = [\"apple\", \"banana\", \"orange\"];\\n\\nfor (let i = 0; i < fruits.length; i++) {\\n  console.log(`Fruit ${i + 1}: ${fruits[i]}`);\\n}\\n// Output:\\n// Fruit 1: apple\\n// Fruit 2: banana\\n// Fruit 3: orange'\r\n      }\r\n    ]\r\n  },\r\n  {\r\n    title: 'While and do-while loops',\r\n    examples: [\r\n      {\r\n        title: 'While loop',\r\n        code: 'let count = 0;\\n\\nwhile (count < 3) {\\n  console.log(`Count: ${count}`);\\n  count++;\\n}\\n// Output:\\n// Count: 0\\n// Count: 1\\n// Count: 2'\r\n      },\r\n      {\r\n        title: 'Do-while loop (runs at least once)',\r\n        code: 'let number = 1;\\n\\ndo {\\n  console.log(`Number: ${number}`);\\n  number++;\\n} while (number <= 3);\\n// Output:\\n// Number: 1\\n// Number: 2\\n// Number: 3'\r\n      }\r\n    ]\r\n  },\r\n  {\r\n    title: 'For...of and for...in loops',\r\n    examples: [\r\n      {\r\n        title: 'For...of loop (for arrays and strings)',\r\n        code: 'const colors = [\"red\", \"green\", \"blue\"];\\n\\nfor (const color of colors) {\\n  console.log(`Color: ${color}`);\\n}\\n// Output:\\n// Color: red\\n// Color: green\\n// Color: blue\\n\\n// Also works with strings\\nfor (const char of \"Hello\") {\\n  console.log(char);\\n}\\n// Output: H, e, l, l, o'\r\n      },\r\n      {\r\n        title: 'For...in loop (for object properties)',\r\n        code: 'const person = {\\n  name: \"John\",\\n  age: 30,\\n  city: \"New York\"\\n};\\n\\nfor (const key in person) {\\n  console.log(`${key}: ${person[key]}`);\\n}\\n// Output:\\n// name: John\\n// age: 30\\n// city: New York'\r\n      }\r\n    ]\r\n  }\r\n];\r\n\r\nexport default loopsContent; "],"names":["title","examples","code"],"sourceRoot":""}