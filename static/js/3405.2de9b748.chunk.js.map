{"version":3,"file":"static/js/3405.2de9b748.chunk.js","mappings":"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","sources":["components/PageHeader.tsx","components/SidePanel.tsx","components/ContentSection.tsx","components/CodeBlock.tsx","components/PageLayout.tsx","data/objectContent.ts","pages/ObjectManipulation.tsx","data/object|lazy|/^/.*/.ts$/|groupOptions: {}|namespace object","hooks/usePageNavigation.ts"],"sourcesContent":["import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport { PageHeaderProps } from '../types/index';\r\n\r\nconst PageHeader: React.FC<PageHeaderProps> = ({ title, icon }) => {\r\n  const getIconStyle = (icon: string) => {\r\n    // Special styling for text-based icons with consistent sizing and brighter colors\r\n    if (icon === 'TS' || icon === 'V' || icon === 'CSS' || icon === 'S' || icon === '[]' || icon === '{}') {\r\n      return 'font-mono font-bold text-lg sm:text-xl lg:text-2xl bg-cyan-500/30 px-2 py-1 rounded border border-cyan-400/50 text-cyan-300 min-w-[2.5rem] min-h-[2.5rem] flex items-center justify-center';\r\n    }\r\n    // Default styling for emoji icons to match the size\r\n    return 'text-lg sm:text-2xl lg:text-3xl min-w-[2.5rem] min-h-[2.5rem] flex items-center justify-center';\r\n  };\r\n\r\n  return (\r\n    <header className=\"bg-black/80 backdrop-blur-sm border-b border-green-500/30 sticky top-0 z-50\">\r\n      <div className=\"max-w-7xl mx-auto px-4 sm:px-6 lg:px-8\">\r\n        <div className=\"flex justify-between items-center py-3 sm:py-4 lg:py-6\">\r\n          <div className=\"flex items-center\">\r\n            <Link to=\"/\" className=\"text-green-400 hover:text-green-300 mr-1 sm:mr-2 lg:mr-4 font-mono transition-colors duration-300 text-xs sm:text-sm lg:text-base\">\r\n              <span className=\"text-green-300\">$</span> cd /home\r\n            </Link>\r\n            <div className=\"flex items-center\">\r\n              <span className={`text-lg sm:text-2xl lg:text-3xl mr-1 sm:mr-2 lg:mr-3 text-green-400 ${getIconStyle(icon)}`}>{icon}</span>\r\n              <h1 className=\"text-xs sm:text-lg lg:text-3xl font-bold text-green-400 font-mono matrix-glow break-words\">{title}</h1>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </header>\r\n  );\r\n};\r\n\r\nexport default PageHeader; ","import React from 'react';\r\nimport { SidePanelProps } from '../types/index';\r\n\r\nconst SidePanel: React.FC<SidePanelProps> = ({\r\n  sections,\r\n  activeSection,\r\n  searchTerm,\r\n  onSectionChange,\r\n  onSearchChange,\r\n  isOpen = true,\r\n  onToggle\r\n}) => {\r\n  const filteredSections = sections.filter(section =>\r\n    section.title.toLowerCase().includes(searchTerm.toLowerCase())\r\n  );\r\n\r\n  return (\r\n    <>\r\n      {/* Mobile Toggle Button */}\r\n      <div className=\"lg:hidden fixed top-28 right-4 z-50\">\r\n        <button\r\n          onClick={onToggle}\r\n          className=\"bg-black/80 backdrop-blur-sm border border-green-500/50 rounded-lg p-3 text-green-400 hover:text-green-300 transition-colors duration-300\"\r\n          aria-label=\"Toggle navigation menu\"\r\n        >\r\n          <svg className=\"w-6 h-6\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\r\n            {isOpen ? (\r\n              <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M6 18L18 6M6 6l12 12\" />\r\n            ) : (\r\n              <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M4 6h16M4 12h16M4 18h16\" />\r\n            )}\r\n          </svg>\r\n        </button>\r\n      </div>\r\n\r\n      {/* Mobile Overlay */}\r\n      {isOpen && (\r\n        <div \r\n          className=\"lg:hidden fixed inset-0 bg-black/50 backdrop-blur-sm z-40\"\r\n          onClick={onToggle}\r\n        />\r\n      )}\r\n\r\n      {/* Side Panel */}\r\n      <div className={`\r\n        ${isOpen ? 'translate-x-0' : '-translate-x-full lg:translate-x-0'}\r\n        lg:w-64 w-80 flex-shrink-0\r\n        fixed lg:relative top-0 left-0 h-full lg:h-auto\r\n        z-50 lg:z-auto\r\n        transition-transform duration-300 ease-in-out\r\n      `}>\r\n        <div className=\"bg-black/90 backdrop-blur-sm border border-green-500/30 p-6 h-full lg:h-auto lg:sticky lg:top-8 overflow-y-auto\">\r\n          <div className=\"lg:hidden flex justify-between items-center mb-4\">\r\n            <h3 className=\"text-lg font-semibold text-green-400 font-mono\">NAVIGATION</h3>\r\n            <button\r\n              onClick={onToggle}\r\n              className=\"text-green-400 hover:text-green-300 transition-colors duration-300\"\r\n              aria-label=\"Close navigation menu\"\r\n            >\r\n              <svg className=\"w-6 h-6\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\r\n                <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M6 18L18 6M6 6l12 12\" />\r\n              </svg>\r\n            </button>\r\n          </div>\r\n          \r\n          <h3 className=\"hidden lg:block text-lg font-semibold text-green-400 mb-4 font-mono\">NAVIGATION</h3>\r\n          \r\n          {/* Search Box */}\r\n          <div className=\"mb-4\">\r\n            <label htmlFor=\"search-topics\" className=\"sr-only\">\r\n              Search topics\r\n            </label>\r\n            <input\r\n              id=\"search-topics\"\r\n              type=\"text\"\r\n              placeholder=\"grep -r 'pattern' /*\"\r\n              value={searchTerm}\r\n              onChange={(e) => onSearchChange(e.target.value)}\r\n              className=\"w-full px-3 py-2 bg-black/50 border border-green-500/50 rounded-lg focus:outline-none focus:ring-2 focus:ring-green-500/20 focus:border-green-400 text-green-300 font-mono placeholder-green-500/50\"\r\n              aria-label=\"Search topics in table of contents\"\r\n            />\r\n          </div>\r\n          \r\n          <nav className=\"space-y-2\" aria-label=\"Table of contents\">\r\n            {filteredSections.map((section) => (\r\n              <button\r\n                key={section.id}\r\n                onClick={() => {\r\n                  onSectionChange(section.id);\r\n                  // Close mobile menu after selection\r\n                  if (window.innerWidth < 1024) {\r\n                    onToggle?.();\r\n                  }\r\n                }}\r\n                className={`w-full text-left px-3 py-2 rounded-lg transition-all duration-300 font-mono ${\r\n                  activeSection === section.id\r\n                    ? 'bg-green-500/20 text-green-300 border border-green-400 shadow-lg'\r\n                    : 'text-green-400 hover:bg-green-500/10 hover:text-green-300 border border-transparent hover:border-green-500/50'\r\n                }`}\r\n                aria-current={activeSection === section.id ? 'page' : undefined}\r\n              >\r\n                <span className=\"mr-2\" aria-hidden=\"true\">{section.icon}</span>\r\n                {section.title}\r\n              </button>\r\n            ))}\r\n            \r\n            {filteredSections.length === 0 && (\r\n              <div className=\"text-green-500 text-sm py-2 font-mono\" role=\"status\">\r\n                No topics found matching \"{searchTerm}\"\r\n              </div>\r\n            )}\r\n          </nav>\r\n        </div>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default SidePanel; ","import React from 'react';\r\nimport { ContentSectionProps } from '../types/index';\r\n\r\nconst ContentSection: React.FC<ContentSectionProps> = ({ title, children }) => {\r\n  return (\r\n    <section className=\"bg-black/70 backdrop-blur-sm rounded-lg p-3 sm:p-4 lg:p-6 border border-green-500/30 shadow-lg overflow-hidden\">\r\n      <h3 className=\"text-sm sm:text-lg lg:text-xl font-semibold text-green-400 mb-3 sm:mb-4 font-mono matrix-glow break-words\">{title}</h3>\r\n      <div className=\"overflow-x-auto\">\r\n        {children}\r\n      </div>\r\n    </section>\r\n  );\r\n};\r\n\r\nexport default ContentSection; ","import React from 'react';\r\nimport { CodeBlockProps } from '../types/index';\r\n\r\nconst CodeBlock: React.FC<CodeBlockProps> = ({ code, language = 'javascript' }) => {\r\n  return (\r\n    <div \r\n      className=\"bg-gray-900 text-green-400 p-3 sm:p-4 rounded-lg overflow-x-auto\"\r\n      role=\"code\"\r\n      aria-label={`${language} code example`}\r\n    >\r\n      <pre className=\"text-xs sm:text-sm font-mono whitespace-pre-wrap break-words m-0\">\r\n        <code className=\"break-all\">{code}</code>\r\n      </pre>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default CodeBlock; ","import React from 'react';\r\nimport PageHeader from './PageHeader';\r\nimport SidePanel from './SidePanel';\r\nimport ContentSection from './ContentSection';\r\nimport CodeBlock from './CodeBlock';\r\n\r\ninterface Example {\r\n  title: string;\r\n  code: string;\r\n}\r\n\r\ninterface Section {\r\n  title: string;\r\n  examples: Example[];\r\n}\r\n\r\ninterface PageLayoutProps {\r\n  title: string;\r\n  icon: string;\r\n  sections: any[];\r\n  activeSection: string;\r\n  searchTerm: string;\r\n  content: Section[] | null;\r\n  loading: boolean;\r\n  error: string | null;\r\n  isSidePanelOpen: boolean;\r\n  onSectionChange: (sectionId: string) => void;\r\n  onSearchChange: (term: string) => void;\r\n  onToggleSidePanel: () => void;\r\n  fallbackContent?: {\r\n    description: string;\r\n    benefits?: string;\r\n    difficulty?: string;\r\n    topics: Array<{ icon: string; text: string }>;\r\n    usefulLinks?: Array<{ name: string; url: string }>;\r\n  };\r\n}\r\n\r\nconst PageLayout: React.FC<PageLayoutProps> = ({\r\n  title,\r\n  icon,\r\n  sections,\r\n  activeSection,\r\n  searchTerm,\r\n  content,\r\n  loading,\r\n  error,\r\n  isSidePanelOpen,\r\n  onSectionChange,\r\n  onSearchChange,\r\n  onToggleSidePanel,\r\n  fallbackContent\r\n}) => {\r\n  const renderContent = () => {\r\n    if (loading) {\r\n      return (\r\n        <div className=\"text-center py-12\">\r\n          <div className=\"animate-spin rounded-full h-12 w-12 border-b-2 border-green-500 mx-auto mb-4\"></div>\r\n          <p className=\"text-green-400 font-mono\">INITIALIZING...</p>\r\n        </div>\r\n      );\r\n    }\r\n\r\n    if (error) {\r\n      return (\r\n        <div className=\"text-center py-12\">\r\n          <h2 className=\"text-2xl font-bold text-green-400 mb-4 font-mono\">\r\n            {sections.find(s => s.id === activeSection)?.title}\r\n          </h2>\r\n          <p className=\"text-red-400 mb-4 font-mono\">{error}</p>\r\n          <button \r\n            onClick={() => window.location.reload()}\r\n            className=\"px-4 py-2 bg-red-600 text-white rounded hover:bg-red-700 font-mono transition-colors duration-300\"\r\n          >\r\n            RETRY\r\n          </button>\r\n        </div>\r\n      );\r\n    }\r\n\r\n    if (!content) {\r\n      // If overview section is selected or no active section, show the enhanced landing content\r\n      if (!activeSection || activeSection === 'overview') {\r\n        return (\r\n          <div className=\"text-center py-12\">\r\n            <h2 className=\"text-2xl font-bold text-green-400 mb-4 font-mono\">\r\n              {title}\r\n            </h2>\r\n            <div className=\"max-w-4xl mx-auto space-y-6\">\r\n              {/* Description */}\r\n              <p className=\"text-green-300 font-mono text-lg leading-relaxed\">\r\n                {fallbackContent?.description || `Welcome to ${title}! This section covers essential concepts.`}\r\n              </p>\r\n              \r\n              {/* Benefits */}\r\n              {fallbackContent?.benefits && (\r\n                <div className=\"bg-black/50 border border-green-500/30 rounded-lg p-6 text-left\">\r\n                  <h3 className=\"text-lg font-bold text-green-400 mb-3 font-mono\">Why Learn This:</h3>\r\n                  <p className=\"text-green-300 font-mono leading-relaxed\">{fallbackContent.benefits}</p>\r\n                </div>\r\n              )}\r\n              \r\n              {/* Difficulty */}\r\n              {fallbackContent?.difficulty && (\r\n                <div className=\"inline-block\">\r\n                  <span className=\"inline-flex items-center px-3 py-1 rounded-full text-sm font-bold bg-green-600 text-black\">\r\n                    {fallbackContent.difficulty}\r\n                  </span>\r\n                </div>\r\n              )}\r\n              \r\n              {/* Topics */}\r\n              {fallbackContent?.topics && (\r\n                <div className=\"bg-black/50 border border-green-500/30 rounded-lg p-6 text-left\">\r\n                  <h3 className=\"text-lg font-bold text-green-400 mb-4 font-mono\">What you'll learn:</h3>\r\n                  <ul className=\"space-y-2 text-green-300 font-mono\">\r\n                    {fallbackContent.topics.map((topic, index) => (\r\n                      <li key={index} className=\"flex items-start\">\r\n                        <span className=\"text-green-400 mr-2\">{topic.icon}</span>\r\n                        <span>{topic.text}</span>\r\n                      </li>\r\n                    ))}\r\n                  </ul>\r\n                </div>\r\n              )}\r\n              \r\n              {/* Useful Links */}\r\n              {fallbackContent?.usefulLinks && (\r\n                <div className=\"bg-black/50 border border-green-500/30 rounded-lg p-6 text-left\">\r\n                  <h3 className=\"text-lg font-bold text-green-400 mb-4 font-mono\">Useful Resources:</h3>\r\n                  <div className=\"grid grid-cols-1 md:grid-cols-2 gap-3\">\r\n                    {fallbackContent.usefulLinks.map((link, index) => (\r\n                      <a\r\n                        key={index}\r\n                        href={link.url}\r\n                        target=\"_blank\"\r\n                        rel=\"noopener noreferrer\"\r\n                        className=\"flex items-center text-green-300 hover:text-green-200 font-mono transition-colors duration-300 group\"\r\n                      >\r\n                        <span className=\"text-green-400 mr-2 group-hover:scale-110 transition-transform duration-300\">🔗</span>\r\n                        <span className=\"group-hover:underline\">{link.name}</span>\r\n                      </a>\r\n                    ))}\r\n                  </div>\r\n                </div>\r\n              )}\r\n              \r\n              <p className=\"text-green-400 font-mono mt-6 text-sm\">\r\n                Select a topic from the sidebar to get started!\r\n              </p>\r\n            </div>\r\n          </div>\r\n        );\r\n      }\r\n      \r\n      // If there's an active section but no content, show a different message\r\n      const currentSection = sections.find(s => s.id === activeSection);\r\n      return (\r\n        <div className=\"text-center py-12\">\r\n          <h2 className=\"text-2xl font-bold text-green-400 mb-4 font-mono\">\r\n            {currentSection?.title || title}\r\n          </h2>\r\n          <p className=\"text-green-300 font-mono\">\r\n            Content for {currentSection?.title} will be added here...\r\n          </p>\r\n        </div>\r\n      );\r\n    }\r\n\r\n    return (\r\n      <div className=\"space-y-6\">\r\n        <h2 className=\"text-lg sm:text-xl lg:text-2xl font-bold text-green-400 mb-4 font-mono matrix-glow\">\r\n          {sections.find(s => s.id === activeSection)?.title}\r\n        </h2>\r\n        \r\n        {content.map((section, index) => (\r\n          <ContentSection key={index} title={section.title}>\r\n            <div className=\"space-y-4\">\r\n              {section.examples.map((example: Example, exampleIndex: number) => (\r\n                <div key={exampleIndex} className=\"bg-black/50 border border-green-500/30 rounded-lg p-4\">\r\n                  <h4 className=\"font-medium text-green-300 mb-2 font-mono\">{example.title}</h4>\r\n                  <CodeBlock code={example.code} />\r\n                </div>\r\n              ))}\r\n            </div>\r\n          </ContentSection>\r\n        ))}\r\n      </div>\r\n    );\r\n  };\r\n\r\n  return (\r\n    <div className=\"min-h-screen bg-black relative overflow-hidden\">\r\n      {/* Matrix digital rain background */}\r\n      <div className=\"absolute inset-0 opacity-10\">\r\n        <div className=\"matrix-rain\"></div>\r\n      </div>\r\n      \r\n      {/* Scan lines effect */}\r\n      <div className=\"absolute inset-0 opacity-5\">\r\n        <div className=\"scanlines\"></div>\r\n      </div>\r\n      \r\n      {/* Grid overlay */}\r\n      <div className=\"absolute inset-0 bg-gradient-to-b from-transparent via-green-900/5 to-green-900/10\"></div>\r\n      \r\n      <PageHeader title={title} icon={icon} />\r\n      \r\n      <div className=\"max-w-7xl mx-auto px-4 sm:px-6 lg:px-8 py-4 sm:py-8 relative z-10\">\r\n        <div className=\"flex gap-4 sm:gap-8\">\r\n          <SidePanel\r\n            sections={sections}\r\n            activeSection={activeSection}\r\n            searchTerm={searchTerm}\r\n            onSectionChange={onSectionChange}\r\n            onSearchChange={onSearchChange}\r\n            isOpen={isSidePanelOpen}\r\n            onToggle={onToggleSidePanel}\r\n          />\r\n          \r\n          <div className=\"flex-1 min-w-0\">\r\n            {renderContent()}\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default PageLayout; ","import { Section } from '../types/index';\r\n\r\nexport const objectSections: Section[] = [\r\n  { id: 'overview', title: 'Overview', icon: '📖' },\r\n  { id: 'basics', title: 'Basics', icon: '{}' },\r\n  { id: 'properties', title: 'Properties', icon: 'P' },\r\n  { id: 'methods', title: 'Methods', icon: 'M' },\r\n  { id: 'destructuring', title: 'Destructuring', icon: 'D' },\r\n  { id: 'spread', title: 'Spread', icon: 'S' }\r\n];\r\n\r\n// Lazy loading function for object content\r\nexport const loadObjectContent = async (sectionId: string): Promise<any[] | null> => {\r\n  // Return null for overview to show fallback content\r\n  if (sectionId === 'overview') {\r\n    return null;\r\n  }\r\n  \r\n  try {\r\n    const module = await import(`./object/${sectionId}.ts`);\r\n    return module.default;\r\n  } catch (error) {\r\n    console.error(`Failed to load object content for section: ${sectionId}`, error);\r\n    return [];\r\n  }\r\n};\r\n\r\n// Preload function for better UX\r\nexport const preloadObjectSection = (sectionId: string): void => {\r\n  import(`./object/${sectionId}.ts`).catch(() => {\r\n    // Silently fail for preloading\r\n  });\r\n}; ","import React, { useState, useEffect } from 'react';\r\nimport { usePageNavigation } from '../hooks/usePageNavigation';\r\nimport { objectSections, loadObjectContent, preloadObjectSection } from '../data/objectContent';\r\nimport PageLayout from '../components/PageLayout';\r\n\r\ninterface Example {\r\n  title: string;\r\n  code: string;\r\n}\r\n\r\ninterface Section {\r\n  title: string;\r\n  examples: Example[];\r\n}\r\n\r\nconst ObjectManipulation: React.FC = () => {\r\n  const { activeSection, searchTerm, handleSectionChange, handleSearchChange } = usePageNavigation('overview', objectSections);\r\n  const [content, setContent] = useState<Section[] | null>(null);\r\n  const [loading, setLoading] = useState(false);\r\n  const [error, setError] = useState<string | null>(null);\r\n  const [isSidePanelOpen, setIsSidePanelOpen] = useState(false);\r\n\r\n  useEffect(() => {\r\n    const loadContent = async () => {\r\n      setLoading(true);\r\n      setError(null);\r\n      \r\n      try {\r\n        const sectionContent = await loadObjectContent(activeSection);\r\n        setContent(sectionContent);\r\n      } catch (err) {\r\n        setError('Failed to load content');\r\n        console.error('Error loading content:', err);\r\n      } finally {\r\n        setLoading(false);\r\n      }\r\n    };\r\n\r\n    loadContent();\r\n  }, [activeSection]);\r\n\r\n  // Preload next section for better UX\r\n  useEffect(() => {\r\n    const currentIndex = objectSections.findIndex(s => s.id === activeSection);\r\n    if (currentIndex < objectSections.length - 1) {\r\n      const nextSection = objectSections[currentIndex + 1];\r\n      preloadObjectSection(nextSection.id);\r\n    }\r\n  }, [activeSection]);\r\n\r\n  const fallbackContent = {\r\n    description: \"Objects are the building blocks of JavaScript applications. Learn how to create, manipulate, and work with objects efficiently using modern JavaScript features.\",\r\n    benefits: \"Object manipulation is essential for working with APIs, building data structures, and creating maintainable code. These skills are fundamental for JavaScript development and are used in frameworks like React and Node.js.\",\r\n    difficulty: \"Beginner to Intermediate\",\r\n    topics: [\r\n      { icon: \"{}\", text: \"Basic object creation and manipulation\" },\r\n      { icon: \"{}\", text: \"Property access and modification\" },\r\n      { icon: \"{}\", text: \"Object destructuring and spread\" },\r\n      { icon: \"{}\", text: \"Object methods and prototypes\" },\r\n      { icon: \"{}\", text: \"Advanced object patterns\" }\r\n    ],\r\n    usefulLinks: [\r\n      { name: \"MDN Objects\", url: \"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object\" },\r\n      { name: \"JavaScript Object Guide\", url: \"https://javascript.info/object\" },\r\n      { name: \"Object Destructuring\", url: \"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Operators/Destructuring_assignment\" },\r\n      { name: \"Object Methods\", url: \"https://www.w3schools.com/js/js_object_methods.asp\" }\r\n    ]\r\n  };\r\n\r\n  return (\r\n    <PageLayout\r\n      title=\"Object Manipulation\"\r\n      icon=\"{}\"\r\n      sections={objectSections}\r\n      activeSection={activeSection}\r\n      searchTerm={searchTerm}\r\n      content={content}\r\n      loading={loading}\r\n      error={error}\r\n      isSidePanelOpen={isSidePanelOpen}\r\n      onSectionChange={handleSectionChange}\r\n      onSearchChange={handleSearchChange}\r\n      onToggleSidePanel={() => setIsSidePanelOpen(!isSidePanelOpen)}\r\n      fallbackContent={fallbackContent}\r\n    />\r\n  );\r\n};\r\n\r\nexport default ObjectManipulation; ","var map = {\n\t\"./basics.ts\": [\n\t\t268,\n\t\t268\n\t],\n\t\"./destructuring.ts\": [\n\t\t964,\n\t\t964\n\t],\n\t\"./methods.ts\": [\n\t\t8025,\n\t\t8025\n\t],\n\t\"./properties.ts\": [\n\t\t8906,\n\t\t8906\n\t],\n\t\"./spread.ts\": [\n\t\t7492,\n\t\t7492\n\t]\n};\nfunction webpackAsyncContext(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\treturn Promise.resolve().then(() => {\n\t\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\t\te.code = 'MODULE_NOT_FOUND';\n\t\t\tthrow e;\n\t\t});\n\t}\n\n\tvar ids = map[req], id = ids[0];\n\treturn __webpack_require__.e(ids[1]).then(() => {\n\t\treturn __webpack_require__(id);\n\t});\n}\nwebpackAsyncContext.keys = () => (Object.keys(map));\nwebpackAsyncContext.id = 5594;\nmodule.exports = webpackAsyncContext;","import { useState, useEffect } from 'react';\r\nimport { useLocation, useNavigate } from 'react-router-dom';\r\n\r\nexport const usePageNavigation = (defaultSection: string, sections: any[] = []) => {\r\n  const location = useLocation();\r\n  const navigate = useNavigate();\r\n  const [searchTerm, setSearchTerm] = useState('');\r\n\r\n  // Extract section from URL or use default\r\n  const getSectionFromUrl = () => {\r\n    const pathParts = location.pathname.split('/');\r\n    const lastPart = pathParts[pathParts.length - 1];\r\n    \r\n    // If the last part is empty or if we're on a main route (like /typescript), use default\r\n    if (!lastPart || pathParts.length === 2) {\r\n      return defaultSection;\r\n    }\r\n    \r\n    // Check if the last part is actually a valid section ID\r\n    const isValidSection = sections.some(section => section.id === lastPart);\r\n    return isValidSection ? lastPart : defaultSection;\r\n  };\r\n\r\n  const [activeSection, setActiveSection] = useState(getSectionFromUrl());\r\n\r\n  // Auto-redirect to first section if no section is specified\r\n  useEffect(() => {\r\n    const pathParts = location.pathname.split('/');\r\n    const isOnMainRoute = pathParts.length === 2;\r\n    \r\n    if (isOnMainRoute && sections.length > 0) {\r\n      const firstSection = sections[0];\r\n      if (firstSection) {\r\n        navigate(`${location.pathname}/${firstSection.id}`, { replace: true });\r\n      }\r\n    }\r\n  }, [location.pathname, sections, navigate]);\r\n\r\n  // Update active section when URL changes\r\n  useEffect(() => {\r\n    const sectionFromUrl = getSectionFromUrl();\r\n    if (sectionFromUrl !== activeSection) {\r\n      setActiveSection(sectionFromUrl);\r\n    }\r\n  }, [location.pathname]);\r\n\r\n  const handleSectionChange = (sectionId: string) => {\r\n    setActiveSection(sectionId);\r\n    // Update URL to reflect the current section\r\n    const currentPath = location.pathname;\r\n    const basePath = currentPath.split('/').slice(0, -1).join('/') || currentPath;\r\n    navigate(`${basePath}/${sectionId}`, { replace: true });\r\n  };\r\n\r\n  const handleSearchChange = (term: string) => {\r\n    setSearchTerm(term);\r\n  };\r\n\r\n  return {\r\n    activeSection,\r\n    searchTerm,\r\n    handleSectionChange,\r\n    handleSearchChange\r\n  };\r\n}; "],"names":["_ref","title","icon","_jsx","className","children","_jsxs","Link","to","concat","getIconStyle","sections","activeSection","searchTerm","onSectionChange","onSearchChange","isOpen","onToggle","filteredSections","filter","section","toLowerCase","includes","_Fragment","onClick","fill","stroke","viewBox","strokeLinecap","strokeLinejoin","strokeWidth","d","htmlFor","id","type","placeholder","value","onChange","e","target","map","window","innerWidth","undefined","length","role","code","language","content","loading","error","isSidePanelOpen","onToggleSidePanel","fallbackContent","PageHeader","SidePanel","renderContent","_sections$find2","_sections$find","find","s","location","reload","description","benefits","difficulty","topics","topic","index","text","usefulLinks","link","href","url","rel","name","currentSection","ContentSection","examples","example","exampleIndex","CodeBlock","objectSections","ObjectManipulation","handleSectionChange","handleSearchChange","usePageNavigation","setContent","useState","setLoading","setError","setIsSidePanelOpen","useEffect","async","sectionContent","sectionId","default","console","loadObjectContent","err","loadContent","currentIndex","findIndex","nextSection","catch","PageLayout","webpackAsyncContext","req","__webpack_require__","o","Promise","resolve","then","Error","ids","keys","Object","module","exports","defaultSection","arguments","useLocation","navigate","useNavigate","setSearchTerm","getSectionFromUrl","pathParts","pathname","split","lastPart","some","setActiveSection","firstSection","replace","sectionFromUrl","currentPath","basePath","slice","join","term"],"sourceRoot":""}