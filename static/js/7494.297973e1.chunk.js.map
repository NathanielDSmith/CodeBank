{"version":3,"file":"static/js/7494.297973e1.chunk.js","mappings":"kIAAA,SACE,CACEA,MAAO,uBACPC,SAAU,CACR,CACED,MAAO,uBACPE,KAAK,oTAiBP,CACEF,MAAO,sBACPE,KAAK,qgCAgDP,CACEF,MAAO,kBACPE,KAAK,2kBAwBP,CACEF,MAAO,wBACPE,KAAK,+eAuBP,CACEF,MAAO,mBACPE,KAAK,4hB","sources":["data/react/events.ts"],"sourcesContent":["export default [\r\n  {\r\n    title: 'React Event Handling',\r\n    examples: [\r\n      {\r\n        title: 'Basic Event Handling',\r\n        code: `import { useState } from 'react';\r\n\r\nfunction Button() {\r\n  const [count, setCount] = useState(0);\r\n  \r\n  const handleClick = (event) => {\r\n    event.preventDefault();\r\n    setCount(count + 1);\r\n  };\r\n  \r\n  return (\r\n    <button onClick={handleClick}>\r\n      Clicked {count} times\r\n    </button>\r\n  );\r\n}`\r\n      },\r\n      {\r\n        title: 'Form Event Handling',\r\n        code: `import { useState } from 'react';\r\n\r\nfunction ContactForm() {\r\n  const [formData, setFormData] = useState({\r\n    name: '',\r\n    email: '',\r\n    message: ''\r\n  });\r\n  \r\n  const handleChange = (event) => {\r\n    const { name, value } = event.target;\r\n    setFormData(prev => ({\r\n      ...prev,\r\n      [name]: value\r\n    }));\r\n  };\r\n  \r\n  const handleSubmit = (event) => {\r\n    event.preventDefault();\r\n    console.log('Form submitted:', formData);\r\n  };\r\n  \r\n  return (\r\n    <form onSubmit={handleSubmit}>\r\n      <input\r\n        name=\"name\"\r\n        value={formData.name}\r\n        onChange={handleChange}\r\n        placeholder=\"Name\"\r\n      />\r\n      <input\r\n        name=\"email\"\r\n        type=\"email\"\r\n        value={formData.email}\r\n        onChange={handleChange}\r\n        placeholder=\"Email\"\r\n      />\r\n      <textarea\r\n        name=\"message\"\r\n        value={formData.message}\r\n        onChange={handleChange}\r\n        placeholder=\"Message\"\r\n      />\r\n      <button type=\"submit\">Send</button>\r\n    </form>\r\n  );\r\n}`\r\n      },\r\n      {\r\n        title: 'Keyboard Events',\r\n        code: `import { useEffect } from 'react';\r\n\r\nfunction KeyboardHandler() {\r\n  useEffect(() => {\r\n    const handleKeyPress = (event) => {\r\n      if (event.key === 'Enter') {\r\n        console.log('Enter pressed');\r\n      }\r\n      if (event.ctrlKey && event.key === 's') {\r\n        event.preventDefault();\r\n        console.log('Save shortcut pressed');\r\n      }\r\n    };\r\n    \r\n    document.addEventListener('keydown', handleKeyPress);\r\n    \r\n    return () => {\r\n      document.removeEventListener('keydown', handleKeyPress);\r\n    };\r\n  }, []);\r\n  \r\n  return <div>Press Enter or Ctrl+S</div>;\r\n}`\r\n      },\r\n      {\r\n        title: 'Custom Event Handlers',\r\n        code: `function CustomButton({ onClick, children, ...props }) {\r\n  const handleClick = (event) => {\r\n    // Custom logic before calling parent handler\r\n    console.log('Button clicked');\r\n    \r\n    // Call parent handler if provided\r\n    if (onClick) {\r\n      onClick(event);\r\n    }\r\n  };\r\n  \r\n  return (\r\n    <button onClick={handleClick} {...props}>\r\n      {children}\r\n    </button>\r\n  );\r\n}\r\n\r\n// Usage\r\n<CustomButton onClick={() => alert('Custom button clicked!')}>\r\n  Click me\r\n</CustomButton>`\r\n      },\r\n      {\r\n        title: 'Event Delegation',\r\n        code: `function TodoList({ todos, onDelete }) {\r\n  const handleListClick = (event) => {\r\n    if (event.target.matches('.delete-btn')) {\r\n      const todoId = event.target.dataset.id;\r\n      onDelete(todoId);\r\n    }\r\n  };\r\n  \r\n  return (\r\n    <ul onClick={handleListClick}>\r\n      {todos.map(todo => (\r\n        <li key={todo.id}>\r\n          {todo.text}\r\n          <button \r\n            className=\"delete-btn\" \r\n            data-id={todo.id}\r\n          >\r\n            Delete\r\n          </button>\r\n        </li>\r\n      ))}\r\n    </ul>\r\n  );\r\n}`\r\n      }\r\n    ]\r\n  }\r\n]; "],"names":["title","examples","code"],"sourceRoot":""}