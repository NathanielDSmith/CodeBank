{"version":3,"file":"static/js/2909.de3fb07d.chunk.js","mappings":"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","sources":["components/ContentSection.tsx","components/PageLayout.tsx","components/CodeBlock.tsx","data/railsContent.ts","pages/RailsPage.tsx","components/PageHeader.tsx","components/SidePanel.tsx","hooks/usePageNavigation.ts"],"sourcesContent":["import React from 'react';\r\nimport { ContentSectionProps } from '../types/index';\r\n\r\nconst ContentSection: React.FC<ContentSectionProps> = ({ title, children }) => {\r\n  return (\r\n    <section className=\"bg-black/70 backdrop-blur-sm rounded-lg p-3 sm:p-4 lg:p-6 border border-green-500/30 shadow-lg overflow-hidden\">\r\n      <h3 className=\"text-sm sm:text-lg lg:text-xl font-semibold text-green-400 mb-3 sm:mb-4 font-mono matrix-glow break-words\">{title}</h3>\r\n      <div className=\"overflow-x-auto\">\r\n        {children}\r\n      </div>\r\n    </section>\r\n  );\r\n};\r\n\r\nexport default ContentSection; ","import React from 'react';\r\nimport PageHeader from './PageHeader';\r\nimport SidePanel from './SidePanel';\r\nimport ContentSection from './ContentSection';\r\nimport CodeBlock from './CodeBlock';\r\n\r\ninterface Example {\r\n  title: string;\r\n  code: string;\r\n}\r\n\r\ninterface Section {\r\n  title: string;\r\n  examples: Example[];\r\n}\r\n\r\ninterface PageLayoutProps {\r\n  title: string;\r\n  icon: string;\r\n  sections: any[];\r\n  activeSection: string;\r\n  searchTerm: string;\r\n  content: Section[] | null;\r\n  loading: boolean;\r\n  error: string | null;\r\n  isSidePanelOpen: boolean;\r\n  onSectionChange: (sectionId: string) => void;\r\n  onSearchChange: (term: string) => void;\r\n  onToggleSidePanel: () => void;\r\n  fallbackContent?: {\r\n    description: string;\r\n    topics: Array<{ icon: string; text: string }>;\r\n  };\r\n}\r\n\r\nconst PageLayout: React.FC<PageLayoutProps> = ({\r\n  title,\r\n  icon,\r\n  sections,\r\n  activeSection,\r\n  searchTerm,\r\n  content,\r\n  loading,\r\n  error,\r\n  isSidePanelOpen,\r\n  onSectionChange,\r\n  onSearchChange,\r\n  onToggleSidePanel,\r\n  fallbackContent\r\n}) => {\r\n  const renderContent = () => {\r\n    if (loading) {\r\n      return (\r\n        <div className=\"text-center py-12\">\r\n          <div className=\"animate-spin rounded-full h-12 w-12 border-b-2 border-green-500 mx-auto mb-4\"></div>\r\n          <p className=\"text-green-400 font-mono\">INITIALIZING...</p>\r\n        </div>\r\n      );\r\n    }\r\n\r\n    if (error) {\r\n      return (\r\n        <div className=\"text-center py-12\">\r\n          <h2 className=\"text-2xl font-bold text-green-400 mb-4 font-mono\">\r\n            {sections.find(s => s.id === activeSection)?.title}\r\n          </h2>\r\n          <p className=\"text-red-400 mb-4 font-mono\">{error}</p>\r\n          <button \r\n            onClick={() => window.location.reload()}\r\n            className=\"px-4 py-2 bg-red-600 text-white rounded hover:bg-red-700 font-mono transition-colors duration-300\"\r\n          >\r\n            RETRY\r\n          </button>\r\n        </div>\r\n      );\r\n    }\r\n\r\n    if (!content) {\r\n      const currentSection = sections.find(s => s.id === activeSection);\r\n      return (\r\n        <div className=\"text-center py-12\">\r\n          <h2 className=\"text-2xl font-bold text-green-400 mb-4 font-mono\">\r\n            {currentSection?.title || title}\r\n          </h2>\r\n          <div className=\"max-w-2xl mx-auto\">\r\n            <p className=\"text-green-300 font-mono mb-6\">\r\n              {fallbackContent?.description || `Welcome to ${title}! This section covers essential concepts.`}\r\n            </p>\r\n            {fallbackContent?.topics && (\r\n              <div className=\"bg-black/50 border border-green-500/30 rounded-lg p-6 text-left\">\r\n                <h3 className=\"text-lg font-bold text-green-400 mb-4 font-mono\">What you'll learn:</h3>\r\n                <ul className=\"space-y-2 text-green-300 font-mono\">\r\n                  {fallbackContent.topics.map((topic, index) => (\r\n                    <li key={index} className=\"flex items-start\">\r\n                      <span className=\"text-green-400 mr-2\">{topic.icon}</span>\r\n                      <span>{topic.text}</span>\r\n                    </li>\r\n                  ))}\r\n                </ul>\r\n              </div>\r\n            )}\r\n            <p className=\"text-green-400 font-mono mt-6 text-sm\">\r\n              Select a topic from the sidebar to get started!\r\n            </p>\r\n          </div>\r\n        </div>\r\n      );\r\n    }\r\n\r\n    return (\r\n      <div className=\"space-y-6\">\r\n        <h2 className=\"text-lg sm:text-xl lg:text-2xl font-bold text-green-400 mb-4 font-mono matrix-glow\">\r\n          {sections.find(s => s.id === activeSection)?.title}\r\n        </h2>\r\n        \r\n        {content.map((section, index) => (\r\n          <ContentSection key={index} title={section.title}>\r\n            <div className=\"space-y-4\">\r\n              {section.examples.map((example: Example, exampleIndex: number) => (\r\n                <div key={exampleIndex} className=\"bg-black/50 border border-green-500/30 rounded-lg p-4\">\r\n                  <h4 className=\"font-medium text-green-300 mb-2 font-mono\">{example.title}</h4>\r\n                  <CodeBlock code={example.code} />\r\n                </div>\r\n              ))}\r\n            </div>\r\n          </ContentSection>\r\n        ))}\r\n      </div>\r\n    );\r\n  };\r\n\r\n  return (\r\n    <div className=\"min-h-screen bg-black relative overflow-hidden\">\r\n      {/* Matrix digital rain background */}\r\n      <div className=\"absolute inset-0 opacity-10\">\r\n        <div className=\"matrix-rain\"></div>\r\n      </div>\r\n      \r\n      {/* Scan lines effect */}\r\n      <div className=\"absolute inset-0 opacity-5\">\r\n        <div className=\"scanlines\"></div>\r\n      </div>\r\n      \r\n      {/* Grid overlay */}\r\n      <div className=\"absolute inset-0 bg-gradient-to-b from-transparent via-green-900/5 to-green-900/10\"></div>\r\n      \r\n      <PageHeader title={title} icon={icon} />\r\n      \r\n      <div className=\"max-w-7xl mx-auto px-4 sm:px-6 lg:px-8 py-4 sm:py-8 relative z-10\">\r\n        <div className=\"flex gap-4 sm:gap-8\">\r\n          <SidePanel\r\n            sections={sections}\r\n            activeSection={activeSection}\r\n            searchTerm={searchTerm}\r\n            onSectionChange={onSectionChange}\r\n            onSearchChange={onSearchChange}\r\n            isOpen={isSidePanelOpen}\r\n            onToggle={onToggleSidePanel}\r\n          />\r\n          \r\n          <div className=\"flex-1 min-w-0\">\r\n            {renderContent()}\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default PageLayout; ","import React from 'react';\r\nimport { CodeBlockProps } from '../types/index';\r\n\r\nconst CodeBlock: React.FC<CodeBlockProps> = ({ code, language = 'javascript' }) => {\r\n  return (\r\n    <div \r\n      className=\"bg-gray-900 text-green-400 p-3 sm:p-4 rounded-lg overflow-x-auto\"\r\n      role=\"code\"\r\n      aria-label={`${language} code example`}\r\n    >\r\n      <pre className=\"text-xs sm:text-sm font-mono whitespace-pre-wrap break-words m-0\">\r\n        <code className=\"break-all\">{code}</code>\r\n      </pre>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default CodeBlock; ","import { Section, PageContent } from '../types/index';\r\n\r\nexport const railsSections: Section[] = [\r\n  { id: 'basics', title: 'Basics', icon: '📚' },\r\n  { id: 'mvc', title: 'MVC Structure', icon: '🏛️' },\r\n  { id: 'routing', title: 'Routing', icon: '🛣️' },\r\n  { id: 'activerecord', title: 'ActiveRecord', icon: '🗄️' },\r\n  { id: 'migrations', title: 'Migrations', icon: '📝' },\r\n  { id: 'controllers', title: 'Controllers & Views', icon: '🖥️' },\r\n  { id: 'rest', title: 'RESTful APIs', icon: '🔗' }\r\n];\r\n\r\nexport const railsContent: PageContent = {\r\n  basics: [\r\n    {\r\n      title: 'Getting Started',\r\n      examples: [\r\n        { title: 'Create new app', code: 'rails new myapp\\ncd myapp\\nrails server' },\r\n        { title: 'Generate resource', code: 'rails generate scaffold Post title:string content:text' }\r\n      ]\r\n    }\r\n  ],\r\n  mvc: [\r\n    {\r\n      title: 'What is MVC?',\r\n      examples: [\r\n        { title: 'MVC Overview', code: 'Model - Handles data and business logic\\nView - Displays data\\nController - Handles input and updates model/view' }\r\n      ]\r\n    }\r\n  ],\r\n  routing: [\r\n    {\r\n      title: 'How to define routes',\r\n      examples: [\r\n        { title: 'Basic route', code: 'get \"/welcome\", to: \"welcome#index\"' },\r\n        { title: 'Resource route', code: 'resources :posts' },\r\n        { title: 'Nested routes', code: 'resources :posts do\\n  resources :comments\\nend' }\r\n      ]\r\n    }\r\n  ],\r\n  activerecord: [\r\n    {\r\n      title: 'ActiveRecord basics',\r\n      examples: [\r\n        { title: 'Find records', code: 'Post.find(1)\\nPost.where(title: \"Hello\")\\nPost.all' },\r\n        { title: 'Create records', code: 'Post.create(title: \"New Post\")\\npost = Post.new\\npost.save' }\r\n      ]\r\n    }\r\n  ],\r\n  migrations: [\r\n    {\r\n      title: 'Database migrations',\r\n      examples: [\r\n        { title: 'Create migration', code: 'rails generate migration CreatePosts title:string content:text' },\r\n        { title: 'Run migration', code: 'rails db:migrate\\nrails db:rollback' }\r\n      ]\r\n    }\r\n  ],\r\n  controllers: [\r\n    {\r\n      title: 'Controllers and views',\r\n      examples: [\r\n        { title: 'Basic controller', code: 'class PostsController < ApplicationController\\n  def index\\n    @posts = Post.all\\n  end\\nend' },\r\n        { title: 'View template', code: '<h1>Posts</h1>\\n<% @posts.each do |post| %>\\n  <h2><%= post.title %></h2>\\n<% end %>' }\r\n      ]\r\n    }\r\n  ],\r\n  rest: [\r\n    {\r\n      title: 'RESTful conventions',\r\n      examples: [\r\n        { title: 'REST actions', code: 'GET /posts (index)\\nPOST /posts (create)\\nGET /posts/:id (show)\\nPUT /posts/:id (update)\\nDELETE /posts/:id (destroy)' },\r\n        { title: 'API response', code: 'render json: @posts\\nrender json: { status: \"success\", data: @post }' }\r\n      ]\r\n    }\r\n  ]\r\n}; ","import React, { useState } from 'react';\r\nimport { usePageNavigation } from '../hooks/usePageNavigation';\r\nimport { railsSections, railsContent } from '../data/railsContent';\r\nimport PageLayout from '../components/PageLayout';\r\n\r\ninterface Section {\r\n  title: string;\r\n  examples: { title: string; code: string }[];\r\n}\r\n\r\nconst RailsPage: React.FC = () => {\r\n  const { activeSection, searchTerm, handleSectionChange, handleSearchChange } = usePageNavigation('basics', railsSections);\r\n  const [isSidePanelOpen, setIsSidePanelOpen] = useState(false);\r\n\r\n  const content = railsContent[activeSection] || null;\r\n  const loading = false;\r\n  const error = null;\r\n\r\n  const fallbackContent = {\r\n    description: \"Welcome to Ruby on Rails! This section covers essential Rails concepts for web development.\",\r\n    topics: [\r\n      { icon: \"💎\", text: \"MVC architecture and conventions\" },\r\n      { icon: \"💎\", text: \"Routing and RESTful design\" },\r\n      { icon: \"💎\", text: \"ActiveRecord and database operations\" },\r\n      { icon: \"💎\", text: \"Controllers, views, and helpers\" },\r\n      { icon: \"💎\", text: \"Authentication and authorization\" }\r\n    ]\r\n  };\r\n\r\n  return (\r\n    <PageLayout\r\n      title=\"Ruby on Rails\"\r\n      icon=\"💎\"\r\n      sections={railsSections}\r\n      activeSection={activeSection}\r\n      searchTerm={searchTerm}\r\n      content={content}\r\n      loading={loading}\r\n      error={error}\r\n      isSidePanelOpen={isSidePanelOpen}\r\n      onSectionChange={handleSectionChange}\r\n      onSearchChange={handleSearchChange}\r\n      onToggleSidePanel={() => setIsSidePanelOpen(!isSidePanelOpen)}\r\n      fallbackContent={fallbackContent}\r\n    />\r\n  );\r\n};\r\n\r\nexport default RailsPage; ","import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport { PageHeaderProps } from '../types/index';\r\n\r\nconst PageHeader: React.FC<PageHeaderProps> = ({ title, icon }) => {\r\n  const getIconStyle = (icon: string) => {\r\n    // Special styling for text-based icons with consistent sizing and brighter colors\r\n    if (icon === 'TS' || icon === 'V' || icon === 'CSS' || icon === 'S' || icon === '[]' || icon === '{}') {\r\n      return 'font-mono font-bold text-lg sm:text-xl lg:text-2xl bg-cyan-500/30 px-2 py-1 rounded border border-cyan-400/50 text-cyan-300 min-w-[2.5rem] min-h-[2.5rem] flex items-center justify-center';\r\n    }\r\n    // Default styling for emoji icons to match the size\r\n    return 'text-lg sm:text-2xl lg:text-3xl min-w-[2.5rem] min-h-[2.5rem] flex items-center justify-center';\r\n  };\r\n\r\n  return (\r\n    <header className=\"bg-black/80 backdrop-blur-sm border-b border-green-500/30 sticky top-0 z-50\">\r\n      <div className=\"max-w-7xl mx-auto px-4 sm:px-6 lg:px-8\">\r\n        <div className=\"flex justify-between items-center py-3 sm:py-4 lg:py-6\">\r\n          <div className=\"flex items-center\">\r\n            <Link to=\"/\" className=\"text-green-400 hover:text-green-300 mr-1 sm:mr-2 lg:mr-4 font-mono transition-colors duration-300 text-xs sm:text-sm lg:text-base\">\r\n              <span className=\"text-green-300\">$</span> cd /home\r\n            </Link>\r\n            <div className=\"flex items-center\">\r\n              <span className={`text-lg sm:text-2xl lg:text-3xl mr-1 sm:mr-2 lg:mr-3 text-green-400 ${getIconStyle(icon)}`}>{icon}</span>\r\n              <h1 className=\"text-xs sm:text-lg lg:text-3xl font-bold text-green-400 font-mono matrix-glow break-words\">{title}</h1>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </header>\r\n  );\r\n};\r\n\r\nexport default PageHeader; ","import React from 'react';\r\nimport { SidePanelProps } from '../types/index';\r\n\r\nconst SidePanel: React.FC<SidePanelProps> = ({\r\n  sections,\r\n  activeSection,\r\n  searchTerm,\r\n  onSectionChange,\r\n  onSearchChange,\r\n  isOpen = true,\r\n  onToggle\r\n}) => {\r\n  const filteredSections = sections.filter(section =>\r\n    section.title.toLowerCase().includes(searchTerm.toLowerCase())\r\n  );\r\n\r\n  return (\r\n    <>\r\n      {/* Mobile Toggle Button */}\r\n      <div className=\"lg:hidden fixed top-28 right-4 z-50\">\r\n        <button\r\n          onClick={onToggle}\r\n          className=\"bg-black/80 backdrop-blur-sm border border-green-500/50 rounded-lg p-3 text-green-400 hover:text-green-300 transition-colors duration-300\"\r\n          aria-label=\"Toggle navigation menu\"\r\n        >\r\n          <svg className=\"w-6 h-6\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\r\n            {isOpen ? (\r\n              <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M6 18L18 6M6 6l12 12\" />\r\n            ) : (\r\n              <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M4 6h16M4 12h16M4 18h16\" />\r\n            )}\r\n          </svg>\r\n        </button>\r\n      </div>\r\n\r\n      {/* Mobile Overlay */}\r\n      {isOpen && (\r\n        <div \r\n          className=\"lg:hidden fixed inset-0 bg-black/50 backdrop-blur-sm z-40\"\r\n          onClick={onToggle}\r\n        />\r\n      )}\r\n\r\n      {/* Side Panel */}\r\n      <div className={`\r\n        ${isOpen ? 'translate-x-0' : '-translate-x-full lg:translate-x-0'}\r\n        lg:w-64 w-80 flex-shrink-0\r\n        fixed lg:relative top-0 left-0 h-full lg:h-auto\r\n        z-50 lg:z-auto\r\n        transition-transform duration-300 ease-in-out\r\n      `}>\r\n        <div className=\"bg-black/90 backdrop-blur-sm border border-green-500/30 p-6 h-full lg:h-auto lg:sticky lg:top-8 overflow-y-auto\">\r\n          <div className=\"lg:hidden flex justify-between items-center mb-4\">\r\n            <h3 className=\"text-lg font-semibold text-green-400 font-mono\">NAVIGATION</h3>\r\n            <button\r\n              onClick={onToggle}\r\n              className=\"text-green-400 hover:text-green-300 transition-colors duration-300\"\r\n              aria-label=\"Close navigation menu\"\r\n            >\r\n              <svg className=\"w-6 h-6\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\r\n                <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M6 18L18 6M6 6l12 12\" />\r\n              </svg>\r\n            </button>\r\n          </div>\r\n          \r\n          <h3 className=\"hidden lg:block text-lg font-semibold text-green-400 mb-4 font-mono\">NAVIGATION</h3>\r\n          \r\n          {/* Search Box */}\r\n          <div className=\"mb-4\">\r\n            <label htmlFor=\"search-topics\" className=\"sr-only\">\r\n              Search topics\r\n            </label>\r\n            <input\r\n              id=\"search-topics\"\r\n              type=\"text\"\r\n              placeholder=\"grep -r 'pattern' /*\"\r\n              value={searchTerm}\r\n              onChange={(e) => onSearchChange(e.target.value)}\r\n              className=\"w-full px-3 py-2 bg-black/50 border border-green-500/50 rounded-lg focus:outline-none focus:ring-2 focus:ring-green-500/20 focus:border-green-400 text-green-300 font-mono placeholder-green-500/50\"\r\n              aria-label=\"Search topics in table of contents\"\r\n            />\r\n          </div>\r\n          \r\n          <nav className=\"space-y-2\" aria-label=\"Table of contents\">\r\n            {filteredSections.map((section) => (\r\n              <button\r\n                key={section.id}\r\n                onClick={() => {\r\n                  onSectionChange(section.id);\r\n                  // Close mobile menu after selection\r\n                  if (window.innerWidth < 1024) {\r\n                    onToggle?.();\r\n                  }\r\n                }}\r\n                className={`w-full text-left px-3 py-2 rounded-lg transition-all duration-300 font-mono ${\r\n                  activeSection === section.id\r\n                    ? 'bg-green-500/20 text-green-300 border border-green-400 shadow-lg'\r\n                    : 'text-green-400 hover:bg-green-500/10 hover:text-green-300 border border-transparent hover:border-green-500/50'\r\n                }`}\r\n                aria-current={activeSection === section.id ? 'page' : undefined}\r\n              >\r\n                <span className=\"mr-2\" aria-hidden=\"true\">{section.icon}</span>\r\n                {section.title}\r\n              </button>\r\n            ))}\r\n            \r\n            {filteredSections.length === 0 && (\r\n              <div className=\"text-green-500 text-sm py-2 font-mono\" role=\"status\">\r\n                No topics found matching \"{searchTerm}\"\r\n              </div>\r\n            )}\r\n          </nav>\r\n        </div>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default SidePanel; ","import { useState, useEffect } from 'react';\r\nimport { useLocation, useNavigate } from 'react-router-dom';\r\n\r\nexport const usePageNavigation = (defaultSection: string, sections: any[] = []) => {\r\n  const location = useLocation();\r\n  const navigate = useNavigate();\r\n  const [searchTerm, setSearchTerm] = useState('');\r\n\r\n  // Extract section from URL or use default\r\n  const getSectionFromUrl = () => {\r\n    const pathParts = location.pathname.split('/');\r\n    const lastPart = pathParts[pathParts.length - 1];\r\n    \r\n    // If the last part is empty or if we're on a main route (like /typescript), use default\r\n    if (!lastPart || pathParts.length === 2) {\r\n      return defaultSection;\r\n    }\r\n    \r\n    // Check if the last part is actually a valid section ID\r\n    const isValidSection = sections.some(section => section.id === lastPart);\r\n    return isValidSection ? lastPart : defaultSection;\r\n  };\r\n\r\n  const [activeSection, setActiveSection] = useState(getSectionFromUrl());\r\n\r\n  // Auto-redirect to first section if no section is specified\r\n  useEffect(() => {\r\n    const pathParts = location.pathname.split('/');\r\n    const isOnMainRoute = pathParts.length === 2;\r\n    \r\n    if (isOnMainRoute && sections.length > 0) {\r\n      const firstSection = sections[0];\r\n      if (firstSection) {\r\n        navigate(`${location.pathname}/${firstSection.id}`, { replace: true });\r\n      }\r\n    }\r\n  }, [location.pathname, sections, navigate]);\r\n\r\n  // Update active section when URL changes\r\n  useEffect(() => {\r\n    const sectionFromUrl = getSectionFromUrl();\r\n    if (sectionFromUrl !== activeSection) {\r\n      setActiveSection(sectionFromUrl);\r\n    }\r\n  }, [location.pathname]);\r\n\r\n  const handleSectionChange = (sectionId: string) => {\r\n    setActiveSection(sectionId);\r\n    // Update URL to reflect the current section\r\n    const currentPath = location.pathname;\r\n    const basePath = currentPath.split('/').slice(0, -1).join('/') || currentPath;\r\n    navigate(`${basePath}/${sectionId}`, { replace: true });\r\n  };\r\n\r\n  const handleSearchChange = (term: string) => {\r\n    setSearchTerm(term);\r\n  };\r\n\r\n  return {\r\n    activeSection,\r\n    searchTerm,\r\n    handleSectionChange,\r\n    handleSearchChange\r\n  };\r\n}; "],"names":["_ref","title","children","_jsxs","className","_jsx","icon","sections","activeSection","searchTerm","content","loading","error","isSidePanelOpen","onSectionChange","onSearchChange","onToggleSidePanel","fallbackContent","PageHeader","SidePanel","isOpen","onToggle","renderContent","_sections$find2","_sections$find","find","s","id","onClick","window","location","reload","currentSection","description","concat","topics","map","topic","index","text","section","ContentSection","examples","example","exampleIndex","CodeBlock","code","language","role","railsSections","railsContent","basics","mvc","routing","activerecord","migrations","controllers","rest","RailsPage","handleSectionChange","handleSearchChange","usePageNavigation","setIsSidePanelOpen","useState","PageLayout","Link","to","getIconStyle","filteredSections","filter","toLowerCase","includes","_Fragment","fill","stroke","viewBox","strokeLinecap","strokeLinejoin","strokeWidth","d","htmlFor","type","placeholder","value","onChange","e","target","innerWidth","undefined","length","defaultSection","arguments","useLocation","navigate","useNavigate","setSearchTerm","getSectionFromUrl","pathParts","pathname","split","lastPart","some","setActiveSection","useEffect","firstSection","replace","sectionFromUrl","sectionId","currentPath","basePath","slice","join","term"],"sourceRoot":""}