{"version":3,"file":"static/js/964.894ca204.chunk.js","mappings":"gIAAA,MAgIA,EAhI6B,CAC3B,CACEA,MAAO,6BACPC,SAAU,CACR,CACED,MAAO,qCACPE,KAAK,iYAiBP,CACEF,MAAO,iCACPE,KAAK,8dAmBP,CACEF,MAAO,oCACPE,KAAK,mhBAqBX,CACEF,MAAO,6BACPC,SAAU,CACR,CACED,MAAO,yCACPE,KAAK,g1BA4BP,CACEF,MAAO,mCACPE,KAAK,ojB","sources":["data/object/destructuring.ts"],"sourcesContent":["const destructuringContent = [\r\n  {\r\n    title: 'Basic Object Destructuring',\r\n    examples: [\r\n      {\r\n        title: 'Extracting properties from objects',\r\n        code: `const person = {\r\n  name: \"John\",\r\n  age: 30,\r\n  city: \"New York\"\r\n};\r\n\r\n// Extract properties into variables\r\nconst { name, age, city } = person;\r\n\r\nconsole.log(name); // \"John\"\r\nconsole.log(age); // 30\r\nconsole.log(city); // \"New York\"\r\n\r\n// You can also extract only some properties\r\nconst { name: personName } = person;\r\nconsole.log(personName); // \"John\" (only extracted name)`\r\n      },\r\n      {\r\n        title: 'Using different variable names',\r\n        code: `const person = {\r\n  name: \"John\",\r\n  age: 30,\r\n  city: \"New York\"\r\n};\r\n\r\n// Extract with different variable names\r\nconst { name: fullName, age: userAge, city: location } = person;\r\n\r\nconsole.log(fullName); // \"John\"\r\nconsole.log(userAge); // 30\r\nconsole.log(location); // \"New York\"\r\n\r\n// This is useful when you have naming conflicts\r\nconst name = \"Global Name\";\r\nconst { name: personName } = person;\r\nconsole.log(name); // \"Global Name\"\r\nconsole.log(personName); // \"John\"`\r\n      },\r\n      {\r\n        title: 'Default values with destructuring',\r\n        code: `const person = {\r\n  name: \"John\",\r\n  age: 30\r\n  // Note: no city property\r\n};\r\n\r\n// Use default values for missing properties\r\nconst { name, age, city = \"Unknown\", country = \"USA\" } = person;\r\n\r\nconsole.log(name); // \"John\"\r\nconsole.log(age); // 30\r\nconsole.log(city); // \"Unknown\" (default value)\r\nconsole.log(country); // \"USA\" (default value)\r\n\r\n// You can combine renaming with defaults\r\nconst { name: fullName, city: location = \"Unknown\" } = person;\r\nconsole.log(fullName); // \"John\"\r\nconsole.log(location); // \"Unknown\"`\r\n      }\r\n    ]\r\n  },\r\n  {\r\n    title: 'Destructuring in Functions',\r\n    examples: [\r\n      {\r\n        title: 'Function parameters with destructuring',\r\n        code: `// Function that takes an object as parameter\r\nfunction printPerson(person) {\r\n  console.log(person.name + \" is \" + person.age + \" years old\");\r\n}\r\n\r\n// Same function using destructuring\r\nfunction printPersonDestructured({ name, age }) {\r\n  console.log(name + \" is \" + age + \" years old\");\r\n}\r\n\r\nconst person = {\r\n  name: \"John\",\r\n  age: 30,\r\n  city: \"New York\"\r\n};\r\n\r\nprintPerson(person); // \"John is 30 years old\"\r\nprintPersonDestructured(person); // \"John is 30 years old\"\r\n\r\n// With default values\r\nfunction greetPerson({ name = \"Unknown\", age = 0 }) {\r\n  console.log(\"Hello, \" + name + \"! You are \" + age + \" years old.\");\r\n}\r\n\r\ngreetPerson({ name: \"Alice\", age: 25 }); // \"Hello, Alice! You are 25 years old.\"\r\ngreetPerson({ name: \"Bob\" }); // \"Hello, Bob! You are 0 years old.\"\r\ngreetPerson({}); // \"Hello, Unknown! You are 0 years old.\"`\r\n      },\r\n      {\r\n        title: 'Returning objects from functions',\r\n        code: `// Function that returns an object\r\nfunction createPerson(name, age) {\r\n  return {\r\n    name: name,\r\n    age: age,\r\n    greeting: \"Hello, I'm \" + name\r\n  };\r\n}\r\n\r\nconst person = createPerson(\"John\", 30);\r\n\r\n// Destructure the returned object\r\nconst { name, age, greeting } = createPerson(\"Alice\", 25);\r\n\r\nconsole.log(name); // \"Alice\"\r\nconsole.log(age); // 25\r\nconsole.log(greeting); // \"Hello, I'm Alice\"\r\n\r\n// You can also destructure directly in the function call\r\nconst { name: personName } = createPerson(\"Bob\", 35);\r\nconsole.log(personName); // \"Bob\"`\r\n      }\r\n    ]\r\n  }\r\n];\r\n\r\nexport default destructuringContent; "],"names":["title","examples","code"],"sourceRoot":""}