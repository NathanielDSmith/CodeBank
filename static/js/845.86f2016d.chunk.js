"use strict";(self.webpackChunkcodebank=self.webpackChunkcodebank||[]).push([[845],{845:(n,e,o)=>{o.r(e),o.d(e,{default:()=>t});const t=[{title:"React Performance Basics",examples:[{title:"Using React.memo",code:"import React from 'react';\n\nconst UserCard = React.memo(({ user }) => {\n  return (\n    <div>\n      <h3>{user.name}</h3>\n      <p>{user.email}</p>\n    </div>\n  );\n});\n\n// This component only re-renders when user prop changes\nexport default UserCard;"},{title:"useMemo for Calculations",code:"import { useMemo } from 'react';\n\nfunction TodoList({ todos, filter }) {\n  const filteredTodos = useMemo(() => {\n    return todos.filter(todo => \n      todo.text.toLowerCase().includes(filter.toLowerCase())\n    );\n  }, [todos, filter]);\n  \n  return (\n    <ul>\n      {filteredTodos.map(todo => (\n        <li key={todo.id}>{todo.text}</li>\n      ))}\n    </ul>\n  );\n}"},{title:"useCallback for Functions",code:"import { useCallback } from 'react';\n\nfunction TodoItem({ todo, onToggle }) {\n  const handleToggle = useCallback(() => {\n    onToggle(todo.id);\n  }, [todo.id, onToggle]);\n  \n  return (\n    <li>\n      <input\n        type=\"checkbox\"\n        checked={todo.completed}\n        onChange={handleToggle}\n      />\n      {todo.text}\n    </li>\n  );\n}"},{title:"Lazy Loading Components",code:"import { lazy, Suspense } from 'react';\n\nconst UserProfile = lazy(() => import('./UserProfile'));\n\nfunction App() {\n  return (\n    <div>\n      <h1>My App</h1>\n      <Suspense fallback={<div>Loading profile...</div>}>\n        <UserProfile />\n      </Suspense>\n    </div>\n  );\n}"},{title:"Key Prop for Lists",code:"function TodoList({ todos }) {\n  return (\n    <ul>\n      {todos.map(todo => (\n        <li key={todo.id}>\n          {todo.text}\n        </li>\n      ))}\n    </ul>\n  );\n}\n\n// Always use unique, stable keys for better performance"}]}]}}]);
//# sourceMappingURL=845.86f2016d.chunk.js.map