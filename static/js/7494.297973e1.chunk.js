"use strict";(self.webpackChunkcodebank=self.webpackChunkcodebank||[]).push([[7494],{7494:(n,e,t)=>{t.r(e),t.d(e,{default:()=>o});const o=[{title:"React Event Handling",examples:[{title:"Basic Event Handling",code:"import { useState } from 'react';\n\nfunction Button() {\n  const [count, setCount] = useState(0);\n  \n  const handleClick = (event) => {\n    event.preventDefault();\n    setCount(count + 1);\n  };\n  \n  return (\n    <button onClick={handleClick}>\n      Clicked {count} times\n    </button>\n  );\n}"},{title:"Form Event Handling",code:'import { useState } from \'react\';\n\nfunction ContactForm() {\n  const [formData, setFormData] = useState({\n    name: \'\',\n    email: \'\',\n    message: \'\'\n  });\n  \n  const handleChange = (event) => {\n    const { name, value } = event.target;\n    setFormData(prev => ({\n      ...prev,\n      [name]: value\n    }));\n  };\n  \n  const handleSubmit = (event) => {\n    event.preventDefault();\n    console.log(\'Form submitted:\', formData);\n  };\n  \n  return (\n    <form onSubmit={handleSubmit}>\n      <input\n        name="name"\n        value={formData.name}\n        onChange={handleChange}\n        placeholder="Name"\n      />\n      <input\n        name="email"\n        type="email"\n        value={formData.email}\n        onChange={handleChange}\n        placeholder="Email"\n      />\n      <textarea\n        name="message"\n        value={formData.message}\n        onChange={handleChange}\n        placeholder="Message"\n      />\n      <button type="submit">Send</button>\n    </form>\n  );\n}'},{title:"Keyboard Events",code:"import { useEffect } from 'react';\n\nfunction KeyboardHandler() {\n  useEffect(() => {\n    const handleKeyPress = (event) => {\n      if (event.key === 'Enter') {\n        console.log('Enter pressed');\n      }\n      if (event.ctrlKey && event.key === 's') {\n        event.preventDefault();\n        console.log('Save shortcut pressed');\n      }\n    };\n    \n    document.addEventListener('keydown', handleKeyPress);\n    \n    return () => {\n      document.removeEventListener('keydown', handleKeyPress);\n    };\n  }, []);\n  \n  return <div>Press Enter or Ctrl+S</div>;\n}"},{title:"Custom Event Handlers",code:"function CustomButton({ onClick, children, ...props }) {\n  const handleClick = (event) => {\n    // Custom logic before calling parent handler\n    console.log('Button clicked');\n    \n    // Call parent handler if provided\n    if (onClick) {\n      onClick(event);\n    }\n  };\n  \n  return (\n    <button onClick={handleClick} {...props}>\n      {children}\n    </button>\n  );\n}\n\n// Usage\n<CustomButton onClick={() => alert('Custom button clicked!')}>\n  Click me\n</CustomButton>"},{title:"Event Delegation",code:"function TodoList({ todos, onDelete }) {\n  const handleListClick = (event) => {\n    if (event.target.matches('.delete-btn')) {\n      const todoId = event.target.dataset.id;\n      onDelete(todoId);\n    }\n  };\n  \n  return (\n    <ul onClick={handleListClick}>\n      {todos.map(todo => (\n        <li key={todo.id}>\n          {todo.text}\n          <button \n            className=\"delete-btn\" \n            data-id={todo.id}\n          >\n            Delete\n          </button>\n        </li>\n      ))}\n    </ul>\n  );\n}"}]}]}}]);
//# sourceMappingURL=7494.297973e1.chunk.js.map