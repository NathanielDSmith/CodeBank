"use strict";(self.webpackChunkcodebank=self.webpackChunkcodebank||[]).push([[8692],{8692:(n,t,e)=>{e.r(t),e.d(t,{default:()=>r});const r=[{title:"Basic HTTP Server",code:'package main\n\nimport (\n    "fmt"\n    "net/http"\n)\n\nfunc main() {\n    http.HandleFunc("/", func(w http.ResponseWriter, r *http.Request) {\n        fmt.Fprintf(w, "Hello, Go!")\n    })\n    \n    fmt.Println("Server starting on :8080")\n    http.ListenAndServe(":8080", nil)\n}'},{title:"HTTP Server with JSON Response",code:'package main\n\nimport (\n    "encoding/json"\n    "net/http"\n)\n\ntype User struct {\n    Name string `json:"name"`\n    Age  int    `json:"age"`\n}\n\nfunc main() {\n    http.HandleFunc("/user", func(w http.ResponseWriter, r *http.Request) {\n        user := User{Name: "Alice", Age: 30}\n        \n        w.Header().Set("Content-Type", "application/json")\n        json.NewEncoder(w).Encode(user)\n    })\n    \n    http.ListenAndServe(":8080", nil)\n}'},{title:"HTTP Server with Query Parameters",code:'package main\n\nimport (\n    "fmt"\n    "net/http"\n)\n\nfunc main() {\n    http.HandleFunc("/greet", func(w http.ResponseWriter, r *http.Request) {\n        name := r.URL.Query().Get("name")\n        if name == "" {\n            name = "World"\n        }\n        \n        fmt.Fprintf(w, "Hello, %s!", name)\n    })\n    \n    http.ListenAndServe(":8080", nil)\n}'},{title:"HTTP Server with Different Methods",code:'package main\n\nimport (\n    "fmt"\n    "net/http"\n)\n\nfunc main() {\n    http.HandleFunc("/api/users", func(w http.ResponseWriter, r *http.Request) {\n        switch r.Method {\n        case "GET":\n            fmt.Fprintf(w, "Getting users")\n        case "POST":\n            fmt.Fprintf(w, "Creating user")\n        case "PUT":\n            fmt.Fprintf(w, "Updating user")\n        case "DELETE":\n            fmt.Fprintf(w, "Deleting user")\n        default:\n            http.Error(w, "Method not allowed", http.StatusMethodNotAllowed)\n        }\n    })\n    \n    http.ListenAndServe(":8080", nil)\n}'},{title:"Static File Server",code:'package main\n\nimport (\n    "net/http"\n)\n\nfunc main() {\n    // Serve static files from "static" directory\n    fs := http.FileServer(http.Dir("static"))\n    http.Handle("/static/", http.StripPrefix("/static/", fs))\n    \n    // Serve index.html at root\n    http.HandleFunc("/", func(w http.ResponseWriter, r *http.Request) {\n        http.ServeFile(w, r, "static/index.html")\n    })\n    \n    http.ListenAndServe(":8080", nil)\n}'}]}}]);
//# sourceMappingURL=8692.1bb82ff0.chunk.js.map