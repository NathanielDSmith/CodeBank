"use strict";(self.webpackChunkcodebank=self.webpackChunkcodebank||[]).push([[8025],{8025:(e,n,o)=>{o.r(n),o.d(n,{default:()=>t});const t=[{title:"Basic Object Methods",examples:[{title:"Object.keys() - get all property names",code:'const person = {\n  name: "John",\n  age: 30,\n  city: "New York"\n};\n\n// Get all property names as an array\nconst keys = Object.keys(person);\nconsole.log(keys); // ["name", "age", "city"]\n\n// Loop through all properties\nkeys.forEach(key => {\n  console.log(key + ": " + person[key]);\n});\n// Output:\n// name: John\n// age: 30\n// city: New York'},{title:"Object.values() - get all property values",code:'const person = {\n  name: "John",\n  age: 30,\n  city: "New York"\n};\n\n// Get all property values as an array\nconst values = Object.values(person);\nconsole.log(values); // ["John", 30, "New York"]\n\n// Check if object has a specific value\nconsole.log(values.includes("John")); // true\nconsole.log(values.includes("London")); // false\n\n// Count how many properties the object has\nconsole.log(values.length); // 3'},{title:"Object.entries() - get key-value pairs",code:'const person = {\n  name: "John",\n  age: 30,\n  city: "New York"\n};\n\n// Get all key-value pairs as an array\nconst entries = Object.entries(person);\nconsole.log(entries);\n// [\n//   ["name", "John"],\n//   ["age", 30],\n//   ["city", "New York"]\n// ]\n\n// Loop through entries\nentries.forEach(([key, value]) => {\n  console.log(key + " is " + value);\n});\n// Output:\n// name is John\n// age is 30\n// city is New York\n\n// Find a specific entry\nconst nameEntry = entries.find(([key]) => key === "name");\nconsole.log(nameEntry); // ["name", "John"]'}]},{title:"Object.assign() - copying objects",examples:[{title:"Copying an object",code:'const original = {\n  name: "John",\n  age: 30\n};\n\n// Create a copy of the object\nconst copy = Object.assign({}, original);\nconsole.log(copy); // { name: "John", age: 30 }\n\n// The copy is separate from the original\ncopy.age = 31;\nconsole.log(original.age); // 30 (unchanged)\nconsole.log(copy.age); // 31 (changed)'},{title:"Merging objects",code:'const user = {\n  name: "John",\n  email: "john@example.com"\n};\n\nconst profile = {\n  age: 30,\n  city: "New York"\n};\n\n// Merge two objects into a new one\nconst completeUser = Object.assign({}, user, profile);\nconsole.log(completeUser);\n// { name: "John", email: "john@example.com", age: 30, city: "New York" }\n\n// If properties have the same name, the last one wins\nconst settings = {\n  theme: "dark",\n  notifications: true\n};\n\nconst userWithSettings = Object.assign({}, user, profile, settings);\nconsole.log(userWithSettings);\n// { name: "John", email: "john@example.com", age: 30, city: "New York", theme: "dark", notifications: true }'}]}]}}]);
//# sourceMappingURL=8025.a813878f.chunk.js.map