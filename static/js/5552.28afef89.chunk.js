"use strict";(self.webpackChunkcodebank=self.webpackChunkcodebank||[]).push([[5552],{61:(e,n,s)=>{s.d(n,{A:()=>o});s(5043);var t=s(579);const o=e=>{let{title:n,children:s}=e;return(0,t.jsxs)("section",{className:"bg-black/70 backdrop-blur-sm rounded-lg p-3 sm:p-4 lg:p-6 border border-green-500/30 shadow-lg overflow-hidden",children:[(0,t.jsx)("h3",{className:"text-sm sm:text-lg lg:text-xl font-semibold text-green-400 mb-3 sm:mb-4 font-mono matrix-glow break-words",children:n}),(0,t.jsx)("div",{className:"overflow-x-auto",children:s})]})}},454:(e,n,s)=>{s.d(n,{A:()=>c});s(5043);var t=s(3711),o=s(8128),r=s(61),a=s(1723),l=s(579);const c=e=>{let{title:n,icon:s,sections:c,activeSection:i,searchTerm:d,content:m,loading:h,error:p,isSidePanelOpen:x,onSectionChange:g,onSearchChange:u,onToggleSidePanel:f,fallbackContent:b}=e;return(0,l.jsxs)("div",{className:"min-h-screen bg-black relative overflow-hidden",children:[(0,l.jsx)("div",{className:"absolute inset-0 opacity-10",children:(0,l.jsx)("div",{className:"matrix-rain"})}),(0,l.jsx)("div",{className:"absolute inset-0 opacity-5",children:(0,l.jsx)("div",{className:"scanlines"})}),(0,l.jsx)("div",{className:"absolute inset-0 bg-gradient-to-b from-transparent via-green-900/5 to-green-900/10"}),(0,l.jsx)(t.A,{title:n,icon:s}),(0,l.jsx)("div",{className:"max-w-7xl mx-auto px-4 sm:px-6 lg:px-8 py-4 sm:py-8 relative z-10",children:(0,l.jsxs)("div",{className:"flex gap-4 sm:gap-8",children:[(0,l.jsx)(o.A,{sections:c,activeSection:i,searchTerm:d,onSectionChange:g,onSearchChange:u,isOpen:x,onToggle:f}),(0,l.jsx)("div",{className:"flex-1 min-w-0",children:(()=>{var e,s;if(h)return(0,l.jsxs)("div",{className:"text-center py-12",children:[(0,l.jsx)("div",{className:"animate-spin rounded-full h-12 w-12 border-b-2 border-green-500 mx-auto mb-4"}),(0,l.jsx)("p",{className:"text-green-400 font-mono",children:"INITIALIZING..."})]});if(p)return(0,l.jsxs)("div",{className:"text-center py-12",children:[(0,l.jsx)("h2",{className:"text-2xl font-bold text-green-400 mb-4 font-mono",children:null===(s=c.find(e=>e.id===i))||void 0===s?void 0:s.title}),(0,l.jsx)("p",{className:"text-red-400 mb-4 font-mono",children:p}),(0,l.jsx)("button",{onClick:()=>window.location.reload(),className:"px-4 py-2 bg-red-600 text-white rounded hover:bg-red-700 font-mono transition-colors duration-300",children:"RETRY"})]});if(!m){const e=c.find(e=>e.id===i);return(0,l.jsxs)("div",{className:"text-center py-12",children:[(0,l.jsx)("h2",{className:"text-2xl font-bold text-green-400 mb-4 font-mono",children:(null===e||void 0===e?void 0:e.title)||n}),(0,l.jsxs)("div",{className:"max-w-2xl mx-auto",children:[(0,l.jsx)("p",{className:"text-green-300 font-mono mb-6",children:(null===b||void 0===b?void 0:b.description)||"Welcome to ".concat(n,"! This section covers essential concepts.")}),(null===b||void 0===b?void 0:b.topics)&&(0,l.jsxs)("div",{className:"bg-black/50 border border-green-500/30 rounded-lg p-6 text-left",children:[(0,l.jsx)("h3",{className:"text-lg font-bold text-green-400 mb-4 font-mono",children:"What you'll learn:"}),(0,l.jsx)("ul",{className:"space-y-2 text-green-300 font-mono",children:b.topics.map((e,n)=>(0,l.jsxs)("li",{className:"flex items-start",children:[(0,l.jsx)("span",{className:"text-green-400 mr-2",children:e.icon}),(0,l.jsx)("span",{children:e.text})]},n))})]}),(0,l.jsx)("p",{className:"text-green-400 font-mono mt-6 text-sm",children:"Select a topic from the sidebar to get started!"})]})]})}return(0,l.jsxs)("div",{className:"space-y-6",children:[(0,l.jsx)("h2",{className:"text-lg sm:text-xl lg:text-2xl font-bold text-green-400 mb-4 font-mono matrix-glow",children:null===(e=c.find(e=>e.id===i))||void 0===e?void 0:e.title}),m.map((e,n)=>(0,l.jsx)(r.A,{title:e.title,children:(0,l.jsx)("div",{className:"space-y-4",children:e.examples.map((e,n)=>(0,l.jsxs)("div",{className:"bg-black/50 border border-green-500/30 rounded-lg p-4",children:[(0,l.jsx)("h4",{className:"font-medium text-green-300 mb-2 font-mono",children:e.title}),(0,l.jsx)(a.A,{code:e.code})]},n))})},n))]})})()})]})})]})}},1723:(e,n,s)=>{s.d(n,{A:()=>o});s(5043);var t=s(579);const o=e=>{let{code:n,language:s="javascript"}=e;return(0,t.jsx)("div",{className:"bg-gray-900 text-green-400 p-3 sm:p-4 rounded-lg overflow-x-auto",role:"code","aria-label":"".concat(s," code example"),children:(0,t.jsx)("pre",{className:"text-xs sm:text-sm font-mono whitespace-pre-wrap break-words m-0",children:(0,t.jsx)("code",{className:"break-all",children:n})})})}},3711:(e,n,s)=>{s.d(n,{A:()=>r});s(5043);var t=s(4526),o=s(579);const r=e=>{let{title:n,icon:s}=e;return(0,o.jsx)("header",{className:"bg-black/80 backdrop-blur-sm border-b border-green-500/30 sticky top-0 z-50",children:(0,o.jsx)("div",{className:"max-w-7xl mx-auto px-4 sm:px-6 lg:px-8",children:(0,o.jsx)("div",{className:"flex justify-between items-center py-3 sm:py-4 lg:py-6",children:(0,o.jsxs)("div",{className:"flex items-center",children:[(0,o.jsxs)(t.N_,{to:"/",className:"text-green-400 hover:text-green-300 mr-1 sm:mr-2 lg:mr-4 font-mono transition-colors duration-300 text-xs sm:text-sm lg:text-base",children:[(0,o.jsx)("span",{className:"text-green-300",children:"$"})," cd /home"]}),(0,o.jsxs)("div",{className:"flex items-center",children:[(0,o.jsx)("span",{className:"text-lg sm:text-2xl lg:text-3xl mr-1 sm:mr-2 lg:mr-3 text-green-400 ".concat((e=>"TS"===e||"V"===e||"CSS"===e||"S"===e||"[]"===e||"{}"===e?"font-mono font-bold text-lg sm:text-xl lg:text-2xl bg-cyan-500/30 px-2 py-1 rounded border border-cyan-400/50 text-cyan-300 min-w-[2.5rem] min-h-[2.5rem] flex items-center justify-center":"text-lg sm:text-2xl lg:text-3xl min-w-[2.5rem] min-h-[2.5rem] flex items-center justify-center")(s)),children:s}),(0,o.jsx)("h1",{className:"text-xs sm:text-lg lg:text-3xl font-bold text-green-400 font-mono matrix-glow break-words",children:n})]})]})})})})}},5552:(e,n,s)=>{s.r(n),s.d(n,{default:()=>c});var t=s(5043);const o=[{id:"basics",title:"Async Basics",icon:"\u23f1\ufe0f"},{id:"promises",title:"Promises",icon:"\ud83e\udd1d"},{id:"async-await",title:"Async/Await",icon:"\u26a1"},{id:"error-handling",title:"Error Handling",icon:"\u26a0\ufe0f"},{id:"api-calls",title:"API Calls",icon:"\ud83c\udf10"},{id:"parallel",title:"Parallel Execution",icon:"\ud83d\udd04"}],r={basics:[{title:"What is Asynchronous Programming?",examples:[{title:"Synchronous vs Asynchronous",code:'// Synchronous (blocking)\nconsole.log("1");\nconsole.log("2");\nconsole.log("3");\n// Output: 1, 2, 3\n\n// Asynchronous (non-blocking)\nconsole.log("1");\nsetTimeout(() => console.log("2"), 1000);\nconsole.log("3");\n// Output: 1, 3, 2 (after 1 second)'},{title:"Why use async programming?",code:"// Without async - blocks the UI\nconst result = fetch('https://api.example.com/data');\nconsole.log(result); // This blocks until complete\n\n// With async - doesn't block\nfetch('https://api.example.com/data')\n  .then(response => response.json())\n  .then(data => console.log(data));\n// UI remains responsive while waiting"}]}],promises:[{title:"Creating and using Promises",examples:[{title:"Basic Promise",code:'const myPromise = new Promise((resolve, reject) => {\n  // Simulate some async work\n  setTimeout(() => {\n    const success = Math.random() > 0.5;\n    if (success) {\n      resolve("Operation successful!");\n    } else {\n      reject("Operation failed!");\n    }\n  }, 1000);\n});\n\nmyPromise\n  .then(result => console.log(result))\n  .catch(error => console.error(error));'},{title:"Promise with .then()",code:"fetch('https://jsonplaceholder.typicode.com/users/1')\n  .then(response => {\n    if (!response.ok) {\n      throw new Error('Network response was not ok');\n    }\n    return response.json();\n  })\n  .then(user => {\n    console.log('User:', user.name);\n    return user.email;\n  })\n  .then(email => {\n    console.log('Email:', email);\n  })\n  .catch(error => {\n    console.error('Error:', error);\n  });"}]}],"async-await":[{title:"Using async/await (modern way)",examples:[{title:"Basic async/await",code:"async function getUser() {\n  try {\n    const response = await fetch('https://jsonplaceholder.typicode.com/users/1');\n    const user = await response.json();\n    console.log('User:', user.name);\n    return user;\n  } catch (error) {\n    console.error('Error:', error);\n  }\n}\n\n// Call the async function\ngetUser();"},{title:"Multiple async operations",code:"async function getMultipleUsers() {\n  try {\n    const user1 = await fetch('https://jsonplaceholder.typicode.com/users/1');\n    const user2 = await fetch('https://jsonplaceholder.typicode.com/users/2');\n    \n    const data1 = await user1.json();\n    const data2 = await user2.json();\n    \n    console.log('User 1:', data1.name);\n    console.log('User 2:', data2.name);\n  } catch (error) {\n    console.error('Error:', error);\n  }\n}"}]}],"error-handling":[{title:"Handling errors in async code",examples:[{title:"Try-catch with async/await",code:"async function fetchUser(id) {\n  try {\n    const response = await fetch(`https://jsonplaceholder.typicode.com/users/${id}`);\n    \n    if (!response.ok) {\n      throw new Error(`HTTP error! status: ${response.status}`);\n    }\n    \n    const user = await response.json();\n    return user;\n  } catch (error) {\n    console.error('Failed to fetch user:', error.message);\n    return null;\n  }\n}\n\n// Usage\nconst user = await fetchUser(1);\nif (user) {\n  console.log('User found:', user.name);\n} else {\n  console.log('User not found');\n}"},{title:"Error handling with Promises",code:"fetch('https://jsonplaceholder.typicode.com/users/999')\n  .then(response => {\n    if (!response.ok) {\n      throw new Error('User not found');\n    }\n    return response.json();\n  })\n  .then(user => {\n    console.log('User:', user);\n  })\n  .catch(error => {\n    console.error('Error:', error.message);\n    // Handle the error gracefully\n  })\n  .finally(() => {\n    console.log('Request completed');\n  });"}]}],"api-calls":[{title:"Making API calls",examples:[{title:"GET request",code:"async function getPosts() {\n  try {\n    const response = await fetch('https://jsonplaceholder.typicode.com/posts');\n    const posts = await response.json();\n    \n    posts.slice(0, 3).forEach(post => {\n      console.log(`${post.id}: ${post.title}`);\n    });\n  } catch (error) {\n    console.error('Failed to fetch posts:', error);\n  }\n}\n\ngetPosts();"},{title:"POST request",code:"async function createPost() {\n  try {\n    const newPost = {\n      title: 'My New Post',\n      body: 'This is the content of my post',\n      userId: 1\n    };\n\n    const response = await fetch('https://jsonplaceholder.typicode.com/posts', {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json',\n      },\n      body: JSON.stringify(newPost)\n    });\n\n    const createdPost = await response.json();\n    console.log('Created post:', createdPost);\n  } catch (error) {\n    console.error('Failed to create post:', error);\n  }\n}\n\ncreatePost();"}]}],parallel:[{title:"Running operations in parallel",examples:[{title:"Promise.all() - wait for all",code:"async function getMultipleUsers() {\n  try {\n    const promises = [\n      fetch('https://jsonplaceholder.typicode.com/users/1'),\n      fetch('https://jsonplaceholder.typicode.com/users/2'),\n      fetch('https://jsonplaceholder.typicode.com/users/3')\n    ];\n\n    const responses = await Promise.all(promises);\n    const users = await Promise.all(\n      responses.map(response => response.json())\n    );\n\n    users.forEach(user => {\n      console.log(`User: ${user.name}`);\n    });\n  } catch (error) {\n    console.error('Error:', error);\n  }\n}\n\ngetMultipleUsers();"},{title:"Promise.race() - wait for first",code:"async function getFastestResponse() {\n  try {\n    const promises = [\n      fetch('https://jsonplaceholder.typicode.com/users/1'),\n      fetch('https://jsonplaceholder.typicode.com/users/2'),\n      fetch('https://jsonplaceholder.typicode.com/users/3')\n    ];\n\n    const fastestResponse = await Promise.race(promises);\n    const user = await fastestResponse.json();\n    \n    console.log('Fastest response:', user.name);\n  } catch (error) {\n    console.error('Error:', error);\n  }\n}\n\ngetFastestResponse();"}]}]};var a=s(454),l=s(579);const c=()=>{const[e,n]=(0,t.useState)("basics"),[s,c]=(0,t.useState)(""),[i,d]=(0,t.useState)(null),[m,h]=(0,t.useState)(!1),[p,x]=(0,t.useState)(null),[g,u]=(0,t.useState)(!1);(0,t.useEffect)(()=>{h(!0),x(null);try{setTimeout(()=>{d(r[e]||null),h(!1)},100)}catch(n){x("Failed to load content"),h(!1)}},[e]);return(0,l.jsx)(a.A,{title:"Async Programming",icon:"\u23f1\ufe0f",sections:o,activeSection:e,searchTerm:s,content:i,loading:m,error:p,isSidePanelOpen:g,onSectionChange:n,onSearchChange:c,onToggleSidePanel:()=>u(!g),fallbackContent:{description:"Welcome to Async Programming! This section covers essential asynchronous programming concepts for beginners.",topics:[{icon:"\u23f1\ufe0f",text:"Understanding synchronous vs asynchronous code"},{icon:"\ud83e\udd1d",text:"Working with Promises and .then() chains"},{icon:"\u26a1",text:"Modern async/await syntax"},{icon:"\u26a0\ufe0f",text:"Error handling in async operations"},{icon:"\ud83c\udf10",text:"Making API calls and handling responses"},{icon:"\ud83d\udd04",text:"Running operations in parallel"}]}})}},8128:(e,n,s)=>{s.d(n,{A:()=>o});s(5043);var t=s(579);const o=e=>{let{sections:n,activeSection:s,searchTerm:o,onSectionChange:r,onSearchChange:a,isOpen:l=!0,onToggle:c}=e;const i=n.filter(e=>e.title.toLowerCase().includes(o.toLowerCase()));return(0,t.jsxs)(t.Fragment,{children:[(0,t.jsx)("div",{className:"lg:hidden fixed top-28 right-4 z-50",children:(0,t.jsx)("button",{onClick:c,className:"bg-black/80 backdrop-blur-sm border border-green-500/50 rounded-lg p-3 text-green-400 hover:text-green-300 transition-colors duration-300","aria-label":"Toggle navigation menu",children:(0,t.jsx)("svg",{className:"w-6 h-6",fill:"none",stroke:"currentColor",viewBox:"0 0 24 24",children:l?(0,t.jsx)("path",{strokeLinecap:"round",strokeLinejoin:"round",strokeWidth:2,d:"M6 18L18 6M6 6l12 12"}):(0,t.jsx)("path",{strokeLinecap:"round",strokeLinejoin:"round",strokeWidth:2,d:"M4 6h16M4 12h16M4 18h16"})})})}),l&&(0,t.jsx)("div",{className:"lg:hidden fixed inset-0 bg-black/50 backdrop-blur-sm z-40",onClick:c}),(0,t.jsx)("div",{className:"\n        ".concat(l?"translate-x-0":"-translate-x-full lg:translate-x-0","\n        lg:w-64 w-80 flex-shrink-0\n        fixed lg:relative top-0 left-0 h-full lg:h-auto\n        z-50 lg:z-auto\n        transition-transform duration-300 ease-in-out\n      "),children:(0,t.jsxs)("div",{className:"bg-black/90 backdrop-blur-sm border border-green-500/30 p-6 h-full lg:h-auto lg:sticky lg:top-8 overflow-y-auto",children:[(0,t.jsxs)("div",{className:"lg:hidden flex justify-between items-center mb-4",children:[(0,t.jsx)("h3",{className:"text-lg font-semibold text-green-400 font-mono",children:"NAVIGATION"}),(0,t.jsx)("button",{onClick:c,className:"text-green-400 hover:text-green-300 transition-colors duration-300","aria-label":"Close navigation menu",children:(0,t.jsx)("svg",{className:"w-6 h-6",fill:"none",stroke:"currentColor",viewBox:"0 0 24 24",children:(0,t.jsx)("path",{strokeLinecap:"round",strokeLinejoin:"round",strokeWidth:2,d:"M6 18L18 6M6 6l12 12"})})})]}),(0,t.jsx)("h3",{className:"hidden lg:block text-lg font-semibold text-green-400 mb-4 font-mono",children:"NAVIGATION"}),(0,t.jsxs)("div",{className:"mb-4",children:[(0,t.jsx)("label",{htmlFor:"search-topics",className:"sr-only",children:"Search topics"}),(0,t.jsx)("input",{id:"search-topics",type:"text",placeholder:"grep -r 'pattern' /*",value:o,onChange:e=>a(e.target.value),className:"w-full px-3 py-2 bg-black/50 border border-green-500/50 rounded-lg focus:outline-none focus:ring-2 focus:ring-green-500/20 focus:border-green-400 text-green-300 font-mono placeholder-green-500/50","aria-label":"Search topics in table of contents"})]}),(0,t.jsxs)("nav",{className:"space-y-2","aria-label":"Table of contents",children:[i.map(e=>(0,t.jsxs)("button",{onClick:()=>{r(e.id),window.innerWidth<1024&&(null===c||void 0===c||c())},className:"w-full text-left px-3 py-2 rounded-lg transition-all duration-300 font-mono ".concat(s===e.id?"bg-green-500/20 text-green-300 border border-green-400 shadow-lg":"text-green-400 hover:bg-green-500/10 hover:text-green-300 border border-transparent hover:border-green-500/50"),"aria-current":s===e.id?"page":void 0,children:[(0,t.jsx)("span",{className:"mr-2","aria-hidden":"true",children:e.icon}),e.title]},e.id)),0===i.length&&(0,t.jsxs)("div",{className:"text-green-500 text-sm py-2 font-mono",role:"status",children:['No topics found matching "',o,'"']})]})]})})]})}}}]);
//# sourceMappingURL=5552.28afef89.chunk.js.map