"use strict";(self.webpackChunkcodebank=self.webpackChunkcodebank||[]).push([[5805],{5805:(n,e,t)=>{t.r(e),t.d(e,{default:()=>o});const o=[{title:"React useEffect Hook",examples:[{title:"Basic useEffect",code:"import { useEffect, useState } from 'react';\n\nfunction Counter() {\n  const [count, setCount] = useState(0);\n  \n  useEffect(() => {\n    document.title = `Count: ${count}`;\n  }, [count]);\n  \n  return (\n    <div>\n      <p>Count: {count}</p>\n      <button onClick={() => setCount(count + 1)}>\n        Increment\n      </button>\n    </div>\n  );\n}"},{title:"useEffect with Cleanup",code:"import { useEffect, useState } from 'react';\n\nfunction Timer() {\n  const [count, setCount] = useState(0);\n  \n  useEffect(() => {\n    const interval = setInterval(() => {\n      setCount(c => c + 1);\n    }, 1000);\n    \n    // Cleanup function\n    return () => {\n      clearInterval(interval);\n    };\n  }, []); // Empty dependency array = run once\n  \n  return <div>Timer: {count} seconds</div>;\n}"},{title:"useEffect with Dependencies",code:"import { useEffect, useState } from 'react';\n\nfunction UserProfile({ userId }) {\n  const [user, setUser] = useState(null);\n  \n  useEffect(() => {\n    fetch(`/api/users/${userId}`)\n      .then(res => res.json())\n      .then(setUser);\n  }, [userId]); // Re-run when userId changes\n  \n  if (!user) return <div>Loading...</div>;\n  \n  return <div>Hello, {user.name}!</div>;\n}"},{title:"Multiple useEffect Hooks",code:"import { useEffect, useState } from 'react';\n\nfunction App() {\n  const [count, setCount] = useState(0);\n  const [name, setName] = useState('');\n  \n  // Update document title when count changes\n  useEffect(() => {\n    document.title = `Count: ${count}`;\n  }, [count]);\n  \n  // Log when name changes\n  useEffect(() => {\n    if (name) {\n      console.log('Name changed to:', name);\n    }\n  }, [name]);\n  \n  return (\n    <div>\n      <input\n        value={name}\n        onChange={(e) => setName(e.target.value)}\n        placeholder=\"Enter name\"\n      />\n      <button onClick={() => setCount(count + 1)}>\n        Count: {count}\n      </button>\n    </div>\n  );\n}"},{title:"useEffect for Side Effects",code:"import { useEffect } from 'react';\n\nfunction WindowSize() {\n  const [windowSize, setWindowSize] = useState({\n    width: window.innerWidth,\n    height: window.innerHeight\n  });\n  \n  useEffect(() => {\n    const handleResize = () => {\n      setWindowSize({\n        width: window.innerWidth,\n        height: window.innerHeight\n      });\n    };\n    \n    window.addEventListener('resize', handleResize);\n    \n    return () => {\n      window.removeEventListener('resize', handleResize);\n    };\n  }, []);\n  \n  return (\n    <div>\n      Window size: {windowSize.width} x {windowSize.height}\n    </div>\n  );\n}"}]}]}}]);
//# sourceMappingURL=5805.af0130b2.chunk.js.map