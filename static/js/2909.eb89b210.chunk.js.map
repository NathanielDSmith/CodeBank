{"version":3,"file":"static/js/2909.eb89b210.chunk.js","mappings":"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","sources":["components/ContentSection.tsx","components/CodeBlock.tsx","data/railsContent.ts","pages/RailsPage.tsx","components/PageHeader.tsx","components/SidePanel.tsx","hooks/usePageNavigation.ts"],"sourcesContent":["import React from 'react';\r\nimport { ContentSectionProps } from '../types/index';\r\n\r\nconst ContentSection: React.FC<ContentSectionProps> = ({ title, children }) => {\r\n  return (\r\n    <section className=\"bg-black/70 backdrop-blur-sm rounded-lg p-3 sm:p-4 lg:p-6 border border-green-500/30 shadow-lg overflow-hidden\">\r\n      <h3 className=\"text-sm sm:text-lg lg:text-xl font-semibold text-green-400 mb-3 sm:mb-4 font-mono matrix-glow break-words\">{title}</h3>\r\n      <div className=\"overflow-x-auto\">\r\n        {children}\r\n      </div>\r\n    </section>\r\n  );\r\n};\r\n\r\nexport default ContentSection; ","import React from 'react';\r\nimport { CodeBlockProps } from '../types/index';\r\n\r\nconst CodeBlock: React.FC<CodeBlockProps> = ({ code, language = 'javascript' }) => {\r\n  return (\r\n    <div \r\n      className=\"bg-gray-900 text-green-400 p-3 sm:p-4 rounded-lg overflow-x-auto\"\r\n      role=\"code\"\r\n      aria-label={`${language} code example`}\r\n    >\r\n      <pre className=\"text-xs sm:text-sm font-mono whitespace-pre-wrap break-words m-0\">\r\n        <code className=\"break-all\">{code}</code>\r\n      </pre>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default CodeBlock; ","import { Section, PageContent } from '../types/index';\r\n\r\nexport const railsSections: Section[] = [\r\n  { id: 'basics', title: 'Basics', icon: 'üìö' },\r\n  { id: 'mvc', title: 'MVC Structure', icon: 'üèõÔ∏è' },\r\n  { id: 'routing', title: 'Routing', icon: 'üõ£Ô∏è' },\r\n  { id: 'activerecord', title: 'ActiveRecord', icon: 'üóÑÔ∏è' },\r\n  { id: 'migrations', title: 'Migrations', icon: 'üìù' },\r\n  { id: 'controllers', title: 'Controllers & Views', icon: 'üñ•Ô∏è' },\r\n  { id: 'rest', title: 'RESTful APIs', icon: 'üîó' }\r\n];\r\n\r\nexport const railsContent: PageContent = {\r\n  basics: [\r\n    {\r\n      title: 'Getting Started',\r\n      examples: [\r\n        { title: 'Create new app', code: 'rails new myapp\\ncd myapp\\nrails server' },\r\n        { title: 'Generate resource', code: 'rails generate scaffold Post title:string content:text' }\r\n      ]\r\n    }\r\n  ],\r\n  mvc: [\r\n    {\r\n      title: 'What is MVC?',\r\n      examples: [\r\n        { title: 'MVC Overview', code: 'Model - Handles data and business logic\\nView - Displays data\\nController - Handles input and updates model/view' }\r\n      ]\r\n    }\r\n  ],\r\n  routing: [\r\n    {\r\n      title: 'How to define routes',\r\n      examples: [\r\n        { title: 'Basic route', code: 'get \"/welcome\", to: \"welcome#index\"' },\r\n        { title: 'Resource route', code: 'resources :posts' },\r\n        { title: 'Nested routes', code: 'resources :posts do\\n  resources :comments\\nend' }\r\n      ]\r\n    }\r\n  ],\r\n  activerecord: [\r\n    {\r\n      title: 'ActiveRecord basics',\r\n      examples: [\r\n        { title: 'Find records', code: 'Post.find(1)\\nPost.where(title: \"Hello\")\\nPost.all' },\r\n        { title: 'Create records', code: 'Post.create(title: \"New Post\")\\npost = Post.new\\npost.save' }\r\n      ]\r\n    }\r\n  ],\r\n  migrations: [\r\n    {\r\n      title: 'Database migrations',\r\n      examples: [\r\n        { title: 'Create migration', code: 'rails generate migration CreatePosts title:string content:text' },\r\n        { title: 'Run migration', code: 'rails db:migrate\\nrails db:rollback' }\r\n      ]\r\n    }\r\n  ],\r\n  controllers: [\r\n    {\r\n      title: 'Controllers and views',\r\n      examples: [\r\n        { title: 'Basic controller', code: 'class PostsController < ApplicationController\\n  def index\\n    @posts = Post.all\\n  end\\nend' },\r\n        { title: 'View template', code: '<h1>Posts</h1>\\n<% @posts.each do |post| %>\\n  <h2><%= post.title %></h2>\\n<% end %>' }\r\n      ]\r\n    }\r\n  ],\r\n  rest: [\r\n    {\r\n      title: 'RESTful conventions',\r\n      examples: [\r\n        { title: 'REST actions', code: 'GET /posts (index)\\nPOST /posts (create)\\nGET /posts/:id (show)\\nPUT /posts/:id (update)\\nDELETE /posts/:id (destroy)' },\r\n        { title: 'API response', code: 'render json: @posts\\nrender json: { status: \"success\", data: @post }' }\r\n      ]\r\n    }\r\n  ]\r\n}; ","import React, { useState } from 'react';\r\nimport { usePageNavigation } from '../hooks/usePageNavigation';\r\nimport { railsSections, railsContent } from '../data/railsContent';\r\nimport PageHeader from '../components/PageHeader';\r\nimport SidePanel from '../components/SidePanel';\r\nimport ContentSection from '../components/ContentSection';\r\nimport CodeBlock from '../components/CodeBlock';\r\n\r\ninterface Section {\r\n  title: string;\r\n  examples: { title: string; code: string }[];\r\n}\r\n\r\nconst RailsPage: React.FC = () => {\r\n  const { activeSection, searchTerm, handleSectionChange, handleSearchChange } = usePageNavigation('mvc');\r\n  const [content, setContent] = useState<Section[] | null>(null);\r\n  const [loading, setLoading] = useState(false);\r\n  const [error, setError] = useState<string | null>(null);\r\n  const [isSidePanelOpen, setIsSidePanelOpen] = useState(false);\r\n\r\n  const renderContent = () => {\r\n    const content = railsContent[activeSection];\r\n    \r\n    if (!content) {\r\n      return (\r\n        <div className=\"text-center py-12\">\r\n          <h2 className=\"text-2xl font-bold text-green-400 mb-4 font-mono\">\r\n            {railsSections.find(s => s.id === activeSection)?.title}\r\n          </h2>\r\n          <p className=\"text-green-300 font-mono\">\r\n            Content for {railsSections.find(s => s.id === activeSection)?.title} will be added here...\r\n          </p>\r\n        </div>\r\n      );\r\n    }\r\n\r\n    return (\r\n      <div className=\"space-y-6\">\r\n        <h2 className=\"text-2xl font-bold text-green-400 mb-4 font-mono matrix-glow\">\r\n          {railsSections.find(s => s.id === activeSection)?.title}\r\n        </h2>\r\n        \r\n        {content.map((section, index) => (\r\n          <ContentSection key={index} title={section.title}>\r\n            <div className=\"space-y-4\">\r\n              {section.examples.map((example, exampleIndex) => (\r\n                <div key={exampleIndex} className=\"bg-black/50 border border-green-500/30 rounded-lg p-4\">\r\n                  <h4 className=\"font-medium text-green-300 mb-2 font-mono\">{example.title}</h4>\r\n                  <CodeBlock code={example.code} />\r\n                </div>\r\n              ))}\r\n            </div>\r\n          </ContentSection>\r\n        ))}\r\n      </div>\r\n    );\r\n  };\r\n\r\n  return (\r\n    <div className=\"min-h-screen bg-black relative overflow-hidden\">\r\n      {/* Matrix digital rain background */}\r\n      <div className=\"absolute inset-0 opacity-10\">\r\n        <div className=\"matrix-rain\"></div>\r\n      </div>\r\n      \r\n      {/* Scan lines effect */}\r\n      <div className=\"absolute inset-0 opacity-5\">\r\n        <div className=\"scanlines\"></div>\r\n      </div>\r\n      \r\n      {/* Grid overlay */}\r\n      <div className=\"absolute inset-0 bg-gradient-to-b from-transparent via-green-900/5 to-green-900/10\"></div>\r\n      \r\n      <PageHeader title=\"Ruby on Rails\" icon=\"üíé\" />\r\n      \r\n      <div className=\"max-w-7xl mx-auto px-4 sm:px-6 lg:px-8 py-8 relative z-10\">\r\n        <div className=\"flex gap-8\">\r\n          <SidePanel\r\n            sections={railsSections}\r\n            activeSection={activeSection}\r\n            searchTerm={searchTerm}\r\n            onSectionChange={handleSectionChange}\r\n            onSearchChange={handleSearchChange}\r\n            isOpen={isSidePanelOpen}\r\n            onToggle={() => setIsSidePanelOpen(!isSidePanelOpen)}\r\n          />\r\n          \r\n          <div className=\"flex-1\">\r\n            {renderContent()}\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default RailsPage; ","import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport { PageHeaderProps } from '../types/index';\r\n\r\nconst PageHeader: React.FC<PageHeaderProps> = ({ title, icon }) => {\r\n  return (\r\n    <header className=\"bg-black/80 backdrop-blur-sm border-b border-green-500/30 sticky top-0 z-50\">\r\n      <div className=\"max-w-7xl mx-auto px-4 sm:px-6 lg:px-8\">\r\n        <div className=\"flex justify-between items-center py-3 sm:py-4 lg:py-6\">\r\n          <div className=\"flex items-center\">\r\n            <Link to=\"/\" className=\"text-green-400 hover:text-green-300 mr-1 sm:mr-2 lg:mr-4 font-mono transition-colors duration-300 text-xs sm:text-sm lg:text-base\">\r\n              <span className=\"text-green-300\">$</span> cd /home\r\n            </Link>\r\n            <div className=\"flex items-center\">\r\n              <span className=\"text-lg sm:text-2xl lg:text-3xl mr-1 sm:mr-2 lg:mr-3 text-green-400\">{icon}</span>\r\n              <h1 className=\"text-xs sm:text-lg lg:text-3xl font-bold text-green-400 font-mono matrix-glow break-words\">{title}</h1>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </header>\r\n  );\r\n};\r\n\r\nexport default PageHeader; ","import React from 'react';\r\nimport { SidePanelProps } from '../types/index';\r\n\r\nconst SidePanel: React.FC<SidePanelProps> = ({\r\n  sections,\r\n  activeSection,\r\n  searchTerm,\r\n  onSectionChange,\r\n  onSearchChange,\r\n  isOpen = true,\r\n  onToggle\r\n}) => {\r\n  const filteredSections = sections.filter(section =>\r\n    section.title.toLowerCase().includes(searchTerm.toLowerCase())\r\n  );\r\n\r\n  return (\r\n    <>\r\n      {/* Mobile Toggle Button */}\r\n      <div className=\"lg:hidden fixed top-28 right-4 z-50\">\r\n        <button\r\n          onClick={onToggle}\r\n          className=\"bg-black/80 backdrop-blur-sm border border-green-500/50 rounded-lg p-3 text-green-400 hover:text-green-300 transition-colors duration-300\"\r\n          aria-label=\"Toggle navigation menu\"\r\n        >\r\n          <svg className=\"w-6 h-6\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\r\n            {isOpen ? (\r\n              <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M6 18L18 6M6 6l12 12\" />\r\n            ) : (\r\n              <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M4 6h16M4 12h16M4 18h16\" />\r\n            )}\r\n          </svg>\r\n        </button>\r\n      </div>\r\n\r\n      {/* Mobile Overlay */}\r\n      {isOpen && (\r\n        <div \r\n          className=\"lg:hidden fixed inset-0 bg-black/50 backdrop-blur-sm z-40\"\r\n          onClick={onToggle}\r\n        />\r\n      )}\r\n\r\n      {/* Side Panel */}\r\n      <div className={`\r\n        ${isOpen ? 'translate-x-0' : '-translate-x-full lg:translate-x-0'}\r\n        lg:w-64 w-80 flex-shrink-0\r\n        fixed lg:relative top-0 left-0 h-full lg:h-auto\r\n        z-50 lg:z-auto\r\n        transition-transform duration-300 ease-in-out\r\n      `}>\r\n        <div className=\"bg-black/90 backdrop-blur-sm border border-green-500/30 p-6 h-full lg:h-auto lg:sticky lg:top-8 overflow-y-auto\">\r\n          <div className=\"lg:hidden flex justify-between items-center mb-4\">\r\n            <h3 className=\"text-lg font-semibold text-green-400 font-mono\">NAVIGATION</h3>\r\n            <button\r\n              onClick={onToggle}\r\n              className=\"text-green-400 hover:text-green-300 transition-colors duration-300\"\r\n              aria-label=\"Close navigation menu\"\r\n            >\r\n              <svg className=\"w-6 h-6\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\r\n                <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M6 18L18 6M6 6l12 12\" />\r\n              </svg>\r\n            </button>\r\n          </div>\r\n          \r\n          <h3 className=\"hidden lg:block text-lg font-semibold text-green-400 mb-4 font-mono\">NAVIGATION</h3>\r\n          \r\n          {/* Search Box */}\r\n          <div className=\"mb-4\">\r\n            <label htmlFor=\"search-topics\" className=\"sr-only\">\r\n              Search topics\r\n            </label>\r\n            <input\r\n              id=\"search-topics\"\r\n              type=\"text\"\r\n              placeholder=\"grep -r 'pattern' /*\"\r\n              value={searchTerm}\r\n              onChange={(e) => onSearchChange(e.target.value)}\r\n              className=\"w-full px-3 py-2 bg-black/50 border border-green-500/50 rounded-lg focus:outline-none focus:ring-2 focus:ring-green-500/20 focus:border-green-400 text-green-300 font-mono placeholder-green-500/50\"\r\n              aria-label=\"Search topics in table of contents\"\r\n            />\r\n          </div>\r\n          \r\n          <nav className=\"space-y-2\" aria-label=\"Table of contents\">\r\n            {filteredSections.map((section) => (\r\n              <button\r\n                key={section.id}\r\n                onClick={() => {\r\n                  onSectionChange(section.id);\r\n                  // Close mobile menu after selection\r\n                  if (window.innerWidth < 1024) {\r\n                    onToggle?.();\r\n                  }\r\n                }}\r\n                className={`w-full text-left px-3 py-2 rounded-lg transition-all duration-300 font-mono ${\r\n                  activeSection === section.id\r\n                    ? 'bg-green-500/20 text-green-300 border border-green-400 shadow-lg'\r\n                    : 'text-green-400 hover:bg-green-500/10 hover:text-green-300 border border-transparent hover:border-green-500/50'\r\n                }`}\r\n                aria-current={activeSection === section.id ? 'page' : undefined}\r\n              >\r\n                <span className=\"mr-2\" aria-hidden=\"true\">{section.icon}</span>\r\n                {section.title}\r\n              </button>\r\n            ))}\r\n            \r\n            {filteredSections.length === 0 && (\r\n              <div className=\"text-green-500 text-sm py-2 font-mono\" role=\"status\">\r\n                No topics found matching \"{searchTerm}\"\r\n              </div>\r\n            )}\r\n          </nav>\r\n        </div>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default SidePanel; ","import { useState, useEffect } from 'react';\r\nimport { useLocation, useNavigate } from 'react-router-dom';\r\n\r\nexport const usePageNavigation = (defaultSection: string, sections: any[] = []) => {\r\n  const location = useLocation();\r\n  const navigate = useNavigate();\r\n  const [searchTerm, setSearchTerm] = useState('');\r\n\r\n  // Extract section from URL or use default\r\n  const getSectionFromUrl = () => {\r\n    const pathParts = location.pathname.split('/');\r\n    const lastPart = pathParts[pathParts.length - 1];\r\n    \r\n    // If the last part is empty or if we're on a main route (like /typescript), use default\r\n    if (!lastPart || pathParts.length === 2) {\r\n      return defaultSection;\r\n    }\r\n    \r\n    // Check if the last part is actually a valid section ID\r\n    const isValidSection = sections.some(section => section.id === lastPart);\r\n    return isValidSection ? lastPart : defaultSection;\r\n  };\r\n\r\n  const [activeSection, setActiveSection] = useState(getSectionFromUrl());\r\n\r\n  // Auto-redirect to first section if no section is specified\r\n  useEffect(() => {\r\n    const pathParts = location.pathname.split('/');\r\n    const isOnMainRoute = pathParts.length === 2;\r\n    \r\n    if (isOnMainRoute && sections.length > 0) {\r\n      const firstSection = sections[0];\r\n      if (firstSection) {\r\n        navigate(`${location.pathname}/${firstSection.id}`, { replace: true });\r\n      }\r\n    }\r\n  }, [location.pathname, sections, navigate]);\r\n\r\n  // Update active section when URL changes\r\n  useEffect(() => {\r\n    const sectionFromUrl = getSectionFromUrl();\r\n    if (sectionFromUrl !== activeSection) {\r\n      setActiveSection(sectionFromUrl);\r\n    }\r\n  }, [location.pathname]);\r\n\r\n  const handleSectionChange = (sectionId: string) => {\r\n    setActiveSection(sectionId);\r\n    // Update URL to reflect the current section\r\n    const currentPath = location.pathname;\r\n    const basePath = currentPath.split('/').slice(0, -1).join('/') || currentPath;\r\n    navigate(`${basePath}/${sectionId}`, { replace: true });\r\n  };\r\n\r\n  const handleSearchChange = (term: string) => {\r\n    setSearchTerm(term);\r\n  };\r\n\r\n  return {\r\n    activeSection,\r\n    searchTerm,\r\n    handleSectionChange,\r\n    handleSearchChange\r\n  };\r\n}; "],"names":["_ref","title","children","_jsxs","className","_jsx","code","language","role","concat","railsSections","id","icon","railsContent","basics","examples","mvc","routing","activerecord","migrations","controllers","rest","RailsPage","activeSection","searchTerm","handleSectionChange","handleSearchChange","usePageNavigation","content","setContent","useState","loading","setLoading","error","setError","isSidePanelOpen","setIsSidePanelOpen","PageHeader","SidePanel","sections","onSectionChange","onSearchChange","isOpen","onToggle","renderContent","_railsSections$find3","_railsSections$find","_railsSections$find2","find","s","map","section","index","ContentSection","example","exampleIndex","CodeBlock","Link","to","filteredSections","filter","toLowerCase","includes","_Fragment","onClick","fill","stroke","viewBox","strokeLinecap","strokeLinejoin","strokeWidth","d","htmlFor","type","placeholder","value","onChange","e","target","window","innerWidth","undefined","length","defaultSection","arguments","location","useLocation","navigate","useNavigate","setSearchTerm","getSectionFromUrl","pathParts","pathname","split","lastPart","some","setActiveSection","useEffect","firstSection","replace","sectionFromUrl","sectionId","currentPath","basePath","slice","join","term"],"sourceRoot":""}