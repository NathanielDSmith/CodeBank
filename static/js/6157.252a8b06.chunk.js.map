{"version":3,"file":"static/js/6157.252a8b06.chunk.js","mappings":"kIAAA,MAiCA,EAjCsB,CACpB,CACEA,MAAO,4BACPC,SAAU,CACR,CACED,MAAO,kBACPE,KAAM,wOAER,CACEF,MAAO,4BACPE,KAAM,oTAIZ,CACEF,MAAO,8BACPC,SAAU,CACR,CACED,MAAO,mCACPE,KAAM,+LAER,CACEF,MAAO,4BACPE,KAAM,mUAER,CACEF,MAAO,mCACPE,KAAM,iV","sources":["data/javascript/arrays.ts"],"sourcesContent":["const arraysContent = [\r\n  {\r\n    title: 'Creating and using arrays',\r\n    examples: [\r\n      {\r\n        title: 'Creating arrays',\r\n        code: '// Different ways to create arrays\\nconst fruits = [\"apple\", \"banana\", \"orange\"];\\nconst numbers = [1, 2, 3, 4, 5];\\nconst mixed = [\"text\", 42, true, null];\\n\\nconsole.log(fruits[0]); // \"apple\"\\nconsole.log(fruits.length); // 3'\r\n      },\r\n      {\r\n        title: 'Adding and removing items',\r\n        code: 'const colors = [\"red\", \"green\"];\\n\\n// Add to end\\ncolors.push(\"blue\");\\nconsole.log(colors); // [\"red\", \"green\", \"blue\"]\\n\\n// Remove from end\\ncolors.pop();\\nconsole.log(colors); // [\"red\", \"green\"]\\n\\n// Add to beginning\\ncolors.unshift(\"yellow\");\\nconsole.log(colors); // [\"yellow\", \"red\", \"green\"]'\r\n      }\r\n    ]\r\n  },\r\n  {\r\n    title: 'Array methods for beginners',\r\n    examples: [\r\n      {\r\n        title: 'forEach - loop through each item',\r\n        code: 'const numbers = [1, 2, 3, 4, 5];\\n\\nnumbers.forEach(number => {\\n  console.log(\\`Number: \\${number}\\`);\\n});\\n// Output:\\n// Number: 1\\n// Number: 2\\n// Number: 3\\n// Number: 4\\n// Number: 5'\r\n      },\r\n      {\r\n        title: 'map - transform each item',\r\n        code: 'const numbers = [1, 2, 3, 4, 5];\\n\\nconst doubled = numbers.map(number => number * 2);\\nconsole.log(doubled); // [2, 4, 6, 8, 10]\\n\\nconst names = [\"alice\", \"bob\", \"charlie\"];\\nconst capitalized = names.map(name => name.charAt(0).toUpperCase() + name.slice(1));\\nconsole.log(capitalized); // [\"Alice\", \"Bob\", \"Charlie\"]'\r\n      },\r\n      {\r\n        title: 'filter - keep only certain items',\r\n        code: 'const numbers = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10];\\n\\nconst evenNumbers = numbers.filter(number => number % 2 === 0);\\nconsole.log(evenNumbers); // [2, 4, 6, 8, 10]\\n\\nconst fruits = [\"apple\", \"banana\", \"cherry\", \"date\"];\\nconst longFruits = fruits.filter(fruit => fruit.length > 5);\\nconsole.log(longFruits); // [\"banana\", \"cherry\"]'\r\n      }\r\n    ]\r\n  }\r\n];\r\n\r\nexport default arraysContent; "],"names":["title","examples","code"],"sourceRoot":""}