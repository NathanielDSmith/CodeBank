{"version":3,"file":"static/js/2541.86728f17.chunk.js","mappings":"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","sources":["components/ContentSection.tsx","components/CodeBlock.tsx","data/dockerContent.ts","pages/DockerPage.tsx","components/PageHeader.tsx","components/SidePanel.tsx","hooks/usePageNavigation.ts"],"sourcesContent":["import React from 'react';\r\nimport { ContentSectionProps } from '../types/index';\r\n\r\nconst ContentSection: React.FC<ContentSectionProps> = ({ title, children }) => {\r\n  return (\r\n    <section className=\"bg-black/70 backdrop-blur-sm rounded-lg p-3 sm:p-4 lg:p-6 border border-green-500/30 shadow-lg overflow-hidden\">\r\n      <h3 className=\"text-sm sm:text-lg lg:text-xl font-semibold text-green-400 mb-3 sm:mb-4 font-mono matrix-glow break-words\">{title}</h3>\r\n      <div className=\"overflow-x-auto\">\r\n        {children}\r\n      </div>\r\n    </section>\r\n  );\r\n};\r\n\r\nexport default ContentSection; ","import React from 'react';\r\nimport { CodeBlockProps } from '../types/index';\r\n\r\nconst CodeBlock: React.FC<CodeBlockProps> = ({ code, language = 'javascript' }) => {\r\n  return (\r\n    <div \r\n      className=\"bg-gray-900 text-green-400 p-3 sm:p-4 rounded-lg overflow-x-auto\"\r\n      role=\"code\"\r\n      aria-label={`${language} code example`}\r\n    >\r\n      <pre className=\"text-xs sm:text-sm font-mono whitespace-pre-wrap break-words m-0\">\r\n        <code className=\"break-all\">{code}</code>\r\n      </pre>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default CodeBlock; ","import { Section } from '../types/index';\r\n\r\ninterface DockerContentSection {\r\n  title: string;\r\n  examples: { title: string; code: string }[];\r\n}\r\n\r\nexport const dockerSections: Section[] = [\r\n  {\r\n    id: 'images',\r\n    title: 'Docker Images',\r\n    icon: 'üì¶'\r\n  },\r\n  {\r\n    id: 'containers',\r\n    title: 'Containers & Volumes',\r\n    icon: 'üê≥'\r\n  },\r\n  {\r\n    id: 'compose',\r\n    title: 'Docker Compose',\r\n    icon: 'üìã'\r\n  },\r\n  {\r\n    id: 'networking',\r\n    title: 'Networking',\r\n    icon: 'üåê'\r\n  },\r\n  {\r\n    id: 'best-practices',\r\n    title: 'Best Practices',\r\n    icon: '‚úÖ'\r\n  },\r\n  {\r\n    id: 'deployment',\r\n    title: 'Deployment',\r\n    icon: 'üöÄ'\r\n  }\r\n];\r\n\r\nexport const dockerContent: { [key: string]: DockerContentSection[] } = {\r\n  images: [\r\n    {\r\n      title: 'Building Images',\r\n      examples: [\r\n        {\r\n          title: 'Basic Dockerfile',\r\n          code: `# Use official Node.js runtime as base image\r\nFROM node:18-alpine\r\n\r\n# Set working directory\r\nWORKDIR /app\r\n\r\n# Copy package files\r\nCOPY package*.json ./\r\n\r\n# Install dependencies\r\nRUN npm install\r\n\r\n# Copy application code\r\nCOPY . .\r\n\r\n# Expose port\r\nEXPOSE 3000\r\n\r\n# Start the application\r\nCMD [\"npm\", \"start\"]`\r\n        },\r\n        {\r\n          title: 'Multi-stage Build',\r\n          code: `# Build stage\r\nFROM node:18-alpine AS builder\r\nWORKDIR /app\r\nCOPY package*.json ./\r\nRUN npm install\r\nCOPY . .\r\nRUN npm run build\r\n\r\n# Production stage\r\nFROM nginx:alpine\r\nCOPY --from=builder /app/dist /usr/share/nginx/html\r\nEXPOSE 80\r\nCMD [\"nginx\", \"-g\", \"daemon off;\"]`\r\n        },\r\n        {\r\n          title: 'Build and Tag',\r\n          code: `# Build image with tag\r\ndocker build -t myapp:latest .\r\n\r\n# Build with specific tag\r\ndocker build -t myapp:v1.0.0 .\r\n\r\n# Build with multiple tags\r\ndocker build -t myapp:latest -t myapp:v1.0.0 .\r\n\r\n# Build from specific Dockerfile\r\ndocker build -f Dockerfile.prod -t myapp:prod .`\r\n        }\r\n      ]\r\n    }\r\n  ],\r\n  containers: [\r\n    {\r\n      title: 'Container Management',\r\n      examples: [\r\n        {\r\n          title: 'Run Container',\r\n          code: `# Run container in foreground\r\ndocker run nginx:alpine\r\n\r\n# Run in background\r\ndocker run -d nginx:alpine\r\n\r\n# Run with port mapping\r\ndocker run -d -p 8080:80 nginx:alpine\r\n\r\n# Run with name\r\ndocker run -d --name my-nginx nginx:alpine\r\n\r\n# Run with environment variables\r\ndocker run -d -e NODE_ENV=production myapp:latest`\r\n        },\r\n        {\r\n          title: 'Volume Management',\r\n          code: `# Create named volume\r\ndocker volume create my-data\r\n\r\n# Run with volume\r\ndocker run -d -v my-data:/app/data myapp:latest\r\n\r\n# Bind mount host directory\r\ndocker run -d -v /host/path:/container/path myapp:latest\r\n\r\n# Anonymous volume\r\ndocker run -d -v /app/data myapp:latest\r\n\r\n# List volumes\r\ndocker volume ls\r\n\r\n# Inspect volume\r\ndocker volume inspect my-data`\r\n        },\r\n        {\r\n          title: 'Container Operations',\r\n          code: `# List running containers\r\ndocker ps\r\n\r\n# List all containers\r\ndocker ps -a\r\n\r\n# Stop container\r\ndocker stop container_id\r\n\r\n# Start container\r\ndocker start container_id\r\n\r\n# Remove container\r\ndocker rm container_id\r\n\r\n# Execute command in running container\r\ndocker exec -it container_id /bin/bash\r\n\r\n# View container logs\r\ndocker logs container_id\r\n\r\n# Follow logs\r\ndocker logs -f container_id`\r\n        }\r\n      ]\r\n    }\r\n  ],\r\n  compose: [\r\n    {\r\n      title: 'Docker Compose Basics',\r\n      examples: [\r\n        {\r\n          title: 'Basic docker-compose.yml',\r\n          code: `version: '3.8'\r\n\r\nservices:\r\n  web:\r\n    build: .\r\n    ports:\r\n      - \"3000:3000\"\r\n    environment:\r\n      - NODE_ENV=development\r\n    volumes:\r\n      - .:/app\r\n      - /app/node_modules\r\n    depends_on:\r\n      - db\r\n\r\n  db:\r\n    image: postgres:13\r\n    environment:\r\n      - POSTGRES_DB=myapp\r\n      - POSTGRES_USER=user\r\n      - POSTGRES_PASSWORD=password\r\n    volumes:\r\n      - postgres_data:/var/lib/postgresql/data\r\n\r\nvolumes:\r\n  postgres_data:`\r\n        },\r\n        {\r\n          title: 'Compose Commands',\r\n          code: `# Start services\r\ndocker-compose up\r\n\r\n# Start in background\r\ndocker-compose up -d\r\n\r\n# Build and start\r\ndocker-compose up --build\r\n\r\n# Stop services\r\ndocker-compose down\r\n\r\n# View logs\r\ndocker-compose logs\r\n\r\n# Follow logs\r\ndocker-compose logs -f\r\n\r\n# Execute command in service\r\ndocker-compose exec web npm test\r\n\r\n# Scale service\r\ndocker-compose up --scale web=3`\r\n        },\r\n        {\r\n          title: 'Environment Variables',\r\n          code: `# docker-compose.yml with env file\r\nversion: '3.8'\r\n\r\nservices:\r\n  web:\r\n    build: .\r\n    ports:\r\n      - \"3000:3000\"\r\n    env_file:\r\n      - .env\r\n    environment:\r\n      - NODE_ENV=production\r\n      - DATABASE_URL=postgresql://user:pass@db:5432/myapp\r\n\r\n  db:\r\n    image: postgres:13\r\n    env_file:\r\n      - .env.db\r\n\r\n# .env file\r\nNODE_ENV=production\r\nDATABASE_URL=postgresql://user:pass@db:5432/myapp\r\n\r\n# .env.db file\r\nPOSTGRES_DB=myapp\r\nPOSTGRES_USER=user\r\nPOSTGRES_PASSWORD=password`\r\n        }\r\n      ]\r\n    }\r\n  ],\r\n  networking: [\r\n    {\r\n      title: 'Docker Networks',\r\n      examples: [\r\n        {\r\n          title: 'Network Commands',\r\n          code: `# List networks\r\ndocker network ls\r\n\r\n# Create custom network\r\ndocker network create my-network\r\n\r\n# Run container on specific network\r\ndocker run -d --network my-network nginx:alpine\r\n\r\n# Connect container to network\r\ndocker network connect my-network container_id\r\n\r\n# Inspect network\r\ndocker network inspect my-network\r\n\r\n# Remove network\r\ndocker network rm my-network`\r\n        },\r\n        {\r\n          title: 'Network Types',\r\n          code: `# Bridge network (default)\r\ndocker run -d --network bridge nginx:alpine\r\n\r\n# Host network\r\ndocker run -d --network host nginx:alpine\r\n\r\n# None network (no networking)\r\ndocker run -d --network none nginx:alpine\r\n\r\n# Custom network with driver\r\ndocker network create --driver bridge my-custom-network\r\n\r\n# Overlay network (for swarm)\r\ndocker network create --driver overlay my-overlay-network`\r\n        },\r\n        {\r\n          title: 'Service Discovery',\r\n          code: `# docker-compose.yml with custom network\r\nversion: '3.8'\r\n\r\nservices:\r\n  web:\r\n    build: .\r\n    ports:\r\n      - \"3000:3000\"\r\n    networks:\r\n      - app-network\r\n    depends_on:\r\n      - api\r\n\r\n  api:\r\n    build: ./api\r\n    networks:\r\n      - app-network\r\n    environment:\r\n      - DATABASE_URL=postgresql://user:pass@db:5432/myapp\r\n\r\n  db:\r\n    image: postgres:13\r\n    networks:\r\n      - app-network\r\n    environment:\r\n      - POSTGRES_DB=myapp\r\n      - POSTGRES_USER=user\r\n      - POSTGRES_PASSWORD=password\r\n\r\nnetworks:\r\n  app-network:\r\n    driver: bridge`\r\n        }\r\n      ]\r\n    }\r\n  ],\r\n  'best-practices': [\r\n    {\r\n      title: 'Image Optimization',\r\n      examples: [\r\n        {\r\n          title: 'Use Alpine Images',\r\n          code: `# Instead of\r\nFROM ubuntu:20.04\r\n\r\n# Use\r\nFROM alpine:latest\r\n\r\n# Or for Node.js\r\nFROM node:18-alpine\r\n\r\n# Benefits:\r\n# - Smaller image size\r\n# - Faster downloads\r\n# - Reduced attack surface`\r\n        },\r\n        {\r\n          title: 'Layer Optimization',\r\n          code: `# Bad: Multiple RUN commands\r\nFROM node:18-alpine\r\nWORKDIR /app\r\nCOPY package*.json ./\r\nRUN npm install\r\nCOPY . .\r\nRUN npm run build\r\n\r\n# Good: Combine RUN commands\r\nFROM node:18-alpine\r\nWORKDIR /app\r\nCOPY package*.json ./\r\nCOPY . .\r\nRUN npm install && npm run build\r\n\r\n# Better: Use .dockerignore\r\n# .dockerignore file:\r\nnode_modules\r\nnpm-debug.log\r\n.git\r\n.gitignore\r\nREADME.md`\r\n        },\r\n        {\r\n          title: 'Security Best Practices',\r\n          code: `# Run as non-root user\r\nFROM node:18-alpine\r\nRUN addgroup -g 1001 -S nodejs\r\nRUN adduser -S nextjs -u 1001\r\nUSER nextjs\r\n\r\n# Use specific versions\r\nFROM node:18.17.0-alpine\r\n\r\n# Scan for vulnerabilities\r\ndocker scan myapp:latest\r\n\r\n# Use multi-stage builds\r\nFROM node:18-alpine AS builder\r\n# ... build steps\r\nFROM nginx:alpine\r\nCOPY --from=builder /app/dist /usr/share/nginx/html`\r\n        }\r\n      ]\r\n    }\r\n  ],\r\n  deployment: [\r\n    {\r\n      title: 'Production Deployment',\r\n      examples: [\r\n        {\r\n          title: 'Production Dockerfile',\r\n          code: `# Multi-stage production build\r\nFROM node:18-alpine AS deps\r\nRUN apk add --no-cache libc6-compat\r\nWORKDIR /app\r\nCOPY package*.json ./\r\nRUN npm ci --only=production\r\n\r\nFROM node:18-alpine AS builder\r\nWORKDIR /app\r\nCOPY --from=deps /app/node_modules ./node_modules\r\nCOPY . .\r\nRUN npm run build\r\n\r\nFROM node:18-alpine AS runner\r\nWORKDIR /app\r\nENV NODE_ENV production\r\nRUN addgroup -g 1001 -S nodejs\r\nRUN adduser -S nextjs -u 1001\r\nCOPY --from=builder /app/public ./public\r\nCOPY --from=builder --chown=nextjs:nodejs /app/.next/standalone ./\r\nCOPY --from=builder --chown=nextjs:nodejs /app/.next/static ./.next/static\r\nUSER nextjs\r\nEXPOSE 3000\r\nENV PORT 3000\r\nCMD [\"node\", \"server.js\"]`\r\n        },\r\n        {\r\n          title: 'Docker Swarm',\r\n          code: `# Initialize swarm\r\ndocker swarm init\r\n\r\n# Deploy stack\r\ndocker stack deploy -c docker-compose.yml myapp\r\n\r\n# List services\r\ndocker service ls\r\n\r\n# Scale service\r\ndocker service scale myapp_web=5\r\n\r\n# Update service\r\ndocker service update --image myapp:v2.0.0 myapp_web\r\n\r\n# Remove stack\r\ndocker stack rm myapp\r\n\r\n# Leave swarm\r\ndocker swarm leave --force`\r\n        },\r\n        {\r\n          title: 'Kubernetes Deployment',\r\n          code: `# deployment.yaml\r\napiVersion: apps/v1\r\nkind: Deployment\r\nmetadata:\r\n  name: myapp\r\nspec:\r\n  replicas: 3\r\n  selector:\r\n    matchLabels:\r\n      app: myapp\r\n  template:\r\n    metadata:\r\n      labels:\r\n        app: myapp\r\n    spec:\r\n      containers:\r\n      - name: myapp\r\n        image: myapp:latest\r\n        ports:\r\n        - containerPort: 3000\r\n        env:\r\n        - name: NODE_ENV\r\n          value: \"production\"\r\n\r\n# service.yaml\r\napiVersion: v1\r\nkind: Service\r\nmetadata:\r\n  name: myapp-service\r\nspec:\r\n  selector:\r\n    app: myapp\r\n  ports:\r\n  - port: 80\r\n    targetPort: 3000\r\n  type: LoadBalancer`\r\n        }\r\n      ]\r\n    }\r\n  ]\r\n};\r\n\r\nexport const loadDockerContent = async (sectionId: string): Promise<DockerContentSection[]> => {\r\n  // Simulate async loading\r\n  await new Promise(resolve => setTimeout(resolve, 100));\r\n  return dockerContent[sectionId] || [];\r\n};\r\n\r\nexport const preloadDockerSection = async (sectionId: string): Promise<void> => {\r\n  // Preload content for better UX\r\n  if (dockerContent[sectionId]) {\r\n    await new Promise(resolve => setTimeout(resolve, 50));\r\n  }\r\n}; ","import React, { useState, useEffect } from 'react';\r\nimport PageHeader from '../components/PageHeader';\r\nimport SidePanel from '../components/SidePanel';\r\nimport CodeBlock from '../components/CodeBlock';\r\nimport ContentSection from '../components/ContentSection';\r\nimport { usePageNavigation } from '../hooks/usePageNavigation';\r\nimport { dockerSections, loadDockerContent, preloadDockerSection } from '../data/dockerContent';\r\n\r\ninterface DockerContentSection {\r\n  title: string;\r\n  examples: { title: string; code: string }[];\r\n}\r\n\r\nconst DockerPage: React.FC = () => {\r\n  const { activeSection, searchTerm, handleSectionChange, handleSearchChange } = usePageNavigation('images');\r\n  const [content, setContent] = useState<DockerContentSection[] | null>(null);\r\n  const [loading, setLoading] = useState(false);\r\n  const [error, setError] = useState<string | null>(null);\r\n  const [isSidePanelOpen, setIsSidePanelOpen] = useState(false);\r\n\r\n  useEffect(() => {\r\n    const loadContent = async () => {\r\n      setLoading(true);\r\n      setError(null);\r\n      \r\n      try {\r\n        const sectionContent = await loadDockerContent(activeSection);\r\n        setContent(sectionContent);\r\n      } catch (err) {\r\n        setError('Failed to load content');\r\n        console.error('Error loading content:', err);\r\n      } finally {\r\n        setLoading(false);\r\n      }\r\n    };\r\n\r\n    loadContent();\r\n  }, [activeSection]);\r\n\r\n  // Preload next section for better UX\r\n  useEffect(() => {\r\n    const currentIndex = dockerSections.findIndex(s => s.id === activeSection);\r\n    if (currentIndex < dockerSections.length - 1) {\r\n      const nextSection = dockerSections[currentIndex + 1];\r\n      preloadDockerSection(nextSection.id);\r\n    }\r\n  }, [activeSection]);\r\n\r\n  const renderContent = () => {\r\n    if (loading) {\r\n      return (\r\n        <div className=\"text-center py-12\">\r\n          <div className=\"animate-spin rounded-full h-12 w-12 border-b-2 border-blue-600 mx-auto mb-4\"></div>\r\n          <p className=\"text-green-400 font-mono\">INITIALIZING DOCKER...</p>\r\n        </div>\r\n      );\r\n    }\r\n\r\n    if (error) {\r\n      return (\r\n        <div className=\"text-center py-12\">\r\n          <h2 className=\"text-lg sm:text-xl lg:text-2xl font-bold text-green-400 mb-4 font-mono\">\r\n            {dockerSections.find(s => s.id === activeSection)?.title}\r\n          </h2>\r\n          <p className=\"text-red-400 mb-4 font-mono\">{error}</p>\r\n          <button \r\n            onClick={() => window.location.reload()}\r\n            className=\"px-4 py-2 bg-red-600 text-white rounded hover:bg-red-700 font-mono transition-colors duration-300\"\r\n          >\r\n            RETRY\r\n          </button>\r\n        </div>\r\n      );\r\n    }\r\n\r\n    if (!content) {\r\n      return (\r\n        <div className=\"text-center py-12\">\r\n          <h2 className=\"text-lg sm:text-xl lg:text-2xl font-bold text-green-400 mb-4 font-mono\">\r\n            {dockerSections.find(s => s.id === activeSection)?.title}\r\n          </h2>\r\n          <p className=\"text-green-300 font-mono\">\r\n            Content for {dockerSections.find(s => s.id === activeSection)?.title} will be added here...\r\n          </p>\r\n        </div>\r\n      );\r\n    }\r\n\r\n    return (\r\n      <div className=\"space-y-6\">\r\n        <h2 className=\"text-lg sm:text-xl lg:text-2xl font-bold text-green-400 mb-4 font-mono matrix-glow\">\r\n          {dockerSections.find(s => s.id === activeSection)?.title}\r\n        </h2>\r\n        \r\n        {content.map((section, index) => (\r\n          <ContentSection key={index} title={section.title}>\r\n            <div className=\"space-y-4\">\r\n              {section.examples.map((example, exampleIndex) => (\r\n                <div key={exampleIndex} className=\"bg-black/50 border border-green-500/30 rounded-lg p-3 sm:p-4\">\r\n                  <h4 className=\"text-sm sm:text-base font-medium text-green-300 mb-2 font-mono\">{example.title}</h4>\r\n                  <CodeBlock code={example.code} language=\"dockerfile\" />\r\n                </div>\r\n              ))}\r\n            </div>\r\n          </ContentSection>\r\n        ))}\r\n      </div>\r\n    );\r\n  };\r\n\r\n  return (\r\n    <div className=\"min-h-screen bg-black relative overflow-hidden\">\r\n      {/* Matrix digital rain background */}\r\n      <div className=\"absolute inset-0 opacity-10\">\r\n        <div className=\"matrix-rain\"></div>\r\n      </div>\r\n      \r\n      {/* Scan lines effect */}\r\n      <div className=\"absolute inset-0 opacity-5\">\r\n        <div className=\"scanlines\"></div>\r\n      </div>\r\n      \r\n      {/* Grid overlay */}\r\n      <div className=\"absolute inset-0 bg-gradient-to-b from-transparent via-green-900/5 to-green-900/10\"></div>\r\n      \r\n      <PageHeader title=\"Docker Basics\" icon=\"üê≥\" />\r\n      \r\n      <div className=\"max-w-7xl mx-auto px-4 sm:px-6 lg:px-8 py-4 sm:py-8 relative z-10\">\r\n        <div className=\"flex gap-4 sm:gap-8\">\r\n          <SidePanel\r\n            sections={dockerSections}\r\n            activeSection={activeSection}\r\n            searchTerm={searchTerm}\r\n            onSectionChange={handleSectionChange}\r\n            onSearchChange={handleSearchChange}\r\n            isOpen={isSidePanelOpen}\r\n            onToggle={() => setIsSidePanelOpen(!isSidePanelOpen)}\r\n          />\r\n          \r\n          <div className=\"flex-1 min-w-0\">\r\n            {renderContent()}\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default DockerPage; ","import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport { PageHeaderProps } from '../types/index';\r\n\r\nconst PageHeader: React.FC<PageHeaderProps> = ({ title, icon }) => {\r\n  return (\r\n    <header className=\"bg-black/80 backdrop-blur-sm border-b border-green-500/30 sticky top-0 z-50\">\r\n      <div className=\"max-w-7xl mx-auto px-4 sm:px-6 lg:px-8\">\r\n        <div className=\"flex justify-between items-center py-3 sm:py-4 lg:py-6\">\r\n          <div className=\"flex items-center\">\r\n            <Link to=\"/\" className=\"text-green-400 hover:text-green-300 mr-1 sm:mr-2 lg:mr-4 font-mono transition-colors duration-300 text-xs sm:text-sm lg:text-base\">\r\n              <span className=\"text-green-300\">$</span> cd /home\r\n            </Link>\r\n            <div className=\"flex items-center\">\r\n              <span className=\"text-lg sm:text-2xl lg:text-3xl mr-1 sm:mr-2 lg:mr-3 text-green-400\">{icon}</span>\r\n              <h1 className=\"text-xs sm:text-lg lg:text-3xl font-bold text-green-400 font-mono matrix-glow break-words\">{title}</h1>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </header>\r\n  );\r\n};\r\n\r\nexport default PageHeader; ","import React from 'react';\r\nimport { SidePanelProps } from '../types/index';\r\n\r\nconst SidePanel: React.FC<SidePanelProps> = ({\r\n  sections,\r\n  activeSection,\r\n  searchTerm,\r\n  onSectionChange,\r\n  onSearchChange,\r\n  isOpen = true,\r\n  onToggle\r\n}) => {\r\n  const filteredSections = sections.filter(section =>\r\n    section.title.toLowerCase().includes(searchTerm.toLowerCase())\r\n  );\r\n\r\n  return (\r\n    <>\r\n      {/* Mobile Toggle Button */}\r\n      <div className=\"lg:hidden fixed top-28 right-4 z-50\">\r\n        <button\r\n          onClick={onToggle}\r\n          className=\"bg-black/80 backdrop-blur-sm border border-green-500/50 rounded-lg p-3 text-green-400 hover:text-green-300 transition-colors duration-300\"\r\n          aria-label=\"Toggle navigation menu\"\r\n        >\r\n          <svg className=\"w-6 h-6\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\r\n            {isOpen ? (\r\n              <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M6 18L18 6M6 6l12 12\" />\r\n            ) : (\r\n              <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M4 6h16M4 12h16M4 18h16\" />\r\n            )}\r\n          </svg>\r\n        </button>\r\n      </div>\r\n\r\n      {/* Mobile Overlay */}\r\n      {isOpen && (\r\n        <div \r\n          className=\"lg:hidden fixed inset-0 bg-black/50 backdrop-blur-sm z-40\"\r\n          onClick={onToggle}\r\n        />\r\n      )}\r\n\r\n      {/* Side Panel */}\r\n      <div className={`\r\n        ${isOpen ? 'translate-x-0' : '-translate-x-full lg:translate-x-0'}\r\n        lg:w-64 w-80 flex-shrink-0\r\n        fixed lg:relative top-0 left-0 h-full lg:h-auto\r\n        z-50 lg:z-auto\r\n        transition-transform duration-300 ease-in-out\r\n      `}>\r\n        <div className=\"bg-black/90 backdrop-blur-sm border border-green-500/30 p-6 h-full lg:h-auto lg:sticky lg:top-8 overflow-y-auto\">\r\n          <div className=\"lg:hidden flex justify-between items-center mb-4\">\r\n            <h3 className=\"text-lg font-semibold text-green-400 font-mono\">NAVIGATION</h3>\r\n            <button\r\n              onClick={onToggle}\r\n              className=\"text-green-400 hover:text-green-300 transition-colors duration-300\"\r\n              aria-label=\"Close navigation menu\"\r\n            >\r\n              <svg className=\"w-6 h-6\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\r\n                <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M6 18L18 6M6 6l12 12\" />\r\n              </svg>\r\n            </button>\r\n          </div>\r\n          \r\n          <h3 className=\"hidden lg:block text-lg font-semibold text-green-400 mb-4 font-mono\">NAVIGATION</h3>\r\n          \r\n          {/* Search Box */}\r\n          <div className=\"mb-4\">\r\n            <label htmlFor=\"search-topics\" className=\"sr-only\">\r\n              Search topics\r\n            </label>\r\n            <input\r\n              id=\"search-topics\"\r\n              type=\"text\"\r\n              placeholder=\"grep -r 'pattern' /*\"\r\n              value={searchTerm}\r\n              onChange={(e) => onSearchChange(e.target.value)}\r\n              className=\"w-full px-3 py-2 bg-black/50 border border-green-500/50 rounded-lg focus:outline-none focus:ring-2 focus:ring-green-500/20 focus:border-green-400 text-green-300 font-mono placeholder-green-500/50\"\r\n              aria-label=\"Search topics in table of contents\"\r\n            />\r\n          </div>\r\n          \r\n          <nav className=\"space-y-2\" aria-label=\"Table of contents\">\r\n            {filteredSections.map((section) => (\r\n              <button\r\n                key={section.id}\r\n                onClick={() => {\r\n                  onSectionChange(section.id);\r\n                  // Close mobile menu after selection\r\n                  if (window.innerWidth < 1024) {\r\n                    onToggle?.();\r\n                  }\r\n                }}\r\n                className={`w-full text-left px-3 py-2 rounded-lg transition-all duration-300 font-mono ${\r\n                  activeSection === section.id\r\n                    ? 'bg-green-500/20 text-green-300 border border-green-400 shadow-lg'\r\n                    : 'text-green-400 hover:bg-green-500/10 hover:text-green-300 border border-transparent hover:border-green-500/50'\r\n                }`}\r\n                aria-current={activeSection === section.id ? 'page' : undefined}\r\n              >\r\n                <span className=\"mr-2\" aria-hidden=\"true\">{section.icon}</span>\r\n                {section.title}\r\n              </button>\r\n            ))}\r\n            \r\n            {filteredSections.length === 0 && (\r\n              <div className=\"text-green-500 text-sm py-2 font-mono\" role=\"status\">\r\n                No topics found matching \"{searchTerm}\"\r\n              </div>\r\n            )}\r\n          </nav>\r\n        </div>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default SidePanel; ","import { useState, useEffect } from 'react';\r\nimport { useLocation, useNavigate } from 'react-router-dom';\r\n\r\nexport const usePageNavigation = (defaultSection: string) => {\r\n  const location = useLocation();\r\n  const navigate = useNavigate();\r\n  const [searchTerm, setSearchTerm] = useState('');\r\n\r\n  // Extract section from URL or use default\r\n  const getSectionFromUrl = () => {\r\n    const pathParts = location.pathname.split('/');\r\n    return pathParts[pathParts.length - 1] || defaultSection;\r\n  };\r\n\r\n  const [activeSection, setActiveSection] = useState(getSectionFromUrl());\r\n\r\n  // Update active section when URL changes\r\n  useEffect(() => {\r\n    const sectionFromUrl = getSectionFromUrl();\r\n    if (sectionFromUrl !== activeSection) {\r\n      setActiveSection(sectionFromUrl);\r\n    }\r\n  }, [location.pathname]);\r\n\r\n  const handleSectionChange = (sectionId: string) => {\r\n    setActiveSection(sectionId);\r\n    // Update URL to reflect the current section\r\n    const currentPath = location.pathname;\r\n    const basePath = currentPath.split('/').slice(0, -1).join('/') || currentPath;\r\n    navigate(`${basePath}/${sectionId}`, { replace: true });\r\n  };\r\n\r\n  const handleSearchChange = (term: string) => {\r\n    setSearchTerm(term);\r\n  };\r\n\r\n  return {\r\n    activeSection,\r\n    searchTerm,\r\n    handleSectionChange,\r\n    handleSearchChange\r\n  };\r\n}; "],"names":["_ref","title","children","_jsxs","className","_jsx","code","language","role","concat","dockerSections","id","icon","dockerContent","images","examples","containers","compose","networking","deployment","DockerPage","activeSection","searchTerm","handleSectionChange","handleSearchChange","usePageNavigation","content","setContent","useState","loading","setLoading","error","setError","isSidePanelOpen","setIsSidePanelOpen","useEffect","async","sectionContent","Promise","resolve","setTimeout","sectionId","loadDockerContent","err","console","loadContent","currentIndex","findIndex","s","length","preloadDockerSection","PageHeader","SidePanel","sections","onSectionChange","onSearchChange","isOpen","onToggle","renderContent","_dockerSections$find4","_dockerSections$find","_dockerSections$find2","_dockerSections$find3","find","onClick","window","location","reload","map","section","index","ContentSection","example","exampleIndex","CodeBlock","Link","to","filteredSections","filter","toLowerCase","includes","_Fragment","fill","stroke","viewBox","strokeLinecap","strokeLinejoin","strokeWidth","d","htmlFor","type","placeholder","value","onChange","e","target","innerWidth","undefined","defaultSection","useLocation","navigate","useNavigate","setSearchTerm","getSectionFromUrl","pathParts","pathname","split","setActiveSection","sectionFromUrl","currentPath","basePath","slice","join","replace","term"],"sourceRoot":""}