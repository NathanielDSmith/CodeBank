{"version":3,"file":"static/js/1083.798cfe72.chunk.js","mappings":"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","sources":["components/ContentSection.tsx","data/stringContent.ts","pages/StringManipulation.tsx","data/string|lazy|/^/.*$/|groupOptions: {}|namespace object","components/PageHeader.tsx","components/SidePanel.tsx","hooks/usePageNavigation.ts"],"sourcesContent":["import React from 'react';\r\nimport { ContentSectionProps } from '../types/index';\r\n\r\nconst ContentSection: React.FC<ContentSectionProps> = ({ title, children }) => {\r\n  return (\r\n    <section className=\"bg-black/70 backdrop-blur-sm rounded-lg p-3 sm:p-4 lg:p-6 border border-green-500/30 shadow-lg overflow-hidden\">\r\n      <h3 className=\"text-sm sm:text-lg lg:text-xl font-semibold text-green-400 mb-3 sm:mb-4 font-mono matrix-glow break-words\">{title}</h3>\r\n      <div className=\"overflow-x-auto\">\r\n        {children}\r\n      </div>\r\n    </section>\r\n  );\r\n};\r\n\r\nexport default ContentSection; ","import { Section } from '../types/index';\r\n\r\nexport const stringSections: Section[] = [\r\n  { id: 'basics', title: 'Basic Methods', icon: '📝' },\r\n  { id: 'search', title: 'Search & Replace', icon: '🔍' },\r\n  { id: 'formatting', title: 'Text Formatting', icon: '✨' },\r\n  { id: 'splitting', title: 'Splitting & Joining', icon: '✂️' },\r\n  { id: 'case', title: 'Case Conversion', icon: '🔄' },\r\n  { id: 'validation', title: 'Validation', icon: '✅' },\r\n  { id: 'encoding', title: 'Encoding & Decoding', icon: '🔐' },\r\n  { id: 'regex', title: 'Regular Expressions', icon: '🎯' },\r\n  { id: 'advanced', title: 'Advanced Patterns', icon: '🚀' },\r\n  { id: 'performance', title: 'Performance Tips', icon: '⚡' },\r\n  { id: 'best-practices', title: 'Best Practices', icon: '⭐' }\r\n];\r\n\r\n// Lazy loading function for content\r\nexport const loadStringContent = async (sectionId: string) => {\r\n  try {\r\n    const module = await import(`./string/${sectionId}`);\r\n    return module.default;\r\n  } catch (error) {\r\n    console.error(`Failed to load content for section: ${sectionId}`, error);\r\n    return null;\r\n  }\r\n};\r\n\r\n// Preload function for better UX\r\nexport const preloadStringSection = (sectionId: string) => {\r\n  import(`./string/${sectionId}`);\r\n}; ","import React, { useState, useEffect } from 'react';\nimport { stringSections, loadStringContent, preloadStringSection } from '../data/stringContent';\nimport PageHeader from '../components/PageHeader';\nimport SidePanel from '../components/SidePanel';\nimport ContentSection from '../components/ContentSection';\nimport { usePageNavigation } from '../hooks/usePageNavigation';\n\ninterface StringContent {\n  title: string;\n  examples: {\n    title: string;\n    code: string;\n  }[];\n}\n\nconst StringManipulation: React.FC = () => {\n  const { activeSection, searchTerm, handleSectionChange, handleSearchChange } = usePageNavigation('basics');\n  const [content, setContent] = useState<StringContent[]>([]);\n  const [loading, setLoading] = useState<boolean>(true);\n  const [error, setError] = useState<string | null>(null);\n  const [isSidePanelOpen, setIsSidePanelOpen] = useState(false);\n\n  useEffect(() => {\n    const loadContent = async () => {\n      setLoading(true);\n      setError(null);\n      \n      try {\n        const sectionContent = await loadStringContent(activeSection);\n        if (sectionContent) {\n          setContent(sectionContent);\n        } else {\n          setError('Failed to load content');\n        }\n      } catch (err) {\n        setError('Error loading content');\n        console.error('Error loading string content:', err);\n      } finally {\n        setLoading(false);\n      }\n    };\n\n    loadContent();\n  }, [activeSection]);\n\n  if (error) {\n    return (\n      <div className=\"min-h-screen bg-black relative overflow-hidden\">\n        {/* Matrix digital rain background */}\n        <div className=\"absolute inset-0 opacity-10\">\n          <div className=\"matrix-rain\"></div>\n        </div>\n        \n        {/* Scan lines effect */}\n        <div className=\"absolute inset-0 opacity-5\">\n          <div className=\"scanlines\"></div>\n        </div>\n        \n        {/* Grid overlay */}\n        <div className=\"absolute inset-0 bg-gradient-to-b from-transparent via-green-900/5 to-green-900/10\"></div>\n        \n        <PageHeader \n          title=\"String Manipulation\" \n          icon=\"📝\"\n        />\n        <div className=\"max-w-7xl mx-auto px-4 sm:px-6 lg:px-8 py-8 relative z-10\">\n          <div className=\"bg-red-900/50 border border-red-500/30 rounded-lg p-6 backdrop-blur-sm\">\n            <h3 className=\"text-lg font-medium text-red-400 mb-2 font-mono\">ERROR: Content Load Failed</h3>\n            <p className=\"text-red-300 font-mono\">{error}</p>\n            <button \n              onClick={() => window.location.reload()}\n              className=\"mt-4 px-4 py-2 bg-red-600 text-white rounded-md hover:bg-red-700 font-mono transition-colors duration-300\"\n            >\n              RETRY\n            </button>\n          </div>\n        </div>\n      </div>\n    );\n  }\n\n  return (\n    <div className=\"min-h-screen bg-black relative overflow-hidden\">\n      {/* Matrix digital rain background */}\n      <div className=\"absolute inset-0 opacity-10\">\n        <div className=\"matrix-rain\"></div>\n      </div>\n      \n      {/* Scan lines effect */}\n      <div className=\"absolute inset-0 opacity-5\">\n        <div className=\"scanlines\"></div>\n      </div>\n      \n      {/* Grid overlay */}\n      <div className=\"absolute inset-0 bg-gradient-to-b from-transparent via-green-900/5 to-green-900/10\"></div>\n      \n      <PageHeader \n        title=\"String Manipulation\" \n        icon=\"📝\"\n      />\n      \n      <div className=\"max-w-7xl mx-auto px-4 sm:px-6 lg:px-8 py-4 sm:py-8 relative z-10\">\n        <div className=\"flex gap-4 sm:gap-8\">\n          {/* Side Panel */}\n          <div className=\"w-64 flex-shrink-0\">\n            <SidePanel\n              sections={stringSections}\n              activeSection={activeSection}\n              searchTerm={searchTerm}\n              onSectionChange={handleSectionChange}\n              onSearchChange={handleSearchChange}\n              isOpen={isSidePanelOpen}\n              onToggle={() => setIsSidePanelOpen(!isSidePanelOpen)}\n            />\n          </div>\n\n          {/* Main Content */}\n          <div className=\"flex-1 min-w-0\">\n            {loading ? (\n              <div className=\"space-y-6\">\n                <div className=\"animate-pulse\">\n                  <div className=\"h-8 bg-green-500/20 rounded w-1/3 mb-4\"></div>\n                  <div className=\"space-y-4\">\n                    <div className=\"h-4 bg-green-500/20 rounded w-full\"></div>\n                    <div className=\"h-4 bg-green-500/20 rounded w-5/6\"></div>\n                    <div className=\"h-4 bg-green-500/20 rounded w-4/6\"></div>\n                  </div>\n                </div>\n                <div className=\"animate-pulse\">\n                  <div className=\"h-6 bg-green-500/20 rounded w-1/4 mb-3\"></div>\n                  <div className=\"bg-black/50 border border-green-500/30 rounded-lg p-4\">\n                    <div className=\"h-4 bg-green-500/20 rounded w-full mb-2\"></div>\n                    <div className=\"h-4 bg-green-500/20 rounded w-3/4\"></div>\n                  </div>\n                </div>\n              </div>\n            ) : (\n              <div className=\"space-y-8\">\n                <h2 className=\"text-2xl font-bold text-green-400 font-mono matrix-glow\">\n                  {stringSections.find(section => section.id === activeSection)?.title}\n                </h2>\n\n                {content.map((section, index) => (\n                  <ContentSection key={index} title={section.title}>\n                    <div className=\"space-y-4\">\n                      {section.examples.map((example, exampleIndex) => (\n                        <div key={exampleIndex} className=\"bg-black/50 border border-green-500/30 rounded-lg p-6\">\n                          <h4 className=\"text-lg font-medium text-green-300 mb-3 font-mono\">\n                            {example.title}\n                          </h4>\n                          <pre className=\"bg-gray-900 border border-green-500/30 rounded-lg p-4 overflow-x-auto\">\n                            <code className=\"text-sm text-green-400 font-mono\">\n                              {example.code}\n                            </code>\n                          </pre>\n                        </div>\n                      ))}\n                    </div>\n                  </ContentSection>\n                ))}\n              </div>\n            )}\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default StringManipulation; ","var map = {\n\t\"./advanced\": [\n\t\t2123,\n\t\t2123\n\t],\n\t\"./advanced.ts\": [\n\t\t2123,\n\t\t2123\n\t],\n\t\"./basics\": [\n\t\t4582,\n\t\t4582\n\t],\n\t\"./basics.ts\": [\n\t\t4582,\n\t\t4582\n\t],\n\t\"./best-practices\": [\n\t\t5660,\n\t\t5660\n\t],\n\t\"./best-practices.ts\": [\n\t\t5660,\n\t\t5660\n\t],\n\t\"./case\": [\n\t\t4138,\n\t\t4138\n\t],\n\t\"./case.ts\": [\n\t\t4138,\n\t\t4138\n\t],\n\t\"./encoding\": [\n\t\t692,\n\t\t692\n\t],\n\t\"./encoding.ts\": [\n\t\t692,\n\t\t692\n\t],\n\t\"./formatting\": [\n\t\t8050,\n\t\t8050\n\t],\n\t\"./formatting.ts\": [\n\t\t8050,\n\t\t8050\n\t],\n\t\"./performance\": [\n\t\t6943,\n\t\t6943\n\t],\n\t\"./performance.ts\": [\n\t\t6943,\n\t\t6943\n\t],\n\t\"./regex\": [\n\t\t7462,\n\t\t7462\n\t],\n\t\"./regex.ts\": [\n\t\t7462,\n\t\t7462\n\t],\n\t\"./search\": [\n\t\t7085,\n\t\t7085\n\t],\n\t\"./search.ts\": [\n\t\t7085,\n\t\t7085\n\t],\n\t\"./splitting\": [\n\t\t2061,\n\t\t2061\n\t],\n\t\"./splitting.ts\": [\n\t\t2061,\n\t\t2061\n\t],\n\t\"./validation\": [\n\t\t8602,\n\t\t8602\n\t],\n\t\"./validation.ts\": [\n\t\t8602,\n\t\t8602\n\t]\n};\nfunction webpackAsyncContext(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\treturn Promise.resolve().then(() => {\n\t\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\t\te.code = 'MODULE_NOT_FOUND';\n\t\t\tthrow e;\n\t\t});\n\t}\n\n\tvar ids = map[req], id = ids[0];\n\treturn __webpack_require__.e(ids[1]).then(() => {\n\t\treturn __webpack_require__(id);\n\t});\n}\nwebpackAsyncContext.keys = () => (Object.keys(map));\nwebpackAsyncContext.id = 2645;\nmodule.exports = webpackAsyncContext;","import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport { PageHeaderProps } from '../types/index';\r\n\r\nconst PageHeader: React.FC<PageHeaderProps> = ({ title, icon }) => {\r\n  return (\r\n    <header className=\"bg-black/80 backdrop-blur-sm border-b border-green-500/30 sticky top-0 z-50\">\r\n      <div className=\"max-w-7xl mx-auto px-4 sm:px-6 lg:px-8\">\r\n        <div className=\"flex justify-between items-center py-3 sm:py-4 lg:py-6\">\r\n          <div className=\"flex items-center\">\r\n            <Link to=\"/\" className=\"text-green-400 hover:text-green-300 mr-1 sm:mr-2 lg:mr-4 font-mono transition-colors duration-300 text-xs sm:text-sm lg:text-base\">\r\n              <span className=\"text-green-300\">$</span> cd /home\r\n            </Link>\r\n            <div className=\"flex items-center\">\r\n              <span className=\"text-lg sm:text-2xl lg:text-3xl mr-1 sm:mr-2 lg:mr-3 text-green-400\">{icon}</span>\r\n              <h1 className=\"text-xs sm:text-lg lg:text-3xl font-bold text-green-400 font-mono matrix-glow break-words\">{title}</h1>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </header>\r\n  );\r\n};\r\n\r\nexport default PageHeader; ","import React from 'react';\r\nimport { SidePanelProps } from '../types/index';\r\n\r\nconst SidePanel: React.FC<SidePanelProps> = ({\r\n  sections,\r\n  activeSection,\r\n  searchTerm,\r\n  onSectionChange,\r\n  onSearchChange,\r\n  isOpen = true,\r\n  onToggle\r\n}) => {\r\n  const filteredSections = sections.filter(section =>\r\n    section.title.toLowerCase().includes(searchTerm.toLowerCase())\r\n  );\r\n\r\n  return (\r\n    <>\r\n      {/* Mobile Toggle Button */}\r\n      <div className=\"lg:hidden fixed top-28 right-4 z-50\">\r\n        <button\r\n          onClick={onToggle}\r\n          className=\"bg-black/80 backdrop-blur-sm border border-green-500/50 rounded-lg p-3 text-green-400 hover:text-green-300 transition-colors duration-300\"\r\n          aria-label=\"Toggle navigation menu\"\r\n        >\r\n          <svg className=\"w-6 h-6\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\r\n            {isOpen ? (\r\n              <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M6 18L18 6M6 6l12 12\" />\r\n            ) : (\r\n              <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M4 6h16M4 12h16M4 18h16\" />\r\n            )}\r\n          </svg>\r\n        </button>\r\n      </div>\r\n\r\n      {/* Mobile Overlay */}\r\n      {isOpen && (\r\n        <div \r\n          className=\"lg:hidden fixed inset-0 bg-black/50 backdrop-blur-sm z-40\"\r\n          onClick={onToggle}\r\n        />\r\n      )}\r\n\r\n      {/* Side Panel */}\r\n      <div className={`\r\n        ${isOpen ? 'translate-x-0' : '-translate-x-full lg:translate-x-0'}\r\n        lg:w-64 w-80 flex-shrink-0\r\n        fixed lg:relative top-0 left-0 h-full lg:h-auto\r\n        z-50 lg:z-auto\r\n        transition-transform duration-300 ease-in-out\r\n      `}>\r\n        <div className=\"bg-black/90 backdrop-blur-sm border border-green-500/30 p-6 h-full lg:h-auto lg:sticky lg:top-8 overflow-y-auto\">\r\n          <div className=\"lg:hidden flex justify-between items-center mb-4\">\r\n            <h3 className=\"text-lg font-semibold text-green-400 font-mono\">NAVIGATION</h3>\r\n            <button\r\n              onClick={onToggle}\r\n              className=\"text-green-400 hover:text-green-300 transition-colors duration-300\"\r\n              aria-label=\"Close navigation menu\"\r\n            >\r\n              <svg className=\"w-6 h-6\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\r\n                <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M6 18L18 6M6 6l12 12\" />\r\n              </svg>\r\n            </button>\r\n          </div>\r\n          \r\n          <h3 className=\"hidden lg:block text-lg font-semibold text-green-400 mb-4 font-mono\">NAVIGATION</h3>\r\n          \r\n          {/* Search Box */}\r\n          <div className=\"mb-4\">\r\n            <label htmlFor=\"search-topics\" className=\"sr-only\">\r\n              Search topics\r\n            </label>\r\n            <input\r\n              id=\"search-topics\"\r\n              type=\"text\"\r\n              placeholder=\"grep -r 'pattern' /*\"\r\n              value={searchTerm}\r\n              onChange={(e) => onSearchChange(e.target.value)}\r\n              className=\"w-full px-3 py-2 bg-black/50 border border-green-500/50 rounded-lg focus:outline-none focus:ring-2 focus:ring-green-500/20 focus:border-green-400 text-green-300 font-mono placeholder-green-500/50\"\r\n              aria-label=\"Search topics in table of contents\"\r\n            />\r\n          </div>\r\n          \r\n          <nav className=\"space-y-2\" aria-label=\"Table of contents\">\r\n            {filteredSections.map((section) => (\r\n              <button\r\n                key={section.id}\r\n                onClick={() => {\r\n                  onSectionChange(section.id);\r\n                  // Close mobile menu after selection\r\n                  if (window.innerWidth < 1024) {\r\n                    onToggle?.();\r\n                  }\r\n                }}\r\n                className={`w-full text-left px-3 py-2 rounded-lg transition-all duration-300 font-mono ${\r\n                  activeSection === section.id\r\n                    ? 'bg-green-500/20 text-green-300 border border-green-400 shadow-lg'\r\n                    : 'text-green-400 hover:bg-green-500/10 hover:text-green-300 border border-transparent hover:border-green-500/50'\r\n                }`}\r\n                aria-current={activeSection === section.id ? 'page' : undefined}\r\n              >\r\n                <span className=\"mr-2\" aria-hidden=\"true\">{section.icon}</span>\r\n                {section.title}\r\n              </button>\r\n            ))}\r\n            \r\n            {filteredSections.length === 0 && (\r\n              <div className=\"text-green-500 text-sm py-2 font-mono\" role=\"status\">\r\n                No topics found matching \"{searchTerm}\"\r\n              </div>\r\n            )}\r\n          </nav>\r\n        </div>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default SidePanel; ","import { useState, useEffect } from 'react';\r\nimport { useLocation, useNavigate } from 'react-router-dom';\r\n\r\nexport const usePageNavigation = (defaultSection: string) => {\r\n  const location = useLocation();\r\n  const navigate = useNavigate();\r\n  const [searchTerm, setSearchTerm] = useState('');\r\n\r\n  // Extract section from URL or use default\r\n  const getSectionFromUrl = () => {\r\n    const pathParts = location.pathname.split('/');\r\n    return pathParts[pathParts.length - 1] || defaultSection;\r\n  };\r\n\r\n  const [activeSection, setActiveSection] = useState(getSectionFromUrl());\r\n\r\n  // Update active section when URL changes\r\n  useEffect(() => {\r\n    const sectionFromUrl = getSectionFromUrl();\r\n    if (sectionFromUrl !== activeSection) {\r\n      setActiveSection(sectionFromUrl);\r\n    }\r\n  }, [location.pathname]);\r\n\r\n  const handleSectionChange = (sectionId: string) => {\r\n    setActiveSection(sectionId);\r\n    // Update URL to reflect the current section\r\n    const currentPath = location.pathname;\r\n    const basePath = currentPath.split('/').slice(0, -1).join('/') || currentPath;\r\n    navigate(`${basePath}/${sectionId}`, { replace: true });\r\n  };\r\n\r\n  const handleSearchChange = (term: string) => {\r\n    setSearchTerm(term);\r\n  };\r\n\r\n  return {\r\n    activeSection,\r\n    searchTerm,\r\n    handleSectionChange,\r\n    handleSearchChange\r\n  };\r\n}; "],"names":["_ref","title","children","_jsxs","className","_jsx","stringSections","id","icon","StringManipulation","_stringSections$find","activeSection","searchTerm","handleSectionChange","handleSearchChange","usePageNavigation","content","setContent","useState","loading","setLoading","error","setError","isSidePanelOpen","setIsSidePanelOpen","useEffect","async","sectionContent","concat","sectionId","default","console","loadStringContent","err","loadContent","PageHeader","onClick","window","location","reload","SidePanel","sections","onSectionChange","onSearchChange","isOpen","onToggle","find","section","map","index","ContentSection","examples","example","exampleIndex","code","webpackAsyncContext","req","__webpack_require__","o","Promise","resolve","then","e","Error","ids","keys","Object","module","exports","Link","to","filteredSections","filter","toLowerCase","includes","_Fragment","fill","stroke","viewBox","strokeLinecap","strokeLinejoin","strokeWidth","d","htmlFor","type","placeholder","value","onChange","target","innerWidth","undefined","length","role","defaultSection","useLocation","navigate","useNavigate","setSearchTerm","getSectionFromUrl","pathParts","pathname","split","setActiveSection","sectionFromUrl","currentPath","basePath","slice","join","replace","term"],"sourceRoot":""}