{"version":3,"file":"static/js/2375.beead445.chunk.js","mappings":"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","sources":["components/ContentSection.tsx","components/CodeBlock.tsx","data/cssContent.ts","pages/CSSLayoutTricks.tsx","components/PageHeader.tsx","components/SidePanel.tsx","hooks/usePageNavigation.ts","data/css|lazy|/^/.*/.ts$/|groupOptions: {}|namespace object"],"sourcesContent":["import React from 'react';\r\nimport { ContentSectionProps } from '../types/index';\r\n\r\nconst ContentSection: React.FC<ContentSectionProps> = ({ title, children }) => {\r\n  return (\r\n    <section className=\"bg-black/70 backdrop-blur-sm rounded-lg p-3 sm:p-4 lg:p-6 border border-green-500/30 shadow-lg overflow-hidden\">\r\n      <h3 className=\"text-sm sm:text-lg lg:text-xl font-semibold text-green-400 mb-3 sm:mb-4 font-mono matrix-glow break-words\">{title}</h3>\r\n      <div className=\"overflow-x-auto\">\r\n        {children}\r\n      </div>\r\n    </section>\r\n  );\r\n};\r\n\r\nexport default ContentSection; ","import React from 'react';\r\nimport { CodeBlockProps } from '../types/index';\r\n\r\nconst CodeBlock: React.FC<CodeBlockProps> = ({ code, language = 'javascript' }) => {\r\n  return (\r\n    <div \r\n      className=\"bg-gray-900 text-green-400 p-3 sm:p-4 rounded-lg overflow-x-auto\"\r\n      role=\"code\"\r\n      aria-label={`${language} code example`}\r\n    >\r\n      <pre className=\"text-xs sm:text-sm font-mono whitespace-pre-wrap break-words m-0\">\r\n        <code className=\"break-all\">{code}</code>\r\n      </pre>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default CodeBlock; ","import { Section } from '../types/index';\r\n\r\nexport const cssSections: Section[] = [\r\n  { id: 'centering', title: 'Centering', icon: 'üéØ' },\r\n  { id: 'flexbox', title: 'Flexbox', icon: 'üìê' },\r\n  { id: 'grid', title: 'CSS Grid', icon: 'üî≤' },\r\n  { id: 'positioning', title: 'Positioning', icon: 'üìç' },\r\n  { id: 'responsive', title: 'Responsive Design', icon: 'üì±' },\r\n  { id: 'animations', title: 'Animations', icon: '‚ú®' },\r\n  { id: 'spacing', title: 'Spacing & Layout', icon: 'üìè' },\r\n  { id: 'typography', title: 'Typography', icon: 'üìù' },\r\n  { id: 'colors', title: 'Colors & Themes', icon: 'üé®' },\r\n  { id: 'borders', title: 'Borders & Shadows', icon: 'üñºÔ∏è' },\r\n  { id: 'media', title: 'Media Queries', icon: 'üì∫' },\r\n  { id: 'utilities', title: 'Utility Classes', icon: 'üõ†Ô∏è' }\r\n];\r\n\r\n// Lazy loading function for content\r\nexport const loadCssContent = async (sectionId: string) => {\r\n  try {\r\n    const module = await import(`./css/${sectionId}.ts`);\r\n    return module.default;\r\n  } catch (error) {\r\n    console.error(`Failed to load content for section: ${sectionId}`, error);\r\n    return null;\r\n  }\r\n};\r\n\r\n// Preload function for better UX\r\nexport const preloadCssSection = (sectionId: string) => {\r\n  import(`./css/${sectionId}.ts`);\r\n}; ","import React, { useState, useEffect } from 'react';\r\nimport PageHeader from '../components/PageHeader';\r\nimport SidePanel from '../components/SidePanel';\r\nimport CodeBlock from '../components/CodeBlock';\r\nimport ContentSection from '../components/ContentSection';\r\nimport { usePageNavigation } from '../hooks/usePageNavigation';\r\nimport { cssSections, loadCssContent, preloadCssSection } from '../data/cssContent';\r\n\r\ninterface Example {\r\n  title: string;\r\n  code: string;\r\n}\r\n\r\ninterface Section {\r\n  title: string;\r\n  examples: Example[];\r\n}\r\n\r\nconst CSSLayoutTricks: React.FC = () => {\r\n  const { activeSection, searchTerm, handleSectionChange, handleSearchChange } = usePageNavigation('flexbox');\r\n  const [content, setContent] = useState<Section[] | null>(null);\r\n  const [loading, setLoading] = useState(false);\r\n  const [error, setError] = useState<string | null>(null);\r\n  const [isSidePanelOpen, setIsSidePanelOpen] = useState(false);\r\n\r\n  // Load content when section changes\r\n  useEffect(() => {\r\n    const loadContent = async () => {\r\n      setLoading(true);\r\n      setError(null);\r\n      \r\n      try {\r\n        const sectionContent = await loadCssContent(activeSection);\r\n        setContent(sectionContent);\r\n      } catch (err) {\r\n        setError('Failed to load content');\r\n        console.error('Error loading content:', err);\r\n      } finally {\r\n        setLoading(false);\r\n      }\r\n    };\r\n\r\n    loadContent();\r\n  }, [activeSection]);\r\n\r\n  // Preload next sections for better UX\r\n  useEffect(() => {\r\n    const currentIndex = cssSections.findIndex(s => s.id === activeSection);\r\n    const nextSection = cssSections[currentIndex + 1];\r\n    const prevSection = cssSections[currentIndex - 1];\r\n    \r\n    if (nextSection) {\r\n      preloadCssSection(nextSection.id);\r\n    }\r\n    if (prevSection) {\r\n      preloadCssSection(prevSection.id);\r\n    }\r\n  }, [activeSection]);\r\n\r\n  const renderContent = () => {\r\n    if (loading) {\r\n      return (\r\n        <div className=\"text-center py-12\">\r\n          <div className=\"animate-spin rounded-full h-12 w-12 border-b-2 border-blue-600 mx-auto mb-4\"></div>\r\n          <p className=\"text-green-300\">Loading content...</p>\r\n        </div>\r\n      );\r\n    }\r\n\r\n    if (error) {\r\n      return (\r\n        <div className=\"text-center py-12\">\r\n          <h2 className=\"text-lg sm:text-xl lg:text-2xl font-bold text-green-400 mb-4 font-mono\">\r\n            {cssSections.find(s => s.id === activeSection)?.title}\r\n          </h2>\r\n          <p className=\"text-red-400 mb-4 font-mono\">{error}</p>\r\n          <button \r\n            onClick={() => window.location.reload()}\r\n            className=\"px-4 py-2 bg-red-600 text-white rounded hover:bg-red-700 font-mono transition-colors duration-300\"\r\n          >\r\n            RETRY\r\n          </button>\r\n        </div>\r\n      );\r\n    }\r\n\r\n    if (!content) {\r\n      return (\r\n        <div className=\"text-center py-12\">\r\n          <h2 className=\"text-lg sm:text-xl lg:text-2xl font-bold text-green-400 mb-4 font-mono\">\r\n            {cssSections.find(s => s.id === activeSection)?.title}\r\n          </h2>\r\n          <p className=\"text-green-300 font-mono\">\r\n            Content for {cssSections.find(s => s.id === activeSection)?.title} will be added here...\r\n          </p>\r\n        </div>\r\n      );\r\n    }\r\n\r\n    return (\r\n      <div className=\"space-y-6\">\r\n        <h2 className=\"text-lg sm:text-xl lg:text-2xl font-bold text-green-400 mb-4 font-mono matrix-glow\">\r\n          {cssSections.find(s => s.id === activeSection)?.title}\r\n        </h2>\r\n        \r\n        {content.map((section, index) => (\r\n          <ContentSection key={index} title={section.title}>\r\n            <div className=\"space-y-4\">\r\n              {section.examples.map((example: Example, exampleIndex: number) => (\r\n                <div key={exampleIndex} className=\"bg-black/50 border border-green-500/30 rounded-lg p-3 sm:p-4\">\r\n                  <h4 className=\"text-sm sm:text-base font-medium text-green-300 mb-2 font-mono\">{example.title}</h4>\r\n                  <CodeBlock code={example.code} language=\"css\" />\r\n                </div>\r\n              ))}\r\n            </div>\r\n          </ContentSection>\r\n        ))}\r\n      </div>\r\n    );\r\n  };\r\n\r\n  return (\r\n    <div className=\"min-h-screen bg-black relative overflow-hidden\">\r\n      {/* Matrix digital rain background */}\r\n      <div className=\"absolute inset-0 opacity-10\">\r\n        <div className=\"matrix-rain\"></div>\r\n      </div>\r\n      \r\n      {/* Scan lines effect */}\r\n      <div className=\"absolute inset-0 opacity-5\">\r\n        <div className=\"scanlines\"></div>\r\n      </div>\r\n      \r\n      {/* Grid overlay */}\r\n      <div className=\"absolute inset-0 bg-gradient-to-b from-transparent via-green-900/5 to-green-900/10\"></div>\r\n      \r\n      <PageHeader title=\"CSS Layout Tricks\" icon=\"üé®\" />\r\n      \r\n      <div className=\"max-w-7xl mx-auto px-4 sm:px-6 lg:px-8 py-4 sm:py-8 relative z-10\">\r\n        <div className=\"flex gap-4 sm:gap-8\">\r\n          <SidePanel\r\n            sections={cssSections}\r\n            activeSection={activeSection}\r\n            searchTerm={searchTerm}\r\n            onSectionChange={handleSectionChange}\r\n            onSearchChange={handleSearchChange}\r\n            isOpen={isSidePanelOpen}\r\n            onToggle={() => setIsSidePanelOpen(!isSidePanelOpen)}\r\n          />\r\n          \r\n          <div className=\"flex-1 min-w-0\">\r\n            {renderContent()}\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default CSSLayoutTricks; ","import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport { PageHeaderProps } from '../types/index';\r\n\r\nconst PageHeader: React.FC<PageHeaderProps> = ({ title, icon }) => {\r\n  return (\r\n    <header className=\"bg-black/80 backdrop-blur-sm border-b border-green-500/30 sticky top-0 z-50\">\r\n      <div className=\"max-w-7xl mx-auto px-4 sm:px-6 lg:px-8\">\r\n        <div className=\"flex justify-between items-center py-3 sm:py-4 lg:py-6\">\r\n          <div className=\"flex items-center\">\r\n            <Link to=\"/\" className=\"text-green-400 hover:text-green-300 mr-1 sm:mr-2 lg:mr-4 font-mono transition-colors duration-300 text-xs sm:text-sm lg:text-base\">\r\n              <span className=\"text-green-300\">$</span> cd /home\r\n            </Link>\r\n            <div className=\"flex items-center\">\r\n              <span className=\"text-lg sm:text-2xl lg:text-3xl mr-1 sm:mr-2 lg:mr-3 text-green-400\">{icon}</span>\r\n              <h1 className=\"text-xs sm:text-lg lg:text-3xl font-bold text-green-400 font-mono matrix-glow break-words\">{title}</h1>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </header>\r\n  );\r\n};\r\n\r\nexport default PageHeader; ","import React from 'react';\r\nimport { SidePanelProps } from '../types/index';\r\n\r\nconst SidePanel: React.FC<SidePanelProps> = ({\r\n  sections,\r\n  activeSection,\r\n  searchTerm,\r\n  onSectionChange,\r\n  onSearchChange,\r\n  isOpen = true,\r\n  onToggle\r\n}) => {\r\n  const filteredSections = sections.filter(section =>\r\n    section.title.toLowerCase().includes(searchTerm.toLowerCase())\r\n  );\r\n\r\n  return (\r\n    <>\r\n      {/* Mobile Toggle Button */}\r\n      <div className=\"lg:hidden fixed top-28 right-4 z-50\">\r\n        <button\r\n          onClick={onToggle}\r\n          className=\"bg-black/80 backdrop-blur-sm border border-green-500/50 rounded-lg p-3 text-green-400 hover:text-green-300 transition-colors duration-300\"\r\n          aria-label=\"Toggle navigation menu\"\r\n        >\r\n          <svg className=\"w-6 h-6\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\r\n            {isOpen ? (\r\n              <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M6 18L18 6M6 6l12 12\" />\r\n            ) : (\r\n              <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M4 6h16M4 12h16M4 18h16\" />\r\n            )}\r\n          </svg>\r\n        </button>\r\n      </div>\r\n\r\n      {/* Mobile Overlay */}\r\n      {isOpen && (\r\n        <div \r\n          className=\"lg:hidden fixed inset-0 bg-black/50 backdrop-blur-sm z-40\"\r\n          onClick={onToggle}\r\n        />\r\n      )}\r\n\r\n      {/* Side Panel */}\r\n      <div className={`\r\n        ${isOpen ? 'translate-x-0' : '-translate-x-full lg:translate-x-0'}\r\n        lg:w-64 w-80 flex-shrink-0\r\n        fixed lg:relative top-0 left-0 h-full lg:h-auto\r\n        z-50 lg:z-auto\r\n        transition-transform duration-300 ease-in-out\r\n      `}>\r\n        <div className=\"bg-black/90 backdrop-blur-sm border border-green-500/30 p-6 h-full lg:h-auto lg:sticky lg:top-8 overflow-y-auto\">\r\n          <div className=\"lg:hidden flex justify-between items-center mb-4\">\r\n            <h3 className=\"text-lg font-semibold text-green-400 font-mono\">NAVIGATION</h3>\r\n            <button\r\n              onClick={onToggle}\r\n              className=\"text-green-400 hover:text-green-300 transition-colors duration-300\"\r\n              aria-label=\"Close navigation menu\"\r\n            >\r\n              <svg className=\"w-6 h-6\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\r\n                <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M6 18L18 6M6 6l12 12\" />\r\n              </svg>\r\n            </button>\r\n          </div>\r\n          \r\n          <h3 className=\"hidden lg:block text-lg font-semibold text-green-400 mb-4 font-mono\">NAVIGATION</h3>\r\n          \r\n          {/* Search Box */}\r\n          <div className=\"mb-4\">\r\n            <label htmlFor=\"search-topics\" className=\"sr-only\">\r\n              Search topics\r\n            </label>\r\n            <input\r\n              id=\"search-topics\"\r\n              type=\"text\"\r\n              placeholder=\"grep -r 'pattern' /*\"\r\n              value={searchTerm}\r\n              onChange={(e) => onSearchChange(e.target.value)}\r\n              className=\"w-full px-3 py-2 bg-black/50 border border-green-500/50 rounded-lg focus:outline-none focus:ring-2 focus:ring-green-500/20 focus:border-green-400 text-green-300 font-mono placeholder-green-500/50\"\r\n              aria-label=\"Search topics in table of contents\"\r\n            />\r\n          </div>\r\n          \r\n          <nav className=\"space-y-2\" aria-label=\"Table of contents\">\r\n            {filteredSections.map((section) => (\r\n              <button\r\n                key={section.id}\r\n                onClick={() => {\r\n                  onSectionChange(section.id);\r\n                  // Close mobile menu after selection\r\n                  if (window.innerWidth < 1024) {\r\n                    onToggle?.();\r\n                  }\r\n                }}\r\n                className={`w-full text-left px-3 py-2 rounded-lg transition-all duration-300 font-mono ${\r\n                  activeSection === section.id\r\n                    ? 'bg-green-500/20 text-green-300 border border-green-400 shadow-lg'\r\n                    : 'text-green-400 hover:bg-green-500/10 hover:text-green-300 border border-transparent hover:border-green-500/50'\r\n                }`}\r\n                aria-current={activeSection === section.id ? 'page' : undefined}\r\n              >\r\n                <span className=\"mr-2\" aria-hidden=\"true\">{section.icon}</span>\r\n                {section.title}\r\n              </button>\r\n            ))}\r\n            \r\n            {filteredSections.length === 0 && (\r\n              <div className=\"text-green-500 text-sm py-2 font-mono\" role=\"status\">\r\n                No topics found matching \"{searchTerm}\"\r\n              </div>\r\n            )}\r\n          </nav>\r\n        </div>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default SidePanel; ","import { useState, useEffect } from 'react';\r\nimport { useLocation, useNavigate } from 'react-router-dom';\r\n\r\nexport const usePageNavigation = (defaultSection: string, sections: any[] = []) => {\r\n  const location = useLocation();\r\n  const navigate = useNavigate();\r\n  const [searchTerm, setSearchTerm] = useState('');\r\n\r\n  // Extract section from URL or use default\r\n  const getSectionFromUrl = () => {\r\n    const pathParts = location.pathname.split('/');\r\n    const lastPart = pathParts[pathParts.length - 1];\r\n    \r\n    // If the last part is empty or if we're on a main route (like /typescript), use default\r\n    if (!lastPart || pathParts.length === 2) {\r\n      return defaultSection;\r\n    }\r\n    \r\n    // Check if the last part is actually a valid section ID\r\n    const isValidSection = sections.some(section => section.id === lastPart);\r\n    return isValidSection ? lastPart : defaultSection;\r\n  };\r\n\r\n  const [activeSection, setActiveSection] = useState(getSectionFromUrl());\r\n\r\n  // Auto-redirect to first section if no section is specified\r\n  useEffect(() => {\r\n    const pathParts = location.pathname.split('/');\r\n    const isOnMainRoute = pathParts.length === 2;\r\n    \r\n    if (isOnMainRoute && sections.length > 0) {\r\n      const firstSection = sections[0];\r\n      if (firstSection) {\r\n        navigate(`${location.pathname}/${firstSection.id}`, { replace: true });\r\n      }\r\n    }\r\n  }, [location.pathname, sections, navigate]);\r\n\r\n  // Update active section when URL changes\r\n  useEffect(() => {\r\n    const sectionFromUrl = getSectionFromUrl();\r\n    if (sectionFromUrl !== activeSection) {\r\n      setActiveSection(sectionFromUrl);\r\n    }\r\n  }, [location.pathname]);\r\n\r\n  const handleSectionChange = (sectionId: string) => {\r\n    setActiveSection(sectionId);\r\n    // Update URL to reflect the current section\r\n    const currentPath = location.pathname;\r\n    const basePath = currentPath.split('/').slice(0, -1).join('/') || currentPath;\r\n    navigate(`${basePath}/${sectionId}`, { replace: true });\r\n  };\r\n\r\n  const handleSearchChange = (term: string) => {\r\n    setSearchTerm(term);\r\n  };\r\n\r\n  return {\r\n    activeSection,\r\n    searchTerm,\r\n    handleSectionChange,\r\n    handleSearchChange\r\n  };\r\n}; ","var map = {\n\t\"./animations.ts\": [\n\t\t8460,\n\t\t8460\n\t],\n\t\"./borders.ts\": [\n\t\t1388,\n\t\t1388\n\t],\n\t\"./centering.ts\": [\n\t\t644,\n\t\t644\n\t],\n\t\"./colors.ts\": [\n\t\t3367,\n\t\t3367\n\t],\n\t\"./flexbox.ts\": [\n\t\t9975,\n\t\t9975\n\t],\n\t\"./grid.ts\": [\n\t\t6839,\n\t\t6839\n\t],\n\t\"./media.ts\": [\n\t\t2959,\n\t\t2959\n\t],\n\t\"./positioning.ts\": [\n\t\t7846,\n\t\t7846\n\t],\n\t\"./responsive.ts\": [\n\t\t4237,\n\t\t4237\n\t],\n\t\"./spacing.ts\": [\n\t\t9186,\n\t\t9186\n\t],\n\t\"./typography.ts\": [\n\t\t1126,\n\t\t1126\n\t],\n\t\"./utilities.ts\": [\n\t\t9915,\n\t\t9915\n\t]\n};\nfunction webpackAsyncContext(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\treturn Promise.resolve().then(() => {\n\t\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\t\te.code = 'MODULE_NOT_FOUND';\n\t\t\tthrow e;\n\t\t});\n\t}\n\n\tvar ids = map[req], id = ids[0];\n\treturn __webpack_require__.e(ids[1]).then(() => {\n\t\treturn __webpack_require__(id);\n\t});\n}\nwebpackAsyncContext.keys = () => (Object.keys(map));\nwebpackAsyncContext.id = 9546;\nmodule.exports = webpackAsyncContext;"],"names":["_ref","title","children","_jsxs","className","_jsx","code","language","role","concat","cssSections","id","icon","preloadCssSection","sectionId","CSSLayoutTricks","activeSection","searchTerm","handleSectionChange","handleSearchChange","usePageNavigation","content","setContent","useState","loading","setLoading","error","setError","isSidePanelOpen","setIsSidePanelOpen","useEffect","async","sectionContent","default","console","loadCssContent","err","loadContent","currentIndex","findIndex","s","nextSection","prevSection","PageHeader","SidePanel","sections","onSectionChange","onSearchChange","isOpen","onToggle","renderContent","_cssSections$find4","_cssSections$find","_cssSections$find2","_cssSections$find3","find","onClick","window","location","reload","map","section","index","ContentSection","examples","example","exampleIndex","CodeBlock","Link","to","filteredSections","filter","toLowerCase","includes","_Fragment","fill","stroke","viewBox","strokeLinecap","strokeLinejoin","strokeWidth","d","htmlFor","type","placeholder","value","onChange","e","target","innerWidth","undefined","length","defaultSection","arguments","useLocation","navigate","useNavigate","setSearchTerm","getSectionFromUrl","pathParts","pathname","split","lastPart","some","setActiveSection","firstSection","replace","sectionFromUrl","currentPath","basePath","slice","join","term","webpackAsyncContext","req","__webpack_require__","o","Promise","resolve","then","Error","ids","keys","Object","module","exports"],"sourceRoot":""}