{"version":3,"file":"static/js/845.86f2016d.chunk.js","mappings":"gIAAA,SACE,CACEA,MAAO,2BACPC,SAAU,CACR,CACED,MAAO,mBACPE,KAAK,wQAcP,CACEF,MAAO,2BACPE,KAAK,gYAkBP,CACEF,MAAO,4BACPE,KAAK,0WAmBP,CACEF,MAAO,0BACPE,KAAK,qSAeP,CACEF,MAAO,qBACPE,KAAK,mP","sources":["data/react/performance.ts"],"sourcesContent":["export default [\r\n  {\r\n    title: 'React Performance Basics',\r\n    examples: [\r\n      {\r\n        title: 'Using React.memo',\r\n        code: `import React from 'react';\r\n\r\nconst UserCard = React.memo(({ user }) => {\r\n  return (\r\n    <div>\r\n      <h3>{user.name}</h3>\r\n      <p>{user.email}</p>\r\n    </div>\r\n  );\r\n});\r\n\r\n// This component only re-renders when user prop changes\r\nexport default UserCard;`\r\n      },\r\n      {\r\n        title: 'useMemo for Calculations',\r\n        code: `import { useMemo } from 'react';\r\n\r\nfunction TodoList({ todos, filter }) {\r\n  const filteredTodos = useMemo(() => {\r\n    return todos.filter(todo => \r\n      todo.text.toLowerCase().includes(filter.toLowerCase())\r\n    );\r\n  }, [todos, filter]);\r\n  \r\n  return (\r\n    <ul>\r\n      {filteredTodos.map(todo => (\r\n        <li key={todo.id}>{todo.text}</li>\r\n      ))}\r\n    </ul>\r\n  );\r\n}`\r\n      },\r\n      {\r\n        title: 'useCallback for Functions',\r\n        code: `import { useCallback } from 'react';\r\n\r\nfunction TodoItem({ todo, onToggle }) {\r\n  const handleToggle = useCallback(() => {\r\n    onToggle(todo.id);\r\n  }, [todo.id, onToggle]);\r\n  \r\n  return (\r\n    <li>\r\n      <input\r\n        type=\"checkbox\"\r\n        checked={todo.completed}\r\n        onChange={handleToggle}\r\n      />\r\n      {todo.text}\r\n    </li>\r\n  );\r\n}`\r\n      },\r\n      {\r\n        title: 'Lazy Loading Components',\r\n        code: `import { lazy, Suspense } from 'react';\r\n\r\nconst UserProfile = lazy(() => import('./UserProfile'));\r\n\r\nfunction App() {\r\n  return (\r\n    <div>\r\n      <h1>My App</h1>\r\n      <Suspense fallback={<div>Loading profile...</div>}>\r\n        <UserProfile />\r\n      </Suspense>\r\n    </div>\r\n  );\r\n}`\r\n      },\r\n      {\r\n        title: 'Key Prop for Lists',\r\n        code: `function TodoList({ todos }) {\r\n  return (\r\n    <ul>\r\n      {todos.map(todo => (\r\n        <li key={todo.id}>\r\n          {todo.text}\r\n        </li>\r\n      ))}\r\n    </ul>\r\n  );\r\n}\r\n\r\n// Always use unique, stable keys for better performance`\r\n      }\r\n    ]\r\n  }\r\n]; "],"names":["title","examples","code"],"sourceRoot":""}