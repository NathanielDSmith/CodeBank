"use strict";(self.webpackChunkcodebank=self.webpackChunkcodebank||[]).push([[268],{268:(e,n,o)=>{o.r(n),o.d(n,{default:()=>t});const t=[{title:"Creating Objects",examples:[{title:"Simple object creation",code:'// JavaScript: Create a simple object\nconst person = {\n  name: "John",\n  age: 30,\n  city: "New York"\n};\n\nconsole.log(person.name); // "John"\nconsole.log(person.age); // 30'},{title:"Adding properties to objects",code:'// JavaScript: Start with an empty object\nconst user = {};\n\n// Add properties one by one\nuser.name = "Alice";\nuser.email = "alice@example.com";\nuser.age = 25;\n\nconsole.log(user); // { name: "Alice", email: "alice@example.com", age: 25 }\n\n// You can also add properties using bracket notation\nuser["isActive"] = true;\nuser["lastLogin"] = "2023-12-01";\n\nconsole.log(user.isActive); // true'},{title:"Objects with different data types",code:'// JavaScript: Objects can contain different types of data\nconst product = {\n  name: "Laptop",           // string\n  price: 999.99,           // number\n  inStock: true,           // boolean\n  colors: ["black", "white"], // array\n  specs: {                 // nested object\n    ram: "16GB",\n    storage: "512GB"\n  }\n};\n\nconsole.log(product.name); // "Laptop"\nconsole.log(product.price); // 999.99\nconsole.log(product.colors[0]); // "black"\nconsole.log(product.specs.ram); // "16GB"'}]},{title:"Accessing Object Properties",examples:[{title:"Dot notation (most common)",code:'// JavaScript: Use dot notation to access properties\nconst person = {\n  name: "John",\n  age: 30,\n  city: "New York"\n};\n\n// Use dot notation to access properties\nconsole.log(person.name); // "John"\nconsole.log(person.age); // 30\nconsole.log(person.city); // "New York"\n\n// You can also change values\nperson.age = 31;\nconsole.log(person.age); // 31'},{title:"Bracket notation",code:'// JavaScript: Use bracket notation for special property names\nconst person = {\n  name: "John",\n  age: 30,\n  "favorite-color": "blue"  // property with special characters\n};\n\n// Use bracket notation for properties with special characters\nconsole.log(person["favorite-color"]); // "blue"\n\n// You can also use variables\nconst propertyName = "age";\nconsole.log(person[propertyName]); // 30\n\n// Both ways work for normal properties\nconsole.log(person.name); // "John"\nconsole.log(person["name"]); // "John" (same result)'},{title:"Checking if properties exist",code:'// JavaScript: Check if a property exists\nconst person = {\n  name: "John",\n  age: 30\n};\n\n// Check if a property exists\nconsole.log(person.hasOwnProperty("name")); // true\nconsole.log(person.hasOwnProperty("city")); // false\n\n// Another way to check\nconsole.log("name" in person); // true\nconsole.log("city" in person); // false\n\n// Check if property is not undefined\nconsole.log(person.name !== undefined); // true\nconsole.log(person.city !== undefined); // false\n\n// Safe way to access properties\nconst city = person.city || "Unknown";\nconsole.log(city); // "Unknown" (because person.city is undefined)'}]}]}}]);
//# sourceMappingURL=268.e14e31ad.chunk.js.map