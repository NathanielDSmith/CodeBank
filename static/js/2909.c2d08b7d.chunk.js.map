{"version":3,"file":"static/js/2909.c2d08b7d.chunk.js","mappings":"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","sources":["components/PageHeader.tsx","components/SidePanel.tsx","components/ContentSection.tsx","components/CodeBlock.tsx","components/PageLayout.tsx","data/railsContent.ts","pages/RailsPage.tsx","hooks/usePageNavigation.ts"],"sourcesContent":["import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport { PageHeaderProps } from '../types/index';\r\n\r\nconst PageHeader: React.FC<PageHeaderProps> = ({ title, icon }) => {\r\n  const getIconStyle = (icon: string) => {\r\n    // All icons are now emoji-based, so use consistent styling with better visibility\r\n    return 'text-lg sm:text-2xl lg:text-3xl min-w-[2.5rem] min-h-[2.5rem] flex items-center justify-center bg-black/30 rounded-lg p-1 border border-green-500/30';\r\n  };\r\n\r\n  return (\r\n    <header className=\"bg-black/80 backdrop-blur-sm border-b border-green-500/30 sticky top-0 z-50\">\r\n      <div className=\"max-w-7xl mx-auto px-4 sm:px-6 lg:px-8\">\r\n        <div className=\"flex justify-between items-center py-3 sm:py-4 lg:py-6\">\r\n          <div className=\"flex items-center\">\r\n            <Link to=\"/\" className=\"text-green-400 hover:text-green-300 mr-1 sm:mr-2 lg:mr-4 font-mono transition-colors duration-300 text-xs sm:text-sm lg:text-base\">\r\n              <span className=\"text-green-300\">$</span> cd /home\r\n            </Link>\r\n            <div className=\"flex items-center\">\r\n              <span className={`text-lg sm:text-2xl lg:text-3xl mr-1 sm:mr-2 lg:mr-3 text-green-400 ${getIconStyle(icon)}`}>{icon}</span>\r\n              <h1 className=\"text-xs sm:text-lg lg:text-3xl font-bold text-green-400 font-mono matrix-glow break-words\">{title}</h1>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </header>\r\n  );\r\n};\r\n\r\nexport default PageHeader; ","import React from 'react';\r\nimport { SidePanelProps } from '../types/index';\r\n\r\nconst SidePanel: React.FC<SidePanelProps> = ({\r\n  sections,\r\n  activeSection,\r\n  searchTerm,\r\n  onSectionChange,\r\n  onSearchChange,\r\n  isOpen = true,\r\n  onToggle\r\n}) => {\r\n  const filteredSections = sections.filter(section =>\r\n    section.title.toLowerCase().includes(searchTerm.toLowerCase())\r\n  );\r\n\r\n  return (\r\n    <>\r\n      {/* Mobile Toggle Button */}\r\n      <div className=\"lg:hidden fixed top-28 right-4 z-50\">\r\n        <button\r\n          onClick={onToggle}\r\n          className=\"bg-black/80 backdrop-blur-sm border border-green-500/50 rounded-lg p-3 text-green-400 hover:text-green-300 transition-colors duration-300\"\r\n          aria-label=\"Toggle navigation menu\"\r\n        >\r\n          <svg className=\"w-6 h-6\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\r\n            {isOpen ? (\r\n              <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M6 18L18 6M6 6l12 12\" />\r\n            ) : (\r\n              <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M4 6h16M4 12h16M4 18h16\" />\r\n            )}\r\n          </svg>\r\n        </button>\r\n      </div>\r\n\r\n      {/* Mobile Overlay */}\r\n      {isOpen && (\r\n        <div \r\n          className=\"lg:hidden fixed inset-0 bg-black/50 backdrop-blur-sm z-40\"\r\n          onClick={onToggle}\r\n        />\r\n      )}\r\n\r\n      {/* Side Panel */}\r\n      <div className={`\r\n        ${isOpen ? 'translate-x-0' : '-translate-x-full lg:translate-x-0'}\r\n        lg:w-64 w-80 flex-shrink-0\r\n        fixed lg:relative top-0 left-0 h-full lg:h-auto\r\n        z-50 lg:z-auto\r\n        transition-transform duration-300 ease-in-out\r\n      `}>\r\n        <div className=\"bg-black/90 backdrop-blur-sm border border-green-500/30 p-6 h-full lg:h-auto lg:sticky lg:top-8 overflow-y-auto\">\r\n          <div className=\"lg:hidden flex justify-between items-center mb-4\">\r\n            <h3 className=\"text-lg font-semibold text-green-400 font-mono\">NAVIGATION</h3>\r\n            <button\r\n              onClick={onToggle}\r\n              className=\"text-green-400 hover:text-green-300 transition-colors duration-300\"\r\n              aria-label=\"Close navigation menu\"\r\n            >\r\n              <svg className=\"w-6 h-6\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\r\n                <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M6 18L18 6M6 6l12 12\" />\r\n              </svg>\r\n            </button>\r\n          </div>\r\n          \r\n          <h3 className=\"hidden lg:block text-lg font-semibold text-green-400 mb-4 font-mono\">NAVIGATION</h3>\r\n          \r\n          {/* Search Box */}\r\n          <div className=\"mb-4\">\r\n            <label htmlFor=\"search-topics\" className=\"sr-only\">\r\n              Search topics\r\n            </label>\r\n            <input\r\n              id=\"search-topics\"\r\n              type=\"text\"\r\n              placeholder=\"grep -r 'pattern' /*\"\r\n              value={searchTerm}\r\n              onChange={(e) => onSearchChange(e.target.value)}\r\n              className=\"w-full px-3 py-2 bg-black/50 border border-green-500/50 rounded-lg focus:outline-none focus:ring-2 focus:ring-green-500/20 focus:border-green-400 text-green-300 font-mono placeholder-green-500/50\"\r\n              aria-label=\"Search topics in table of contents\"\r\n            />\r\n          </div>\r\n          \r\n          <nav className=\"space-y-2\" aria-label=\"Table of contents\">\r\n            {filteredSections.map((section) => (\r\n              <button\r\n                key={section.id}\r\n                onClick={() => {\r\n                  onSectionChange(section.id);\r\n                  // Close mobile menu after selection\r\n                  if (window.innerWidth < 1024) {\r\n                    onToggle?.();\r\n                  }\r\n                }}\r\n                className={`w-full text-left px-3 py-2 rounded-lg transition-all duration-300 font-mono ${\r\n                  activeSection === section.id\r\n                    ? 'bg-green-500/20 text-green-300 border border-green-400 shadow-lg'\r\n                    : 'text-green-400 hover:bg-green-500/10 hover:text-green-300 border border-transparent hover:border-green-500/50'\r\n                }`}\r\n                aria-current={activeSection === section.id ? 'page' : undefined}\r\n              >\r\n                <span className=\"mr-2\" aria-hidden=\"true\">{section.icon}</span>\r\n                {section.title}\r\n              </button>\r\n            ))}\r\n            \r\n            {filteredSections.length === 0 && (\r\n              <div className=\"text-green-500 text-sm py-2 font-mono\" role=\"status\">\r\n                No topics found matching \"{searchTerm}\"\r\n              </div>\r\n            )}\r\n          </nav>\r\n        </div>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default SidePanel; ","import React from 'react';\r\nimport { ContentSectionProps } from '../types/index';\r\n\r\nconst ContentSection: React.FC<ContentSectionProps> = ({ title, children }) => {\r\n  return (\r\n    <section className=\"bg-black/70 backdrop-blur-sm rounded-lg p-3 sm:p-4 lg:p-6 border border-green-500/30 shadow-lg overflow-hidden\">\r\n      <h3 className=\"text-sm sm:text-lg lg:text-xl font-semibold text-green-400 mb-3 sm:mb-4 font-mono matrix-glow break-words\">{title}</h3>\r\n      <div className=\"overflow-x-auto\">\r\n        {children}\r\n      </div>\r\n    </section>\r\n  );\r\n};\r\n\r\nexport default ContentSection; ","import React from 'react';\r\nimport { CodeBlockProps } from '../types/index';\r\n\r\nconst CodeBlock: React.FC<CodeBlockProps> = ({ code, language = 'javascript' }) => {\r\n  return (\r\n    <div \r\n      className=\"bg-gray-900 text-green-400 p-3 sm:p-4 rounded-lg overflow-x-auto\"\r\n      role=\"code\"\r\n      aria-label={`${language} code example`}\r\n    >\r\n      <pre className=\"text-xs sm:text-sm font-mono whitespace-pre-wrap break-words m-0\">\r\n        <code className=\"break-all\">{code}</code>\r\n      </pre>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default CodeBlock; ","import React from 'react';\r\nimport PageHeader from './PageHeader';\r\nimport SidePanel from './SidePanel';\r\nimport ContentSection from './ContentSection';\r\nimport CodeBlock from './CodeBlock';\r\n\r\ninterface Example {\r\n  title: string;\r\n  code: string;\r\n}\r\n\r\ninterface Section {\r\n  title: string;\r\n  examples: Example[];\r\n}\r\n\r\ninterface PageLayoutProps {\r\n  title: string;\r\n  icon: string;\r\n  sections: any[];\r\n  activeSection: string;\r\n  searchTerm: string;\r\n  content: Section[] | null;\r\n  loading: boolean;\r\n  error: string | null;\r\n  isSidePanelOpen: boolean;\r\n  onSectionChange: (sectionId: string) => void;\r\n  onSearchChange: (term: string) => void;\r\n  onToggleSidePanel: () => void;\r\n  fallbackContent?: {\r\n    description: string;\r\n    benefits?: string;\r\n    difficulty?: string;\r\n    topics: Array<{ icon: string; text: string }>;\r\n    usefulLinks?: Array<{ name: string; url: string }>;\r\n  };\r\n}\r\n\r\nconst PageLayout: React.FC<PageLayoutProps> = ({\r\n  title,\r\n  icon,\r\n  sections,\r\n  activeSection,\r\n  searchTerm,\r\n  content,\r\n  loading,\r\n  error,\r\n  isSidePanelOpen,\r\n  onSectionChange,\r\n  onSearchChange,\r\n  onToggleSidePanel,\r\n  fallbackContent\r\n}) => {\r\n  const renderContent = () => {\r\n    if (loading) {\r\n      return (\r\n        <div className=\"text-center py-12\">\r\n          <div className=\"animate-spin rounded-full h-12 w-12 border-b-2 border-green-500 mx-auto mb-4\"></div>\r\n          <p className=\"text-green-400 font-mono\">INITIALIZING...</p>\r\n        </div>\r\n      );\r\n    }\r\n\r\n    if (error) {\r\n      return (\r\n        <div className=\"text-center py-12\">\r\n          <h2 className=\"text-2xl font-bold text-green-400 mb-4 font-mono\">\r\n            {sections.find(s => s.id === activeSection)?.title}\r\n          </h2>\r\n          <p className=\"text-red-400 mb-4 font-mono\">{error}</p>\r\n          <button \r\n            onClick={() => window.location.reload()}\r\n            className=\"px-4 py-2 bg-red-600 text-white rounded hover:bg-red-700 font-mono transition-colors duration-300\"\r\n          >\r\n            RETRY\r\n          </button>\r\n        </div>\r\n      );\r\n    }\r\n\r\n    if (!content) {\r\n      // If overview section is selected or no active section, show the enhanced landing content\r\n      if (!activeSection || activeSection === 'overview') {\r\n        return (\r\n          <div className=\"text-center py-12\">\r\n            <h2 className=\"text-2xl font-bold text-green-400 mb-4 font-mono\">\r\n              {title}\r\n            </h2>\r\n            <div className=\"max-w-4xl mx-auto space-y-6\">\r\n              {/* Description */}\r\n              <p className=\"text-green-300 font-mono text-lg leading-relaxed\">\r\n                {fallbackContent?.description || `Welcome to ${title}! This section covers essential concepts.`}\r\n              </p>\r\n              \r\n              {/* Benefits */}\r\n              {fallbackContent?.benefits && (\r\n                <div className=\"bg-black/50 border border-green-500/30 rounded-lg p-6 text-left\">\r\n                  <h3 className=\"text-lg font-bold text-green-400 mb-3 font-mono\">Why Learn This:</h3>\r\n                  <p className=\"text-green-300 font-mono leading-relaxed\">{fallbackContent.benefits}</p>\r\n                </div>\r\n              )}\r\n              \r\n              {/* Difficulty */}\r\n              {fallbackContent?.difficulty && (\r\n                <div className=\"inline-block\">\r\n                  <span className=\"inline-flex items-center px-3 py-1 rounded-full text-sm font-bold bg-green-600 text-black\">\r\n                    {fallbackContent.difficulty}\r\n                  </span>\r\n                </div>\r\n              )}\r\n              \r\n              {/* Topics */}\r\n              {fallbackContent?.topics && (\r\n                <div className=\"bg-black/50 border border-green-500/30 rounded-lg p-6 text-left\">\r\n                  <h3 className=\"text-lg font-bold text-green-400 mb-4 font-mono\">What you'll learn:</h3>\r\n                  <ul className=\"space-y-2 text-green-300 font-mono\">\r\n                    {fallbackContent.topics.map((topic, index) => (\r\n                      <li key={index} className=\"flex items-start\">\r\n                        <span className=\"text-green-400 mr-2\">{topic.icon}</span>\r\n                        <span>{topic.text}</span>\r\n                      </li>\r\n                    ))}\r\n                  </ul>\r\n                </div>\r\n              )}\r\n              \r\n              {/* Useful Links */}\r\n              {fallbackContent?.usefulLinks && (\r\n                <div className=\"bg-black/50 border border-green-500/30 rounded-lg p-6 text-left\">\r\n                  <h3 className=\"text-lg font-bold text-green-400 mb-4 font-mono\">Useful Resources:</h3>\r\n                  <div className=\"grid grid-cols-1 md:grid-cols-2 gap-3\">\r\n                    {fallbackContent.usefulLinks.map((link, index) => (\r\n                      <a\r\n                        key={index}\r\n                        href={link.url}\r\n                        target=\"_blank\"\r\n                        rel=\"noopener noreferrer\"\r\n                        className=\"flex items-center text-green-300 hover:text-green-200 font-mono transition-colors duration-300 group\"\r\n                      >\r\n                        <span className=\"text-green-400 mr-2 group-hover:scale-110 transition-transform duration-300\">🔗</span>\r\n                        <span className=\"group-hover:underline\">{link.name}</span>\r\n                      </a>\r\n                    ))}\r\n                  </div>\r\n                </div>\r\n              )}\r\n              \r\n              <p className=\"text-green-400 font-mono mt-6 text-sm\">\r\n                Select a topic from the sidebar to get started!\r\n              </p>\r\n            </div>\r\n          </div>\r\n        );\r\n      }\r\n      \r\n      // If there's an active section but no content, show a different message\r\n      const currentSection = sections.find(s => s.id === activeSection);\r\n      return (\r\n        <div className=\"text-center py-12\">\r\n          <h2 className=\"text-2xl font-bold text-green-400 mb-4 font-mono\">\r\n            {currentSection?.title || title}\r\n          </h2>\r\n          <p className=\"text-green-300 font-mono\">\r\n            Content for {currentSection?.title} will be added here...\r\n          </p>\r\n        </div>\r\n      );\r\n    }\r\n\r\n    return (\r\n      <div className=\"space-y-6\">\r\n        <h2 className=\"text-lg sm:text-xl lg:text-2xl font-bold text-green-400 mb-4 font-mono matrix-glow\">\r\n          {sections.find(s => s.id === activeSection)?.title}\r\n        </h2>\r\n        \r\n        {content.map((section, index) => (\r\n          <ContentSection key={index} title={section.title}>\r\n            <div className=\"space-y-4\">\r\n              {section.examples.map((example: Example, exampleIndex: number) => (\r\n                <div key={exampleIndex} className=\"bg-black/50 border border-green-500/30 rounded-lg p-4\">\r\n                  <h4 className=\"font-medium text-green-300 mb-2 font-mono\">{example.title}</h4>\r\n                  <CodeBlock code={example.code} />\r\n                </div>\r\n              ))}\r\n            </div>\r\n          </ContentSection>\r\n        ))}\r\n      </div>\r\n    );\r\n  };\r\n\r\n  return (\r\n    <div className=\"min-h-screen bg-black relative overflow-hidden\">\r\n      {/* Matrix digital rain background */}\r\n      <div className=\"absolute inset-0 opacity-10\">\r\n        <div className=\"matrix-rain\"></div>\r\n      </div>\r\n      \r\n      {/* Scan lines effect */}\r\n      <div className=\"absolute inset-0 opacity-5\">\r\n        <div className=\"scanlines\"></div>\r\n      </div>\r\n      \r\n      {/* Grid overlay */}\r\n      <div className=\"absolute inset-0 bg-gradient-to-b from-transparent via-green-900/5 to-green-900/10\"></div>\r\n      \r\n      <PageHeader title={title} icon={icon} />\r\n      \r\n      <div className=\"max-w-7xl mx-auto px-4 sm:px-6 lg:px-8 py-4 sm:py-8 relative z-10\">\r\n        <div className=\"flex gap-4 sm:gap-8\">\r\n          <SidePanel\r\n            sections={sections}\r\n            activeSection={activeSection}\r\n            searchTerm={searchTerm}\r\n            onSectionChange={onSectionChange}\r\n            onSearchChange={onSearchChange}\r\n            isOpen={isSidePanelOpen}\r\n            onToggle={onToggleSidePanel}\r\n          />\r\n          \r\n          <div className=\"flex-1 min-w-0\">\r\n            {renderContent()}\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default PageLayout; ","import { Section, PageContent } from '../types/index';\r\n\r\nexport const railsSections: Section[] = [\r\n  { id: 'overview', title: 'Overview', icon: '📖' },\r\n  { id: 'basics', title: 'Basics', icon: '📚' },\r\n  { id: 'mvc', title: 'MVC Structure', icon: '🏛️' },\r\n  { id: 'routing', title: 'Routing', icon: '🛣️' },\r\n  { id: 'activerecord', title: 'ActiveRecord', icon: '🗄️' },\r\n  { id: 'migrations', title: 'Migrations', icon: '📝' },\r\n  { id: 'controllers', title: 'Controllers & Views', icon: '🖥️' },\r\n  { id: 'rest', title: 'RESTful APIs', icon: '🔗' }\r\n];\r\n\r\nexport const railsContent: PageContent = {\r\n  basics: [\r\n    {\r\n      title: 'Getting Started',\r\n      examples: [\r\n        { title: 'Create new app', code: 'rails new myapp\\ncd myapp\\nrails server' },\r\n        { title: 'Generate resource', code: 'rails generate scaffold Post title:string content:text' }\r\n      ]\r\n    }\r\n  ],\r\n  mvc: [\r\n    {\r\n      title: 'What is MVC?',\r\n      examples: [\r\n        { title: 'MVC Overview', code: 'Model - Handles data and business logic\\nView - Displays data\\nController - Handles input and updates model/view' }\r\n      ]\r\n    }\r\n  ],\r\n  routing: [\r\n    {\r\n      title: 'How to define routes',\r\n      examples: [\r\n        { title: 'Basic route', code: 'get \"/welcome\", to: \"welcome#index\"' },\r\n        { title: 'Resource route', code: 'resources :posts' },\r\n        { title: 'Nested routes', code: 'resources :posts do\\n  resources :comments\\nend' }\r\n      ]\r\n    }\r\n  ],\r\n  activerecord: [\r\n    {\r\n      title: 'ActiveRecord basics',\r\n      examples: [\r\n        { title: 'Find records', code: 'Post.find(1)\\nPost.where(title: \"Hello\")\\nPost.all' },\r\n        { title: 'Create records', code: 'Post.create(title: \"New Post\")\\npost = Post.new\\npost.save' }\r\n      ]\r\n    }\r\n  ],\r\n  migrations: [\r\n    {\r\n      title: 'Database migrations',\r\n      examples: [\r\n        { title: 'Create migration', code: 'rails generate migration CreatePosts title:string content:text' },\r\n        { title: 'Run migration', code: 'rails db:migrate\\nrails db:rollback' }\r\n      ]\r\n    }\r\n  ],\r\n  controllers: [\r\n    {\r\n      title: 'Controllers and views',\r\n      examples: [\r\n        { title: 'Basic controller', code: 'class PostsController < ApplicationController\\n  def index\\n    @posts = Post.all\\n  end\\nend' },\r\n        { title: 'View template', code: '<h1>Posts</h1>\\n<% @posts.each do |post| %>\\n  <h2><%= post.title %></h2>\\n<% end %>' }\r\n      ]\r\n    }\r\n  ],\r\n  rest: [\r\n    {\r\n      title: 'RESTful conventions',\r\n      examples: [\r\n        { title: 'REST actions', code: 'GET /posts (index)\\nPOST /posts (create)\\nGET /posts/:id (show)\\nPUT /posts/:id (update)\\nDELETE /posts/:id (destroy)' },\r\n        { title: 'API response', code: 'render json: @posts\\nrender json: { status: \"success\", data: @post }' }\r\n      ]\r\n    }\r\n  ]\r\n}; ","import React, { useState } from 'react';\r\nimport { usePageNavigation } from '../hooks/usePageNavigation';\r\nimport { railsSections, railsContent } from '../data/railsContent';\r\nimport PageLayout from '../components/PageLayout';\r\n\r\ninterface Section {\r\n  title: string;\r\n  examples: { title: string; code: string }[];\r\n}\r\n\r\nconst RailsPage: React.FC = () => {\r\n  const { activeSection, searchTerm, handleSectionChange, handleSearchChange } = usePageNavigation('overview', railsSections);\r\n  const [isSidePanelOpen, setIsSidePanelOpen] = useState(false);\r\n\r\n  const content = railsContent[activeSection] || null;\r\n  const loading = false;\r\n  const error = null;\r\n\r\n  const fallbackContent = {\r\n    description: \"Ruby on Rails is a powerful web framework that emphasizes convention over configuration. It's perfect for rapid web application development with built-in best practices.\",\r\n    benefits: \"Rails enables rapid prototyping and development with its 'Convention over Configuration' philosophy. It's widely used in startups and enterprise applications, offering excellent developer productivity.\",\r\n    difficulty: \"Intermediate to Advanced\",\r\n    topics: [\r\n      { icon: \"💎\", text: \"MVC architecture and conventions\" },\r\n      { icon: \"💎\", text: \"Routing and RESTful design\" },\r\n      { icon: \"💎\", text: \"ActiveRecord and database operations\" },\r\n      { icon: \"💎\", text: \"Controllers, views, and helpers\" },\r\n      { icon: \"💎\", text: \"Authentication and authorization\" }\r\n    ],\r\n    usefulLinks: [\r\n      { name: \"Rails Official Guide\", url: \"https://guides.rubyonrails.org/\" },\r\n      { name: \"Rails API Docs\", url: \"https://api.rubyonrails.org/\" },\r\n      { name: \"Rails Tutorial\", url: \"https://www.railstutorial.org/\" },\r\n      { name: \"Rails Community\", url: \"https://rubyonrails.org/community/\" }\r\n    ]\r\n  };\r\n\r\n  return (\r\n    <PageLayout\r\n      title=\"Ruby on Rails\"\r\n      icon=\"💎\"\r\n      sections={railsSections}\r\n      activeSection={activeSection}\r\n      searchTerm={searchTerm}\r\n      content={content}\r\n      loading={loading}\r\n      error={error}\r\n      isSidePanelOpen={isSidePanelOpen}\r\n      onSectionChange={handleSectionChange}\r\n      onSearchChange={handleSearchChange}\r\n      onToggleSidePanel={() => setIsSidePanelOpen(!isSidePanelOpen)}\r\n      fallbackContent={fallbackContent}\r\n    />\r\n  );\r\n};\r\n\r\nexport default RailsPage; ","import { useState, useEffect } from 'react';\r\nimport { useLocation, useNavigate } from 'react-router-dom';\r\n\r\nexport const usePageNavigation = (defaultSection: string, sections: any[] = []) => {\r\n  const location = useLocation();\r\n  const navigate = useNavigate();\r\n  const [searchTerm, setSearchTerm] = useState('');\r\n\r\n  // Extract section from URL or use default\r\n  const getSectionFromUrl = () => {\r\n    const pathParts = location.pathname.split('/');\r\n    const lastPart = pathParts[pathParts.length - 1];\r\n    \r\n    // If the last part is empty or if we're on a main route (like /typescript), use default\r\n    if (!lastPart || pathParts.length === 2) {\r\n      return defaultSection;\r\n    }\r\n    \r\n    // Check if the last part is actually a valid section ID\r\n    const isValidSection = sections.some(section => section.id === lastPart);\r\n    return isValidSection ? lastPart : defaultSection;\r\n  };\r\n\r\n  const [activeSection, setActiveSection] = useState(getSectionFromUrl());\r\n\r\n  // Auto-redirect to first section if no section is specified\r\n  useEffect(() => {\r\n    const pathParts = location.pathname.split('/');\r\n    const isOnMainRoute = pathParts.length === 2;\r\n    \r\n    if (isOnMainRoute && sections.length > 0) {\r\n      const firstSection = sections[0];\r\n      if (firstSection) {\r\n        navigate(`${location.pathname}/${firstSection.id}`, { replace: true });\r\n      }\r\n    }\r\n  }, [location.pathname, sections, navigate]);\r\n\r\n  // Update active section when URL changes\r\n  useEffect(() => {\r\n    const sectionFromUrl = getSectionFromUrl();\r\n    if (sectionFromUrl !== activeSection) {\r\n      setActiveSection(sectionFromUrl);\r\n    }\r\n  }, [location.pathname]);\r\n\r\n  const handleSectionChange = (sectionId: string) => {\r\n    setActiveSection(sectionId);\r\n    // Update URL to reflect the current section\r\n    const currentPath = location.pathname;\r\n    const basePath = currentPath.split('/').slice(0, -1).join('/') || currentPath;\r\n    navigate(`${basePath}/${sectionId}`, { replace: true });\r\n  };\r\n\r\n  const handleSearchChange = (term: string) => {\r\n    setSearchTerm(term);\r\n  };\r\n\r\n  return {\r\n    activeSection,\r\n    searchTerm,\r\n    handleSectionChange,\r\n    handleSearchChange\r\n  };\r\n}; "],"names":["_ref","title","icon","_jsx","className","children","_jsxs","Link","to","concat","sections","activeSection","searchTerm","onSectionChange","onSearchChange","isOpen","onToggle","filteredSections","filter","section","toLowerCase","includes","_Fragment","onClick","fill","stroke","viewBox","strokeLinecap","strokeLinejoin","strokeWidth","d","htmlFor","id","type","placeholder","value","onChange","e","target","map","window","innerWidth","undefined","length","role","code","language","content","loading","error","isSidePanelOpen","onToggleSidePanel","fallbackContent","PageHeader","SidePanel","renderContent","_sections$find2","_sections$find","find","s","location","reload","description","benefits","difficulty","topics","topic","index","text","usefulLinks","link","href","url","rel","name","currentSection","ContentSection","examples","example","exampleIndex","CodeBlock","railsSections","railsContent","basics","mvc","routing","activerecord","migrations","controllers","rest","RailsPage","handleSectionChange","handleSearchChange","usePageNavigation","setIsSidePanelOpen","useState","PageLayout","defaultSection","arguments","useLocation","navigate","useNavigate","setSearchTerm","getSectionFromUrl","pathParts","pathname","split","lastPart","some","setActiveSection","useEffect","firstSection","replace","sectionFromUrl","sectionId","currentPath","basePath","slice","join","term"],"sourceRoot":""}