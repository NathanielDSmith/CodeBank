{"version":3,"file":"static/js/1757.7025223d.chunk.js","mappings":"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","sources":["components/ContentSection.tsx","data/arrayContent.ts","pages/ArrayOperations.tsx","components/PageHeader.tsx","data/array|lazy|/^/.*$/|groupOptions: {}|namespace object","components/SidePanel.tsx","hooks/usePageNavigation.ts"],"sourcesContent":["import React from 'react';\r\nimport { ContentSectionProps } from '../types/index';\r\n\r\nconst ContentSection: React.FC<ContentSectionProps> = ({ title, children }) => {\r\n  return (\r\n    <section className=\"bg-black/70 backdrop-blur-sm rounded-lg p-3 sm:p-4 lg:p-6 border border-green-500/30 shadow-lg overflow-hidden\">\r\n      <h3 className=\"text-sm sm:text-lg lg:text-xl font-semibold text-green-400 mb-3 sm:mb-4 font-mono matrix-glow break-words\">{title}</h3>\r\n      <div className=\"overflow-x-auto\">\r\n        {children}\r\n      </div>\r\n    </section>\r\n  );\r\n};\r\n\r\nexport default ContentSection; ","import { Section } from '../types/index';\r\n\r\nexport const arraySections: Section[] = [\r\n  { id: 'basics', title: 'Basic Methods', icon: '📋' },\r\n  { id: 'filtering', title: 'Filtering & Sorting', icon: '🔍' },\r\n  { id: 'mapping', title: 'Mapping & Reducing', icon: '🔄' },\r\n  { id: 'adding', title: 'Adding & Removing', icon: '➕' },\r\n  { id: 'searching', title: 'Searching', icon: '🔎' },\r\n  { id: 'transforming', title: 'Transforming', icon: '✨' },\r\n  { id: 'flattening', title: 'Flattening & Grouping', icon: '📦' },\r\n  { id: 'chunking', title: 'Chunking & Partitioning', icon: '📊' },\r\n  { id: 'advanced', title: 'Advanced Patterns', icon: '🚀' },\r\n  { id: 'performance', title: 'Performance Tips', icon: '⚡' },\r\n  { id: 'best-practices', title: 'Best Practices', icon: '⭐' }\r\n];\r\n\r\n// Lazy loading function for content\r\nexport const loadArrayContent = async (sectionId: string) => {\r\n  try {\r\n    const module = await import(`./array/${sectionId}`);\r\n    return module.default;\r\n  } catch (error) {\r\n    console.error(`Failed to load content for section: ${sectionId}`, error);\r\n    return null;\r\n  }\r\n};\r\n\r\n// Preload function for better UX\r\nexport const preloadArraySection = (sectionId: string) => {\r\n  import(`./array/${sectionId}`);\r\n}; ","import React, { useState, useEffect } from 'react';\r\nimport { arraySections, loadArrayContent, preloadArraySection } from '../data/arrayContent';\r\nimport PageHeader from '../components/PageHeader';\r\nimport SidePanel from '../components/SidePanel';\r\nimport ContentSection from '../components/ContentSection';\r\nimport { usePageNavigation } from '../hooks/usePageNavigation';\r\n\r\ninterface Example {\r\n  title: string;\r\n  code: string;\r\n}\r\n\r\ninterface Section {\r\n  title: string;\r\n  examples: Example[];\r\n}\r\n\r\nconst ArrayOperations: React.FC = () => {\r\n  const { activeSection, searchTerm, handleSectionChange, handleSearchChange } = usePageNavigation('basics');\r\n  const [content, setContent] = useState<Section[] | null>(null);\r\n  const [loading, setLoading] = useState(false);\r\n  const [error, setError] = useState<string | null>(null);\r\n  const [isSidePanelOpen, setIsSidePanelOpen] = useState(false);\r\n\r\n  useEffect(() => {\r\n    const loadContent = async () => {\r\n      setLoading(true);\r\n      setError(null);\r\n      \r\n      try {\r\n        const sectionContent = await loadArrayContent(activeSection);\r\n        setContent(sectionContent);\r\n      } catch (err) {\r\n        setError('Failed to load content');\r\n        console.error('Error loading content:', err);\r\n      } finally {\r\n        setLoading(false);\r\n      }\r\n    };\r\n\r\n    loadContent();\r\n  }, [activeSection]);\r\n\r\n  // Preload next section for better UX\r\n  useEffect(() => {\r\n    const currentIndex = arraySections.findIndex(s => s.id === activeSection);\r\n    if (currentIndex < arraySections.length - 1) {\r\n      const nextSection = arraySections[currentIndex + 1];\r\n      preloadArraySection(nextSection.id);\r\n    }\r\n  }, [activeSection]);\r\n\r\n  if (error) {\r\n    return (\r\n      <div className=\"min-h-screen bg-black relative overflow-hidden\">\r\n        {/* Matrix digital rain background */}\r\n        <div className=\"absolute inset-0 opacity-10\">\r\n          <div className=\"matrix-rain\"></div>\r\n        </div>\r\n        \r\n        {/* Scan lines effect */}\r\n        <div className=\"absolute inset-0 opacity-5\">\r\n          <div className=\"scanlines\"></div>\r\n        </div>\r\n        \r\n        {/* Grid overlay */}\r\n        <div className=\"absolute inset-0 bg-gradient-to-b from-transparent via-green-900/5 to-green-900/10\"></div>\r\n        \r\n        <PageHeader title=\"Array Operations\" icon=\"📋\" />\r\n        <div className=\"max-w-7xl mx-auto px-4 sm:px-6 lg:px-8 py-8 relative z-10\">\r\n          <div className=\"bg-red-900/50 border border-red-500/30 rounded-lg p-6 backdrop-blur-sm\">\r\n            <h3 className=\"text-lg font-medium text-red-400 mb-2 font-mono\">ERROR: Content Load Failed</h3>\r\n            <p className=\"text-red-300 font-mono\">{error}</p>\r\n            <button \r\n              onClick={() => window.location.reload()}\r\n              className=\"mt-4 px-4 py-2 bg-red-600 text-white rounded-md hover:bg-red-700 font-mono transition-colors duration-300\"\r\n            >\r\n              RETRY\r\n            </button>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <div className=\"min-h-screen bg-black relative overflow-hidden\">\r\n      {/* Matrix digital rain background */}\r\n      <div className=\"absolute inset-0 opacity-10\">\r\n        <div className=\"matrix-rain\"></div>\r\n      </div>\r\n      \r\n      {/* Scan lines effect */}\r\n      <div className=\"absolute inset-0 opacity-5\">\r\n        <div className=\"scanlines\"></div>\r\n      </div>\r\n      \r\n      {/* Grid overlay */}\r\n      <div className=\"absolute inset-0 bg-gradient-to-b from-transparent via-green-900/5 to-green-900/10\"></div>\r\n      \r\n      <PageHeader title=\"Array Operations\" icon=\"📋\" />\r\n      <div className=\"max-w-7xl mx-auto px-4 sm:px-6 lg:px-8 py-4 sm:py-8 relative z-10\">\r\n        <div className=\"flex gap-4 sm:gap-8\">\r\n          {/* Side Panel */}\r\n          <div className=\"w-64 flex-shrink-0\">\r\n            <SidePanel\r\n              sections={arraySections}\r\n              activeSection={activeSection}\r\n              searchTerm={searchTerm}\r\n              onSectionChange={handleSectionChange}\r\n              onSearchChange={handleSearchChange}\r\n              isOpen={isSidePanelOpen}\r\n              onToggle={() => setIsSidePanelOpen(!isSidePanelOpen)}\r\n            />\r\n          </div>\r\n          {/* Main Content */}\r\n          <div className=\"flex-1 min-w-0\">\r\n            {loading ? (\r\n              <div className=\"text-center py-12\">\r\n                <div className=\"animate-spin rounded-full h-12 w-12 border-b-2 border-green-500 mx-auto mb-4\"></div>\r\n                <p className=\"text-green-400 font-mono\">INITIALIZING...</p>\r\n              </div>\r\n            ) : content ? (\r\n              <div className=\"space-y-8\">\r\n                <h2 className=\"text-2xl font-bold text-green-400 font-mono matrix-glow\">\r\n                  {arraySections.find(section => section.id === activeSection)?.title}\r\n                </h2>\r\n                {content.map((section, index) => (\r\n                  <ContentSection key={index} title={section.title}>\r\n                    <div className=\"space-y-4\">\r\n                      {section.examples.map((example: Example, exampleIndex: number) => (\r\n                        <div key={exampleIndex} className=\"bg-black/50 border border-green-500/30 rounded-lg p-6\">\r\n                          <h4 className=\"text-lg font-medium text-green-300 mb-3 font-mono\">\r\n                            {example.title}\r\n                          </h4>\r\n                          <pre className=\"bg-gray-900 border border-green-500/30 rounded-lg p-4 overflow-x-auto\">\r\n                            <code className=\"text-sm text-green-400 font-mono\">\r\n                              {example.code}\r\n                            </code>\r\n                          </pre>\r\n                        </div>\r\n                      ))}\r\n                    </div>\r\n                  </ContentSection>\r\n                ))}\r\n              </div>\r\n            ) : (\r\n              <div className=\"text-center py-12\">\r\n                <h2 className=\"text-2xl font-bold text-green-400 mb-4 font-mono\">\r\n                  {arraySections.find(section => section.id === activeSection)?.title}\r\n                </h2>\r\n                <p className=\"text-green-300 font-mono\">\r\n                  Content for {arraySections.find(section => section.id === activeSection)?.title} will be added here...\r\n                </p>\r\n              </div>\r\n            )}\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ArrayOperations; ","import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport { PageHeaderProps } from '../types/index';\r\n\r\nconst PageHeader: React.FC<PageHeaderProps> = ({ title, icon }) => {\r\n  return (\r\n    <header className=\"bg-black/80 backdrop-blur-sm border-b border-green-500/30 sticky top-0 z-50\">\r\n      <div className=\"max-w-7xl mx-auto px-4 sm:px-6 lg:px-8\">\r\n        <div className=\"flex justify-between items-center py-3 sm:py-4 lg:py-6\">\r\n          <div className=\"flex items-center\">\r\n            <Link to=\"/\" className=\"text-green-400 hover:text-green-300 mr-1 sm:mr-2 lg:mr-4 font-mono transition-colors duration-300 text-xs sm:text-sm lg:text-base\">\r\n              <span className=\"text-green-300\">$</span> cd /home\r\n            </Link>\r\n            <div className=\"flex items-center\">\r\n              <span className=\"text-lg sm:text-2xl lg:text-3xl mr-1 sm:mr-2 lg:mr-3 text-green-400\">{icon}</span>\r\n              <h1 className=\"text-xs sm:text-lg lg:text-3xl font-bold text-green-400 font-mono matrix-glow break-words\">{title}</h1>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </header>\r\n  );\r\n};\r\n\r\nexport default PageHeader; ","var map = {\n\t\"./adding\": [\n\t\t164,\n\t\t164\n\t],\n\t\"./adding.ts\": [\n\t\t164,\n\t\t164\n\t],\n\t\"./advanced\": [\n\t\t4627,\n\t\t4627\n\t],\n\t\"./advanced.ts\": [\n\t\t4627,\n\t\t4627\n\t],\n\t\"./basics\": [\n\t\t9374,\n\t\t9374\n\t],\n\t\"./basics.ts\": [\n\t\t9374,\n\t\t9374\n\t],\n\t\"./best-practices\": [\n\t\t9076,\n\t\t9076\n\t],\n\t\"./best-practices.ts\": [\n\t\t9076,\n\t\t9076\n\t],\n\t\"./chunking\": [\n\t\t9154,\n\t\t9154\n\t],\n\t\"./chunking.ts\": [\n\t\t9154,\n\t\t9154\n\t],\n\t\"./filtering\": [\n\t\t5935,\n\t\t5935\n\t],\n\t\"./filtering.ts\": [\n\t\t5935,\n\t\t5935\n\t],\n\t\"./flattening\": [\n\t\t7611,\n\t\t7611\n\t],\n\t\"./flattening.ts\": [\n\t\t7611,\n\t\t7611\n\t],\n\t\"./mapping\": [\n\t\t3567,\n\t\t3567\n\t],\n\t\"./mapping.ts\": [\n\t\t3567,\n\t\t3567\n\t],\n\t\"./performance\": [\n\t\t2215,\n\t\t2215\n\t],\n\t\"./performance.ts\": [\n\t\t2215,\n\t\t2215\n\t],\n\t\"./searching\": [\n\t\t725,\n\t\t725\n\t],\n\t\"./searching.ts\": [\n\t\t725,\n\t\t725\n\t],\n\t\"./transforming\": [\n\t\t5717,\n\t\t5717\n\t],\n\t\"./transforming.ts\": [\n\t\t5717,\n\t\t5717\n\t]\n};\nfunction webpackAsyncContext(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\treturn Promise.resolve().then(() => {\n\t\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\t\te.code = 'MODULE_NOT_FOUND';\n\t\t\tthrow e;\n\t\t});\n\t}\n\n\tvar ids = map[req], id = ids[0];\n\treturn __webpack_require__.e(ids[1]).then(() => {\n\t\treturn __webpack_require__(id);\n\t});\n}\nwebpackAsyncContext.keys = () => (Object.keys(map));\nwebpackAsyncContext.id = 3949;\nmodule.exports = webpackAsyncContext;","import React from 'react';\r\nimport { SidePanelProps } from '../types/index';\r\n\r\nconst SidePanel: React.FC<SidePanelProps> = ({\r\n  sections,\r\n  activeSection,\r\n  searchTerm,\r\n  onSectionChange,\r\n  onSearchChange,\r\n  isOpen = true,\r\n  onToggle\r\n}) => {\r\n  const filteredSections = sections.filter(section =>\r\n    section.title.toLowerCase().includes(searchTerm.toLowerCase())\r\n  );\r\n\r\n  return (\r\n    <>\r\n      {/* Mobile Toggle Button */}\r\n      <div className=\"lg:hidden fixed top-28 right-4 z-50\">\r\n        <button\r\n          onClick={onToggle}\r\n          className=\"bg-black/80 backdrop-blur-sm border border-green-500/50 rounded-lg p-3 text-green-400 hover:text-green-300 transition-colors duration-300\"\r\n          aria-label=\"Toggle navigation menu\"\r\n        >\r\n          <svg className=\"w-6 h-6\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\r\n            {isOpen ? (\r\n              <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M6 18L18 6M6 6l12 12\" />\r\n            ) : (\r\n              <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M4 6h16M4 12h16M4 18h16\" />\r\n            )}\r\n          </svg>\r\n        </button>\r\n      </div>\r\n\r\n      {/* Mobile Overlay */}\r\n      {isOpen && (\r\n        <div \r\n          className=\"lg:hidden fixed inset-0 bg-black/50 backdrop-blur-sm z-40\"\r\n          onClick={onToggle}\r\n        />\r\n      )}\r\n\r\n      {/* Side Panel */}\r\n      <div className={`\r\n        ${isOpen ? 'translate-x-0' : '-translate-x-full lg:translate-x-0'}\r\n        lg:w-64 w-80 flex-shrink-0\r\n        fixed lg:relative top-0 left-0 h-full lg:h-auto\r\n        z-50 lg:z-auto\r\n        transition-transform duration-300 ease-in-out\r\n      `}>\r\n        <div className=\"bg-black/90 backdrop-blur-sm border border-green-500/30 p-6 h-full lg:h-auto lg:sticky lg:top-8 overflow-y-auto\">\r\n          <div className=\"lg:hidden flex justify-between items-center mb-4\">\r\n            <h3 className=\"text-lg font-semibold text-green-400 font-mono\">NAVIGATION</h3>\r\n            <button\r\n              onClick={onToggle}\r\n              className=\"text-green-400 hover:text-green-300 transition-colors duration-300\"\r\n              aria-label=\"Close navigation menu\"\r\n            >\r\n              <svg className=\"w-6 h-6\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\r\n                <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M6 18L18 6M6 6l12 12\" />\r\n              </svg>\r\n            </button>\r\n          </div>\r\n          \r\n          <h3 className=\"hidden lg:block text-lg font-semibold text-green-400 mb-4 font-mono\">NAVIGATION</h3>\r\n          \r\n          {/* Search Box */}\r\n          <div className=\"mb-4\">\r\n            <label htmlFor=\"search-topics\" className=\"sr-only\">\r\n              Search topics\r\n            </label>\r\n            <input\r\n              id=\"search-topics\"\r\n              type=\"text\"\r\n              placeholder=\"grep -r 'pattern' /*\"\r\n              value={searchTerm}\r\n              onChange={(e) => onSearchChange(e.target.value)}\r\n              className=\"w-full px-3 py-2 bg-black/50 border border-green-500/50 rounded-lg focus:outline-none focus:ring-2 focus:ring-green-500/20 focus:border-green-400 text-green-300 font-mono placeholder-green-500/50\"\r\n              aria-label=\"Search topics in table of contents\"\r\n            />\r\n          </div>\r\n          \r\n          <nav className=\"space-y-2\" aria-label=\"Table of contents\">\r\n            {filteredSections.map((section) => (\r\n              <button\r\n                key={section.id}\r\n                onClick={() => {\r\n                  onSectionChange(section.id);\r\n                  // Close mobile menu after selection\r\n                  if (window.innerWidth < 1024) {\r\n                    onToggle?.();\r\n                  }\r\n                }}\r\n                className={`w-full text-left px-3 py-2 rounded-lg transition-all duration-300 font-mono ${\r\n                  activeSection === section.id\r\n                    ? 'bg-green-500/20 text-green-300 border border-green-400 shadow-lg'\r\n                    : 'text-green-400 hover:bg-green-500/10 hover:text-green-300 border border-transparent hover:border-green-500/50'\r\n                }`}\r\n                aria-current={activeSection === section.id ? 'page' : undefined}\r\n              >\r\n                <span className=\"mr-2\" aria-hidden=\"true\">{section.icon}</span>\r\n                {section.title}\r\n              </button>\r\n            ))}\r\n            \r\n            {filteredSections.length === 0 && (\r\n              <div className=\"text-green-500 text-sm py-2 font-mono\" role=\"status\">\r\n                No topics found matching \"{searchTerm}\"\r\n              </div>\r\n            )}\r\n          </nav>\r\n        </div>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default SidePanel; ","import { useState, useEffect } from 'react';\r\nimport { useLocation, useNavigate } from 'react-router-dom';\r\n\r\nexport const usePageNavigation = (defaultSection: string) => {\r\n  const location = useLocation();\r\n  const navigate = useNavigate();\r\n  const [searchTerm, setSearchTerm] = useState('');\r\n\r\n  // Extract section from URL or use default\r\n  const getSectionFromUrl = () => {\r\n    const pathParts = location.pathname.split('/');\r\n    return pathParts[pathParts.length - 1] || defaultSection;\r\n  };\r\n\r\n  const [activeSection, setActiveSection] = useState(getSectionFromUrl());\r\n\r\n  // Update active section when URL changes\r\n  useEffect(() => {\r\n    const sectionFromUrl = getSectionFromUrl();\r\n    if (sectionFromUrl !== activeSection) {\r\n      setActiveSection(sectionFromUrl);\r\n    }\r\n  }, [location.pathname]);\r\n\r\n  const handleSectionChange = (sectionId: string) => {\r\n    setActiveSection(sectionId);\r\n    // Update URL to reflect the current section\r\n    const currentPath = location.pathname;\r\n    const basePath = currentPath.split('/').slice(0, -1).join('/') || currentPath;\r\n    navigate(`${basePath}/${sectionId}`, { replace: true });\r\n  };\r\n\r\n  const handleSearchChange = (term: string) => {\r\n    setSearchTerm(term);\r\n  };\r\n\r\n  return {\r\n    activeSection,\r\n    searchTerm,\r\n    handleSectionChange,\r\n    handleSearchChange\r\n  };\r\n}; "],"names":["_ref","title","children","_jsxs","className","_jsx","arraySections","id","icon","ArrayOperations","_arraySections$find","_arraySections$find2","_arraySections$find3","activeSection","searchTerm","handleSectionChange","handleSearchChange","usePageNavigation","content","setContent","useState","loading","setLoading","error","setError","isSidePanelOpen","setIsSidePanelOpen","useEffect","async","sectionContent","concat","sectionId","default","console","loadArrayContent","err","loadContent","currentIndex","findIndex","s","length","nextSection","PageHeader","onClick","window","location","reload","SidePanel","sections","onSectionChange","onSearchChange","isOpen","onToggle","find","section","map","index","ContentSection","examples","example","exampleIndex","code","Link","to","webpackAsyncContext","req","__webpack_require__","o","Promise","resolve","then","e","Error","ids","keys","Object","module","exports","filteredSections","filter","toLowerCase","includes","_Fragment","fill","stroke","viewBox","strokeLinecap","strokeLinejoin","strokeWidth","d","htmlFor","type","placeholder","value","onChange","target","innerWidth","undefined","role","defaultSection","useLocation","navigate","useNavigate","setSearchTerm","getSectionFromUrl","pathParts","pathname","split","setActiveSection","sectionFromUrl","currentPath","basePath","slice","join","replace","term"],"sourceRoot":""}