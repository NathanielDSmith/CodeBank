{"version":3,"file":"static/js/7085.d76c6d76.chunk.js","mappings":"kIAAA,MAuGA,EAvGsB,CACpB,CACEA,MAAO,0BACPC,SAAU,CACR,CACED,MAAO,gCACPE,KAAK,ymCA8BP,CACEF,MAAO,yCACPE,KAAK,unCAgCX,CACEF,MAAO,iBACPC,SAAU,CACR,CACED,MAAO,+BACPE,KAAK,01B","sources":["data/string/search.ts"],"sourcesContent":["const searchContent = [\r\n  {\r\n    title: 'Finding Text in Strings',\r\n    examples: [\r\n      {\r\n        title: 'Using indexOf and lastIndexOf',\r\n        code: `// JavaScript: Finding the first occurrence\r\nlet text = \"The quick brown fox jumps over the lazy dog\";\r\nlet foxIndex = text.indexOf(\"fox\"); // 16\r\nlet catIndex = text.indexOf(\"cat\"); // -1 (not found)\r\n\r\n// Finding the last occurrence\r\nlet repeatedText = \"hello world hello\";\r\nlet firstHello = repeatedText.indexOf(\"hello\"); // 0\r\nlet lastHello = repeatedText.lastIndexOf(\"hello\"); // 12\r\n\r\n# Python: Finding the first occurrence\r\ntext = \"The quick brown fox jumps over the lazy dog\"\r\nfox_index = text.find(\"fox\")  # 16\r\ncat_index = text.find(\"cat\")  # -1 (not found)\r\n\r\n# Finding the last occurrence\r\nrepeated_text = \"hello world hello\"\r\nfirst_hello = repeated_text.find(\"hello\")  # 0\r\nlast_hello = repeated_text.rfind(\"hello\")  # 12\r\n\r\n// Java: Finding the first occurrence\r\nString text = \"The quick brown fox jumps over the lazy dog\";\r\nint foxIndex = text.indexOf(\"fox\"); // 16\r\nint catIndex = text.indexOf(\"cat\"); // -1 (not found)\r\n\r\n// Finding the last occurrence\r\nString repeatedText = \"hello world hello\";\r\nint firstHello = repeatedText.indexOf(\"hello\"); // 0\r\nint lastHello = repeatedText.lastIndexOf(\"hello\"); // 12`\r\n      },\r\n      {\r\n        title: 'Using includes and startsWith/endsWith',\r\n        code: `// JavaScript: Modern way to check if string contains substring\r\nlet message = \"Welcome to JavaScript\";\r\nlet hasWelcome = message.includes(\"Welcome\"); // true\r\nlet hasPython = message.includes(\"Python\"); // false\r\n\r\n// Checking start and end of strings\r\nlet filename = \"document.pdf\";\r\nlet isDocument = filename.startsWith(\"document\"); // true\r\nlet isPdf = filename.endsWith(\".pdf\"); // true\r\n\r\n# Python: Modern way to check if string contains substring\r\nmessage = \"Welcome to Python\"\r\nhas_welcome = \"Welcome\" in message  # True\r\nhas_java = \"Java\" in message  # False\r\n\r\n# Checking start and end of strings\r\nfilename = \"document.pdf\"\r\nis_document = filename.startswith(\"document\")  # True\r\nis_pdf = filename.endswith(\".pdf\")  # True\r\n\r\n// Java: Modern way to check if string contains substring\r\nString message = \"Welcome to Java\";\r\nboolean hasWelcome = message.contains(\"Welcome\"); // true\r\nboolean hasPython = message.contains(\"Python\"); // false\r\n\r\n// Checking start and end of strings\r\nString filename = \"document.pdf\";\r\nboolean isDocument = filename.startsWith(\"document\"); // true\r\nboolean isPdf = filename.endsWith(\".pdf\"); // true`\r\n      }\r\n    ]\r\n  },\r\n  {\r\n    title: 'Replacing Text',\r\n    examples: [\r\n      {\r\n        title: 'Using replace and replaceAll',\r\n        code: `// JavaScript: Basic string replacement\r\nlet text = \"Hello World\";\r\nlet replaced = text.replace(\"World\", \"JavaScript\"); // \"Hello JavaScript\"\r\n\r\n// Replace all occurrences (ES2021)\r\nlet sentence = \"The cat and the cat\";\r\nlet allCatsReplaced = sentence.replaceAll(\"cat\", \"dog\"); // \"The dog and the dog\"\r\n\r\n# Python: Basic string replacement\r\ntext = \"Hello World\"\r\nreplaced = text.replace(\"World\", \"Python\")  # \"Hello Python\"\r\n\r\n# Replace all occurrences\r\nsentence = \"The cat and the cat\"\r\nall_cats_replaced = sentence.replace(\"cat\", \"dog\")  # \"The dog and the dog\"\r\n\r\n// Java: Basic string replacement\r\nString text = \"Hello World\";\r\nString replaced = text.replace(\"World\", \"Java\"); // \"Hello Java\"\r\n\r\n// Replace all occurrences\r\nString sentence = \"The cat and the cat\";\r\nString allCatsReplaced = sentence.replace(\"cat\", \"dog\"); // \"The dog and the dog\"`\r\n      }\r\n    ]\r\n  }\r\n];\r\n\r\nexport default searchContent; "],"names":["title","examples","code"],"sourceRoot":""}