{"version":3,"file":"static/js/5988.220d6aeb.chunk.js","mappings":"kIAAA,SACE,CACEA,MAAO,eACPC,KAAK,6NAcP,CACED,MAAO,sBACPC,KAAK,ygBA4BP,CACED,MAAO,uBACPC,KAAK,ytBA4CP,CACED,MAAO,mBACPC,KAAK,yjBAgCP,CACED,MAAO,wBACPC,KAAK,8iB","sources":["data/go/structs.ts"],"sourcesContent":["export default [\r\n  {\r\n    title: \"Basic Struct\",\r\n    code: `package main\r\n\r\nimport \"fmt\"\r\n\r\ntype Person struct {\r\n    Name string\r\n    Age  int\r\n}\r\n\r\nfunc main() {\r\n    person := Person{Name: \"Alice\", Age: 30}\r\n    fmt.Printf(\"Name: %s, Age: %d\\\\n\", person.Name, person.Age)\r\n}`\r\n  },\r\n  {\r\n    title: \"Struct with Methods\",\r\n    code: `package main\r\n\r\nimport \"fmt\"\r\n\r\ntype Rectangle struct {\r\n    Width  float64\r\n    Height float64\r\n}\r\n\r\n// Method with value receiver\r\nfunc (r Rectangle) Area() float64 {\r\n    return r.Width * r.Height\r\n}\r\n\r\n// Method with pointer receiver\r\nfunc (r *Rectangle) Scale(factor float64) {\r\n    r.Width *= factor\r\n    r.Height *= factor\r\n}\r\n\r\nfunc main() {\r\n    rect := Rectangle{Width: 10, Height: 5}\r\n    fmt.Printf(\"Area: %f\\\\n\", rect.Area())\r\n    \r\n    rect.Scale(2)\r\n    fmt.Printf(\"Scaled Area: %f\\\\n\", rect.Area())\r\n}`\r\n  },\r\n  {\r\n    title: \"Interface Definition\",\r\n    code: `package main\r\n\r\nimport \"fmt\"\r\n\r\ntype Shape interface {\r\n    Area() float64\r\n    Perimeter() float64\r\n}\r\n\r\ntype Circle struct {\r\n    Radius float64\r\n}\r\n\r\nfunc (c Circle) Area() float64 {\r\n    return 3.14159 * c.Radius * c.Radius\r\n}\r\n\r\nfunc (c Circle) Perimeter() float64 {\r\n    return 2 * 3.14159 * c.Radius\r\n}\r\n\r\ntype Square struct {\r\n    Side float64\r\n}\r\n\r\nfunc (s Square) Area() float64 {\r\n    return s.Side * s.Side\r\n}\r\n\r\nfunc (s Square) Perimeter() float64 {\r\n    return 4 * s.Side\r\n}\r\n\r\nfunc main() {\r\n    shapes := []Shape{\r\n        Circle{Radius: 5},\r\n        Square{Side: 4},\r\n    }\r\n    \r\n    for _, shape := range shapes {\r\n        fmt.Printf(\"Area: %f, Perimeter: %f\\\\n\", shape.Area(), shape.Perimeter())\r\n    }\r\n}`\r\n  },\r\n  {\r\n    title: \"Embedded Structs\",\r\n    code: `package main\r\n\r\nimport \"fmt\"\r\n\r\ntype Animal struct {\r\n    Name string\r\n    Age  int\r\n}\r\n\r\nfunc (a Animal) Describe() string {\r\n    return fmt.Sprintf(\"%s is %d years old\", a.Name, a.Age)\r\n}\r\n\r\ntype Dog struct {\r\n    Animal      // Embedded struct\r\n    Breed string\r\n}\r\n\r\nfunc (d Dog) Bark() string {\r\n    return \"Woof!\"\r\n}\r\n\r\nfunc main() {\r\n    dog := Dog{\r\n        Animal: Animal{Name: \"Buddy\", Age: 3},\r\n        Breed:  \"Golden Retriever\",\r\n    }\r\n    \r\n    fmt.Println(dog.Describe()) // Inherited method\r\n    fmt.Println(dog.Bark())      // Dog's own method\r\n}`\r\n  },\r\n  {\r\n    title: \"Interface Composition\",\r\n    code: `package main\r\n\r\nimport \"fmt\"\r\n\r\ntype Reader interface {\r\n    Read() string\r\n}\r\n\r\ntype Writer interface {\r\n    Write(data string)\r\n}\r\n\r\n// Composed interface\r\ntype ReadWriter interface {\r\n    Reader\r\n    Writer\r\n}\r\n\r\ntype File struct {\r\n    content string\r\n}\r\n\r\nfunc (f *File) Read() string {\r\n    return f.content\r\n}\r\n\r\nfunc (f *File) Write(data string) {\r\n    f.content = data\r\n}\r\n\r\nfunc main() {\r\n    file := &File{}\r\n    \r\n    // File implements ReadWriter\r\n    var rw ReadWriter = file\r\n    \r\n    rw.Write(\"Hello, Go!\")\r\n    fmt.Println(rw.Read())\r\n}`\r\n  }\r\n]; "],"names":["title","code"],"sourceRoot":""}