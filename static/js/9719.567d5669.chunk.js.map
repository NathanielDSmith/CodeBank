{"version":3,"file":"static/js/9719.567d5669.chunk.js","mappings":"kIAAA,MAwMA,EAxMsB,CACpB,CACEA,MAAO,2BACPC,SAAU,CACR,CACED,MAAO,8BACPE,KAAK,qcAsBP,CACEF,MAAO,YACPE,KAAK,qbA0BX,CACEF,MAAO,YACPC,SAAU,CACR,CACED,MAAO,mBACPE,KAAK,4vBAsCP,CACEF,MAAO,oCACPE,KAAK,wbAuBX,CACEF,MAAO,eACPC,SAAU,CACR,CACED,MAAO,0BACPE,KAAK,6pBAgCP,CACEF,MAAO,mBACPE,KAAK,0pB","sources":["data/go/basics.ts"],"sourcesContent":["const basicsContent = [\r\n  {\r\n    title: 'Variables and Data Types',\r\n    examples: [\r\n      {\r\n        title: 'Basic variable declarations',\r\n        code: `package main\r\n\r\nimport \"fmt\"\r\n\r\nfunc main() {\r\n    // Simple variables\r\n    var name string = \"John\"\r\n    var age int = 25\r\n    var price float64 = 19.99\r\n    var isActive bool = true\r\n    \r\n    // Short variable declaration (Go's way)\r\n    message := \"Hello World\"\r\n    count := 42\r\n    \r\n    // Print to console\r\n    fmt.Println(\"Hello World\")\r\n    fmt.Println(\"Name:\", name)\r\n    fmt.Println(\"Age:\", age)\r\n    fmt.Println(\"Message:\", message)\r\n}`\r\n      },\r\n      {\r\n        title: 'Constants',\r\n        code: `package main\r\n\r\nimport \"fmt\"\r\n\r\nfunc main() {\r\n    // Constants - values that never change\r\n    const PI = 3.14159\r\n    const COMPANY_NAME = \"My Company\"\r\n    \r\n    // Use constants\r\n    radius := 5.0\r\n    area := PI * radius * radius\r\n    fmt.Println(\"Area:\", area)\r\n    \r\n    // Multiple constants\r\n    const (\r\n        SUNDAY = 0\r\n        MONDAY = 1\r\n        TUESDAY = 2\r\n    )\r\n    \r\n    fmt.Println(\"Monday is day\", MONDAY)\r\n}`\r\n      }\r\n    ]\r\n  },\r\n  {\r\n    title: 'Functions',\r\n    examples: [\r\n      {\r\n        title: 'Simple functions',\r\n        code: `package main\r\n\r\nimport \"fmt\"\r\n\r\n// Function that takes parameters and returns a value\r\nfunc add(a int, b int) int {\r\n    return a + b\r\n}\r\n\r\n// Function with multiple return values (Go's special feature)\r\nfunc divide(a int, b int) (int, error) {\r\n    if b == 0 {\r\n        return 0, fmt.Errorf(\"cannot divide by zero\")\r\n    }\r\n    return a / b, nil\r\n}\r\n\r\n// Function with no parameters\r\nfunc sayHello() {\r\n    fmt.Println(\"Hello!\")\r\n}\r\n\r\nfunc main() {\r\n    // Call functions\r\n    sayHello()\r\n    \r\n    result := add(5, 3)\r\n    fmt.Println(\"5 + 3 =\", result)\r\n    \r\n    // Handle multiple return values\r\n    quotient, err := divide(10, 2)\r\n    if err != nil {\r\n        fmt.Println(\"Error:\", err)\r\n    } else {\r\n        fmt.Println(\"10 / 2 =\", quotient)\r\n    }\r\n}`\r\n      },\r\n      {\r\n        title: 'Function with named return values',\r\n        code: `package main\r\n\r\nimport \"fmt\"\r\n\r\n// Named return values - Go's way of making code clearer\r\nfunc getPersonInfo() (name string, age int, city string) {\r\n    name = \"Alice\"\r\n    age = 30\r\n    city = \"New York\"\r\n    return // Go knows what to return\r\n}\r\n\r\nfunc main() {\r\n    // Call the function\r\n    name, age, city := getPersonInfo()\r\n    \r\n    fmt.Println(\"Name:\", name)\r\n    fmt.Println(\"Age:\", age)\r\n    fmt.Println(\"City:\", city)\r\n}`\r\n      }\r\n    ]\r\n  },\r\n  {\r\n    title: 'Control Flow',\r\n    examples: [\r\n      {\r\n        title: 'If statements and loops',\r\n        code: `package main\r\n\r\nimport \"fmt\"\r\n\r\nfunc main() {\r\n    // If statement\r\n    age := 18\r\n    if age >= 18 {\r\n        fmt.Println(\"You are an adult\")\r\n    } else {\r\n        fmt.Println(\"You are a minor\")\r\n    }\r\n    \r\n    // For loop (Go's only loop)\r\n    for i := 0; i < 5; i++ {\r\n        fmt.Println(\"Count:\", i)\r\n    }\r\n    \r\n    // For loop like a while loop\r\n    count := 0\r\n    for count < 3 {\r\n        fmt.Println(\"While count:\", count)\r\n        count++\r\n    }\r\n    \r\n    // For loop with range (like foreach)\r\n    fruits := []string{\"Apple\", \"Banana\", \"Orange\"}\r\n    for index, fruit := range fruits {\r\n        fmt.Printf(\"Fruit %d: %s\\n\", index, fruit)\r\n    }\r\n}`\r\n      },\r\n      {\r\n        title: 'Switch statement',\r\n        code: `package main\r\n\r\nimport \"fmt\"\r\n\r\nfunc main() {\r\n    day := \"Monday\"\r\n    \r\n    // Switch statement\r\n    switch day {\r\n    case \"Monday\":\r\n        fmt.Println(\"Start of work week\")\r\n    case \"Tuesday\", \"Wednesday\", \"Thursday\":\r\n        fmt.Println(\"Middle of the week\")\r\n    case \"Friday\":\r\n        fmt.Println(\"TGIF!\")\r\n    case \"Saturday\", \"Sunday\":\r\n        fmt.Println(\"Weekend!\")\r\n    default:\r\n        fmt.Println(\"Unknown day\")\r\n    }\r\n    \r\n    // Switch with expression\r\n    age := 25\r\n    switch {\r\n    case age < 18:\r\n        fmt.Println(\"Minor\")\r\n    case age < 65:\r\n        fmt.Println(\"Adult\")\r\n    default:\r\n        fmt.Println(\"Senior\")\r\n    }\r\n}`\r\n      }\r\n    ]\r\n  }\r\n];\r\n\r\nexport default basicsContent; "],"names":["title","examples","code"],"sourceRoot":""}